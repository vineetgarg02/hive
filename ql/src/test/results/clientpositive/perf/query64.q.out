PREHOOK: query: explain
with cs_ui as
 (select cs_item_sk
        ,sum(cs_ext_list_price) as sale,sum(cr_refunded_cash+cr_reversed_charge+cr_store_credit) as refund
  from catalog_sales
      ,catalog_returns
  where cs_item_sk = cr_item_sk
    and cs_order_number = cr_order_number
  group by cs_item_sk
  having sum(cs_ext_list_price)>2*sum(cr_refunded_cash+cr_reversed_charge+cr_store_credit)),
cross_sales as
 (select i_product_name product_name
     ,i_item_sk item_sk
     ,s_store_name store_name
     ,s_zip store_zip
     ,ad1.ca_street_number b_street_number
     ,ad1.ca_street_name b_streen_name
     ,ad1.ca_city b_city
     ,ad1.ca_zip b_zip
     ,ad2.ca_street_number c_street_number
     ,ad2.ca_street_name c_street_name
     ,ad2.ca_city c_city
     ,ad2.ca_zip c_zip
     ,d1.d_year as syear
     ,d2.d_year as fsyear
     ,d3.d_year s2year
     ,count(*) cnt
     ,sum(ss_wholesale_cost) s1
     ,sum(ss_list_price) s2
     ,sum(ss_coupon_amt) s3
  FROM   store_sales
        ,store_returns
        ,cs_ui
        ,date_dim d1
        ,date_dim d2
        ,date_dim d3
        ,store
        ,customer
        ,customer_demographics cd1
        ,customer_demographics cd2
        ,promotion
        ,household_demographics hd1
        ,household_demographics hd2
        ,customer_address ad1
        ,customer_address ad2
        ,income_band ib1
        ,income_band ib2
        ,item
  WHERE  ss_store_sk = s_store_sk AND
         ss_sold_date_sk = d1.d_date_sk AND
         ss_customer_sk = c_customer_sk AND
         ss_cdemo_sk= cd1.cd_demo_sk AND
         ss_hdemo_sk = hd1.hd_demo_sk AND
         ss_addr_sk = ad1.ca_address_sk and
         ss_item_sk = i_item_sk and
         ss_item_sk = sr_item_sk and
         ss_ticket_number = sr_ticket_number and
         ss_item_sk = cs_ui.cs_item_sk and
         c_current_cdemo_sk = cd2.cd_demo_sk AND
         c_current_hdemo_sk = hd2.hd_demo_sk AND
         c_current_addr_sk = ad2.ca_address_sk and
         c_first_sales_date_sk = d2.d_date_sk and
         c_first_shipto_date_sk = d3.d_date_sk and
         ss_promo_sk = p_promo_sk and
         hd1.hd_income_band_sk = ib1.ib_income_band_sk and
         hd2.hd_income_band_sk = ib2.ib_income_band_sk and
         cd1.cd_marital_status <> cd2.cd_marital_status and
         i_color in ('maroon','burnished','dim','steel','navajo','chocolate') and
         i_current_price between 35 and 35 + 10 and
         i_current_price between 35 + 1 and 35 + 15
group by i_product_name
       ,i_item_sk
       ,s_store_name
       ,s_zip
       ,ad1.ca_street_number
       ,ad1.ca_street_name
       ,ad1.ca_city
       ,ad1.ca_zip
       ,ad2.ca_street_number
       ,ad2.ca_street_name
       ,ad2.ca_city
       ,ad2.ca_zip
       ,d1.d_year
       ,d2.d_year
       ,d3.d_year
)
select cs1.product_name
     ,cs1.store_name
     ,cs1.store_zip
     ,cs1.b_street_number
     ,cs1.b_streen_name
     ,cs1.b_city
     ,cs1.b_zip
     ,cs1.c_street_number
     ,cs1.c_street_name
     ,cs1.c_city
     ,cs1.c_zip
     ,cs1.syear
     ,cs1.cnt
     ,cs1.s1
     ,cs1.s2
     ,cs1.s3
     ,cs2.s1
     ,cs2.s2
     ,cs2.s3
     ,cs2.syear
     ,cs2.cnt
from cross_sales cs1,cross_sales cs2
where cs1.item_sk=cs2.item_sk and
     cs1.syear = 2000 and
     cs2.syear = 2000 + 1 and
     cs2.cnt <= cs1.cnt and
     cs1.store_name = cs2.store_name and
     cs1.store_zip = cs2.store_zip
order by cs1.product_name
       ,cs1.store_name
       ,cs2.cnt
PREHOOK: type: QUERY
POSTHOOK: query: explain
with cs_ui as
 (select cs_item_sk
        ,sum(cs_ext_list_price) as sale,sum(cr_refunded_cash+cr_reversed_charge+cr_store_credit) as refund
  from catalog_sales
      ,catalog_returns
  where cs_item_sk = cr_item_sk
    and cs_order_number = cr_order_number
  group by cs_item_sk
  having sum(cs_ext_list_price)>2*sum(cr_refunded_cash+cr_reversed_charge+cr_store_credit)),
cross_sales as
 (select i_product_name product_name
     ,i_item_sk item_sk
     ,s_store_name store_name
     ,s_zip store_zip
     ,ad1.ca_street_number b_street_number
     ,ad1.ca_street_name b_streen_name
     ,ad1.ca_city b_city
     ,ad1.ca_zip b_zip
     ,ad2.ca_street_number c_street_number
     ,ad2.ca_street_name c_street_name
     ,ad2.ca_city c_city
     ,ad2.ca_zip c_zip
     ,d1.d_year as syear
     ,d2.d_year as fsyear
     ,d3.d_year s2year
     ,count(*) cnt
     ,sum(ss_wholesale_cost) s1
     ,sum(ss_list_price) s2
     ,sum(ss_coupon_amt) s3
  FROM   store_sales
        ,store_returns
        ,cs_ui
        ,date_dim d1
        ,date_dim d2
        ,date_dim d3
        ,store
        ,customer
        ,customer_demographics cd1
        ,customer_demographics cd2
        ,promotion
        ,household_demographics hd1
        ,household_demographics hd2
        ,customer_address ad1
        ,customer_address ad2
        ,income_band ib1
        ,income_band ib2
        ,item
  WHERE  ss_store_sk = s_store_sk AND
         ss_sold_date_sk = d1.d_date_sk AND
         ss_customer_sk = c_customer_sk AND
         ss_cdemo_sk= cd1.cd_demo_sk AND
         ss_hdemo_sk = hd1.hd_demo_sk AND
         ss_addr_sk = ad1.ca_address_sk and
         ss_item_sk = i_item_sk and
         ss_item_sk = sr_item_sk and
         ss_ticket_number = sr_ticket_number and
         ss_item_sk = cs_ui.cs_item_sk and
         c_current_cdemo_sk = cd2.cd_demo_sk AND
         c_current_hdemo_sk = hd2.hd_demo_sk AND
         c_current_addr_sk = ad2.ca_address_sk and
         c_first_sales_date_sk = d2.d_date_sk and
         c_first_shipto_date_sk = d3.d_date_sk and
         ss_promo_sk = p_promo_sk and
         hd1.hd_income_band_sk = ib1.ib_income_band_sk and
         hd2.hd_income_band_sk = ib2.ib_income_band_sk and
         cd1.cd_marital_status <> cd2.cd_marital_status and
         i_color in ('maroon','burnished','dim','steel','navajo','chocolate') and
         i_current_price between 35 and 35 + 10 and
         i_current_price between 35 + 1 and 35 + 15
group by i_product_name
       ,i_item_sk
       ,s_store_name
       ,s_zip
       ,ad1.ca_street_number
       ,ad1.ca_street_name
       ,ad1.ca_city
       ,ad1.ca_zip
       ,ad2.ca_street_number
       ,ad2.ca_street_name
       ,ad2.ca_city
       ,ad2.ca_zip
       ,d1.d_year
       ,d2.d_year
       ,d3.d_year
)
select cs1.product_name
     ,cs1.store_name
     ,cs1.store_zip
     ,cs1.b_street_number
     ,cs1.b_streen_name
     ,cs1.b_city
     ,cs1.b_zip
     ,cs1.c_street_number
     ,cs1.c_street_name
     ,cs1.c_city
     ,cs1.c_zip
     ,cs1.syear
     ,cs1.cnt
     ,cs1.s1
     ,cs1.s2
     ,cs1.s3
     ,cs2.s1
     ,cs2.s2
     ,cs2.s3
     ,cs2.syear
     ,cs2.cnt
from cross_sales cs1,cross_sales cs2
where cs1.item_sk=cs2.item_sk and
     cs1.syear = 2000 and
     cs2.syear = 2000 + 1 and
     cs2.cnt <= cs1.cnt and
     cs1.store_name = cs2.store_name and
     cs1.store_zip = cs2.store_zip
order by cs1.product_name
       ,cs1.store_name
       ,cs2.cnt
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 10 <- Reducer 9 (SIMPLE_EDGE)
Reducer 11 <- Reducer 10 (SIMPLE_EDGE), Reducer 21 (SIMPLE_EDGE)
Reducer 12 <- Reducer 11 (SIMPLE_EDGE)
Reducer 13 <- Map 1 (SIMPLE_EDGE), Map 22 (SIMPLE_EDGE)
Reducer 14 <- Map 22 (SIMPLE_EDGE), Reducer 13 (SIMPLE_EDGE)
Reducer 15 <- Map 33 (SIMPLE_EDGE), Reducer 14 (SIMPLE_EDGE)
Reducer 16 <- Map 34 (SIMPLE_EDGE), Reducer 15 (SIMPLE_EDGE)
Reducer 17 <- Reducer 16 (SIMPLE_EDGE), Reducer 32 (SIMPLE_EDGE)
Reducer 18 <- Reducer 17 (SIMPLE_EDGE), Reducer 39 (SIMPLE_EDGE)
Reducer 19 <- Map 33 (SIMPLE_EDGE), Reducer 18 (SIMPLE_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 22 (SIMPLE_EDGE)
Reducer 20 <- Map 34 (SIMPLE_EDGE), Reducer 19 (SIMPLE_EDGE)
Reducer 21 <- Reducer 20 (SIMPLE_EDGE)
Reducer 23 <- Map 22 (SIMPLE_EDGE), Reducer 43 (SIMPLE_EDGE)
Reducer 24 <- Reducer 23 (SIMPLE_EDGE), Reducer 50 (ONE_TO_ONE_EDGE)
Reducer 25 <- Map 54 (SIMPLE_EDGE), Reducer 24 (SIMPLE_EDGE)
Reducer 26 <- Reducer 25 (SIMPLE_EDGE), Reducer 36 (SIMPLE_EDGE)
Reducer 27 <- Map 55 (SIMPLE_EDGE), Reducer 26 (SIMPLE_EDGE)
Reducer 28 <- Map 22 (SIMPLE_EDGE), Reducer 45 (SIMPLE_EDGE)
Reducer 29 <- Reducer 28 (SIMPLE_EDGE), Reducer 52 (ONE_TO_ONE_EDGE)
Reducer 3 <- Map 22 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 30 <- Map 54 (SIMPLE_EDGE), Reducer 29 (SIMPLE_EDGE)
Reducer 31 <- Reducer 30 (SIMPLE_EDGE), Reducer 38 (SIMPLE_EDGE)
Reducer 32 <- Map 55 (SIMPLE_EDGE), Reducer 31 (SIMPLE_EDGE)
Reducer 36 <- Map 35 (SIMPLE_EDGE), Map 40 (SIMPLE_EDGE)
Reducer 37 <- Map 35 (SIMPLE_EDGE), Map 40 (SIMPLE_EDGE)
Reducer 38 <- Map 35 (SIMPLE_EDGE), Map 40 (SIMPLE_EDGE)
Reducer 39 <- Map 35 (SIMPLE_EDGE), Map 40 (SIMPLE_EDGE)
Reducer 4 <- Map 33 (SIMPLE_EDGE), Reducer 3 (SIMPLE_EDGE)
Reducer 42 <- Map 41 (SIMPLE_EDGE), Map 46 (SIMPLE_EDGE)
Reducer 43 <- Map 47 (SIMPLE_EDGE), Reducer 42 (SIMPLE_EDGE)
Reducer 44 <- Map 41 (SIMPLE_EDGE), Map 46 (SIMPLE_EDGE)
Reducer 45 <- Map 47 (SIMPLE_EDGE), Reducer 44 (SIMPLE_EDGE)
Reducer 49 <- Map 48 (SIMPLE_EDGE), Map 53 (SIMPLE_EDGE)
Reducer 5 <- Map 34 (SIMPLE_EDGE), Reducer 4 (SIMPLE_EDGE)
Reducer 50 <- Reducer 49 (SIMPLE_EDGE)
Reducer 51 <- Map 48 (SIMPLE_EDGE), Map 53 (SIMPLE_EDGE)
Reducer 52 <- Reducer 51 (SIMPLE_EDGE)
Reducer 6 <- Reducer 27 (SIMPLE_EDGE), Reducer 5 (SIMPLE_EDGE)
Reducer 7 <- Reducer 37 (SIMPLE_EDGE), Reducer 6 (SIMPLE_EDGE)
Reducer 8 <- Map 33 (SIMPLE_EDGE), Reducer 7 (SIMPLE_EDGE)
Reducer 9 <- Map 34 (SIMPLE_EDGE), Reducer 8 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 12
      File Output Operator [FS_264]
        Select Operator [SEL_262] (rows=301286918 width=88)
          Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8","_col9","_col10","_col11","_col12","_col13","_col14","_col15","_col16","_col17","_col18","_col19","_col20"]
        <-Reducer 11 [SIMPLE_EDGE]
          SHUFFLE [RS_261]
            Select Operator [SEL_260] (rows=301286918 width=88)
              Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8","_col9","_col10","_col11","_col12","_col13","_col14","_col15","_col16","_col17","_col18"]
              Filter Operator [FIL_259] (rows=301286918 width=88)
                predicate:(_col30 <= _col13)
                Merge Join Operator [MERGEJOIN_637] (rows=903860754 width=88)
                  Conds:RS_256._col2, _col1, _col3=RS_257._col2, _col1, _col3(Inner),Output:["_col0","_col2","_col3","_col4","_col5","_col6","_col7","_col8","_col9","_col10","_col11","_col13","_col14","_col15","_col16","_col30","_col31","_col32","_col33"]
                <-Reducer 10 [SIMPLE_EDGE]
                  SHUFFLE [RS_256]
                    PartitionCols:_col2, _col1, _col3
                    Select Operator [SEL_126] (rows=821691577 width=88)
                      Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8","_col9","_col10","_col11","_col13","_col14","_col15","_col16"]
                      Group By Operator [GBY_125] (rows=821691577 width=88)
                        Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8","_col9","_col10","_col11","_col12","_col13","_col14","_col15","_col16","_col17"],aggregations:["count(VALUE._col0)","sum(VALUE._col1)","sum(VALUE._col2)","sum(VALUE._col3)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3, KEY._col4, KEY._col5, KEY._col6, KEY._col7, KEY._col8, KEY._col9, KEY._col10, KEY._col11, KEY._col12, KEY._col13
                      <-Reducer 9 [SIMPLE_EDGE]
                        SHUFFLE [RS_124]
                          PartitionCols:_col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13
                          Group By Operator [GBY_123] (rows=1643383155 width=88)
                            Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8","_col9","_col10","_col11","_col12","_col13","_col14","_col15","_col16","_col17"],aggregations:["count()","sum(_col37)","sum(_col38)","sum(_col39)"],keys:_col22, _col40, _col23, _col53, _col54, _col55, _col56, _col13, _col14, _col15, _col16, _col7, _col9, _col43
                            Merge Join Operator [MERGEJOIN_618] (rows=1643383155 width=88)
                              Conds:RS_119._col33=RS_120._col0(Inner),Output:["_col7","_col9","_col13","_col14","_col15","_col16","_col22","_col23","_col37","_col38","_col39","_col40","_col43","_col53","_col54","_col55","_col56"]
                            <-Map 34 [SIMPLE_EDGE]
                              SHUFFLE [RS_120]
                                PartitionCols:_col0
                                Select Operator [SEL_14] (rows=40000000 width=1014)
                                  Output:["_col0","_col1","_col2","_col3","_col4"]
                                  Filter Operator [FIL_567] (rows=40000000 width=1014)
                                    predicate:ca_address_sk is not null
                                    TableScan [TS_12] (rows=40000000 width=1014)
                                      default@customer_address,ad2,Tbl:COMPLETE,Col:NONE,Output:["ca_address_sk","ca_street_number","ca_street_name","ca_city","ca_zip"]
                            <-Reducer 8 [SIMPLE_EDGE]
                              SHUFFLE [RS_119]
                                PartitionCols:_col33
                                Filter Operator [FIL_118] (rows=1493984654 width=88)
                                  predicate:(_col51 <> _col11)
                                  Merge Join Operator [MERGEJOIN_617] (rows=1493984654 width=88)
                                    Conds:RS_115._col31=RS_116._col0(Inner),Output:["_col7","_col9","_col11","_col13","_col14","_col15","_col16","_col22","_col23","_col33","_col37","_col38","_col39","_col40","_col43","_col51"]
                                  <-Map 33 [SIMPLE_EDGE]
                                    SHUFFLE [RS_116]
                                      PartitionCols:_col0
                                      Select Operator [SEL_11] (rows=1861800 width=385)
                                        Output:["_col0","_col1"]
                                        Filter Operator [FIL_566] (rows=1861800 width=385)
                                          predicate:cd_demo_sk is not null
                                          TableScan [TS_9] (rows=1861800 width=385)
                                            default@customer_demographics,cd2,Tbl:COMPLETE,Col:NONE,Output:["cd_demo_sk","cd_marital_status"]
                                  <-Reducer 7 [SIMPLE_EDGE]
                                    SHUFFLE [RS_115]
                                      PartitionCols:_col31
                                      Merge Join Operator [MERGEJOIN_616] (rows=1358167838 width=88)
                                        Conds:RS_112._col2=RS_113._col0(Inner),Output:["_col7","_col9","_col11","_col13","_col14","_col15","_col16","_col22","_col23","_col31","_col33","_col37","_col38","_col39","_col40","_col43"]
                                      <-Reducer 37 [SIMPLE_EDGE]
                                        SHUFFLE [RS_113]
                                          PartitionCols:_col0
                                          Merge Join Operator [MERGEJOIN_614] (rows=7920 width=107)
                                            Conds:RS_87._col1=RS_88._col0(Inner),Output:["_col0"]
                                          <-Map 35 [SIMPLE_EDGE]
                                            SHUFFLE [RS_87]
                                              PartitionCols:_col1
                                              Select Operator [SEL_17] (rows=7200 width=107)
                                                Output:["_col0","_col1"]
                                                Filter Operator [FIL_568] (rows=7200 width=107)
                                                  predicate:(hd_demo_sk is not null and hd_income_band_sk is not null)
                                                  TableScan [TS_15] (rows=7200 width=107)
                                                    default@household_demographics,hd1,Tbl:COMPLETE,Col:NONE,Output:["hd_demo_sk","hd_income_band_sk"]
                                          <-Map 40 [SIMPLE_EDGE]
                                            SHUFFLE [RS_88]
                                              PartitionCols:_col0
                                              Select Operator [SEL_20] (rows=20 width=12)
                                                Output:["_col0"]
                                                Filter Operator [FIL_569] (rows=20 width=12)
                                                  predicate:ib_income_band_sk is not null
                                                  TableScan [TS_18] (rows=20 width=12)
                                                    default@income_band,ib1,Tbl:COMPLETE,Col:NONE,Output:["ib_income_band_sk"]
                                      <-Reducer 6 [SIMPLE_EDGE]
                                        SHUFFLE [RS_112]
                                          PartitionCols:_col2
                                          Merge Join Operator [MERGEJOIN_615] (rows=1234698008 width=88)
                                            Conds:RS_109._col0=RS_110._col13(Inner),Output:["_col2","_col7","_col9","_col11","_col13","_col14","_col15","_col16","_col22","_col23","_col31","_col33","_col37","_col38","_col39","_col40","_col43"]
                                          <-Reducer 27 [SIMPLE_EDGE]
                                            SHUFFLE [RS_110]
                                              PartitionCols:_col13
                                              Select Operator [SEL_80] (rows=1122452711 width=88)
                                                Output:["_col5","_col6","_col13","_col14","_col16","_col20","_col21","_col22","_col23","_col26"]
                                                Merge Join Operator [MERGEJOIN_613] (rows=1122452711 width=88)
                                                  Conds:RS_77._col17=RS_78._col0(Inner),Output:["_col4","_col5","_col12","_col13","_col15","_col19","_col20","_col21","_col22","_col25"]
                                                <-Map 55 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_78]
                                                    PartitionCols:_col0
                                                    Select Operator [SEL_70] (rows=2300 width=1179)
                                                      Output:["_col0"]
                                                      Filter Operator [FIL_577] (rows=2300 width=1179)
                                                        predicate:p_promo_sk is not null
                                                        TableScan [TS_68] (rows=2300 width=1179)
                                                          default@promotion,promotion,Tbl:COMPLETE,Col:NONE,Output:["p_promo_sk"]
                                                <-Reducer 26 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_77]
                                                    PartitionCols:_col17
                                                    Merge Join Operator [MERGEJOIN_612] (rows=1020411534 width=88)
                                                      Conds:RS_74._col0=RS_75._col11(Inner),Output:["_col4","_col5","_col12","_col13","_col15","_col17","_col19","_col20","_col21","_col22","_col25"]
                                                    <-Reducer 25 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_75]
                                                        PartitionCols:_col11
                                                        Select Operator [SEL_67] (rows=927646829 width=88)
                                                          Output:["_col1","_col2","_col9","_col10","_col11","_col12","_col14","_col16","_col17","_col18","_col19","_col22"]
                                                          Merge Join Operator [MERGEJOIN_611] (rows=927646829 width=88)
                                                            Conds:RS_64._col6=RS_65._col0(Inner),Output:["_col2","_col3","_col4","_col5","_col7","_col9","_col10","_col11","_col12","_col15","_col24","_col25"]
                                                          <-Map 54 [SIMPLE_EDGE]
                                                            SHUFFLE [RS_65]
                                                              PartitionCols:_col0
                                                              Select Operator [SEL_51] (rows=1704 width=1910)
                                                                Output:["_col0","_col1","_col2"]
                                                                Filter Operator [FIL_576] (rows=1704 width=1910)
                                                                  predicate:(s_store_sk is not null and s_store_name is not null and s_zip is not null)
                                                                  TableScan [TS_49] (rows=1704 width=1910)
                                                                    default@store,store,Tbl:COMPLETE,Col:NONE,Output:["s_store_sk","s_store_name","s_zip"]
                                                          <-Reducer 24 [SIMPLE_EDGE]
                                                            SHUFFLE [RS_64]
                                                              PartitionCols:_col6
                                                              Merge Join Operator [MERGEJOIN_610] (rows=843315281 width=88)
                                                                Conds:RS_61._col1=RS_62._col0(Inner),Output:["_col2","_col3","_col4","_col5","_col6","_col7","_col9","_col10","_col11","_col12","_col15"]
                                                              <-Reducer 23 [SIMPLE_EDGE]
                                                                SHUFFLE [RS_61]
                                                                  PartitionCols:_col1
                                                                  Merge Join Operator [MERGEJOIN_608] (rows=766650239 width=88)
                                                                    Conds:RS_58._col0=RS_59._col0(Inner),Output:["_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col9","_col10","_col11","_col12","_col15"]
                                                                  <-Map 22 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_59]
                                                                      PartitionCols:_col0
                                                                      Select Operator [SEL_32] (rows=36524 width=1119)
                                                                        Output:["_col0"]
                                                                        Filter Operator [FIL_573] (rows=36524 width=1119)
                                                                          predicate:((d_year = 2000) and d_date_sk is not null)
                                                                          TableScan [TS_3] (rows=73049 width=1119)
                                                                            default@date_dim,d2,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year"]
                                                                  <-Reducer 43 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_58]
                                                                      PartitionCols:_col0
                                                                      Merge Join Operator [MERGEJOIN_607] (rows=696954748 width=88)
                                                                        Conds:RS_55._col1, _col8=RS_56._col0, _col1(Inner),Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col9","_col10","_col11","_col12","_col15"]
                                                                      <-Map 47 [SIMPLE_EDGE]
                                                                        SHUFFLE [RS_56]
                                                                          PartitionCols:_col0, _col1
                                                                          Select Operator [SEL_29] (rows=57591150 width=77)
                                                                            Output:["_col0","_col1"]
                                                                            Filter Operator [FIL_572] (rows=57591150 width=77)
                                                                              predicate:(sr_item_sk is not null and sr_ticket_number is not null)
                                                                              TableScan [TS_27] (rows=57591150 width=77)
                                                                                default@store_returns,store_returns,Tbl:COMPLETE,Col:NONE,Output:["sr_item_sk","sr_ticket_number"]
                                                                      <-Reducer 42 [SIMPLE_EDGE]
                                                                        SHUFFLE [RS_55]
                                                                          PartitionCols:_col1, _col8
                                                                          Merge Join Operator [MERGEJOIN_606] (rows=633595212 width=88)
                                                                            Conds:RS_52._col1=RS_53._col0(Inner),Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8","_col9","_col10","_col11","_col12","_col15"]
                                                                          <-Map 41 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_52]
                                                                              PartitionCols:_col1
                                                                              Select Operator [SEL_23] (rows=575995635 width=88)
                                                                                Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8","_col9","_col10","_col11"]
                                                                                Filter Operator [FIL_570] (rows=575995635 width=88)
                                                                                  predicate:(ss_item_sk is not null and ss_ticket_number is not null and ss_sold_date_sk is not null and ss_store_sk is not null and ss_customer_sk is not null and ss_cdemo_sk is not null and ss_promo_sk is not null and ss_hdemo_sk is not null and ss_addr_sk is not null)
                                                                                  TableScan [TS_21] (rows=575995635 width=88)
                                                                                    default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_item_sk","ss_customer_sk","ss_cdemo_sk","ss_hdemo_sk","ss_addr_sk","ss_store_sk","ss_promo_sk","ss_ticket_number","ss_wholesale_cost","ss_list_price","ss_coupon_amt"]
                                                                          <-Map 46 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_53]
                                                                              PartitionCols:_col0
                                                                              Select Operator [SEL_26] (rows=2851 width=1436)
                                                                                Output:["_col0","_col3"]
                                                                                Filter Operator [FIL_571] (rows=2851 width=1436)
                                                                                  predicate:((i_color) IN ('maroon', 'burnished', 'dim', 'steel', 'navajo', 'chocolate') and i_current_price BETWEEN 35 AND 45 and i_current_price BETWEEN 36 AND 50 and i_item_sk is not null)
                                                                                  TableScan [TS_24] (rows=462000 width=1436)
                                                                                    default@item,item,Tbl:COMPLETE,Col:NONE,Output:["i_item_sk","i_current_price","i_color","i_product_name"]
                                                              <-Reducer 50 [ONE_TO_ONE_EDGE]
                                                                FORWARD [RS_62]
                                                                  PartitionCols:_col0
                                                                  Select Operator [SEL_48] (rows=52798137 width=135)
                                                                    Output:["_col0"]
                                                                    Filter Operator [FIL_47] (rows=52798137 width=135)
                                                                      predicate:(_col1 > (2 * _col2))
                                                                      Group By Operator [GBY_46] (rows=158394413 width=135)
                                                                        Output:["_col0","_col1","_col2"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)"],keys:KEY._col0
                                                                      <-Reducer 49 [SIMPLE_EDGE]
                                                                        SHUFFLE [RS_45]
                                                                          PartitionCols:_col0
                                                                          Group By Operator [GBY_44] (rows=316788826 width=135)
                                                                            Output:["_col0","_col1","_col2"],aggregations:["sum(_col1)","sum(_col2)"],keys:_col0
                                                                            Select Operator [SEL_42] (rows=316788826 width=135)
                                                                              Output:["_col0","_col1","_col2"]
                                                                              Merge Join Operator [MERGEJOIN_609] (rows=316788826 width=135)
                                                                                Conds:RS_39._col0, _col1=RS_40._col0, _col1(Inner),Output:["_col0","_col2","_col5","_col6","_col7"]
                                                                              <-Map 48 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_39]
                                                                                  PartitionCols:_col0, _col1
                                                                                  Select Operator [SEL_35] (rows=287989836 width=135)
                                                                                    Output:["_col0","_col1","_col2"]
                                                                                    Filter Operator [FIL_574] (rows=287989836 width=135)
                                                                                      predicate:(cs_order_number is not null and cs_item_sk is not null)
                                                                                      TableScan [TS_33] (rows=287989836 width=135)
                                                                                        default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:NONE,Output:["cs_item_sk","cs_order_number","cs_ext_list_price"]
                                                                              <-Map 53 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_40]
                                                                                  PartitionCols:_col0, _col1
                                                                                  Select Operator [SEL_38] (rows=28798881 width=106)
                                                                                    Output:["_col0","_col1","_col2","_col3","_col4"]
                                                                                    Filter Operator [FIL_575] (rows=28798881 width=106)
                                                                                      predicate:(cr_order_number is not null and cr_item_sk is not null)
                                                                                      TableScan [TS_36] (rows=28798881 width=106)
                                                                                        default@catalog_returns,catalog_returns,Tbl:COMPLETE,Col:NONE,Output:["cr_item_sk","cr_order_number","cr_refunded_cash","cr_reversed_charge","cr_store_credit"]
                                                    <-Reducer 36 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_74]
                                                        PartitionCols:_col0
                                                        Merge Join Operator [MERGEJOIN_605] (rows=7920 width=107)
                                                          Conds:RS_71._col1=RS_72._col0(Inner),Output:["_col0"]
                                                        <-Map 35 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_71]
                                                            PartitionCols:_col1
                                                             Please refer to the previous Select Operator [SEL_17]
                                                        <-Map 40 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_72]
                                                            PartitionCols:_col0
                                                             Please refer to the previous Select Operator [SEL_20]
                                          <-Reducer 5 [SIMPLE_EDGE]
                                            SHUFFLE [RS_109]
                                              PartitionCols:_col0
                                              Merge Join Operator [MERGEJOIN_604] (rows=117128008 width=860)
                                                Conds:RS_106._col3=RS_107._col0(Inner),Output:["_col0","_col2","_col7","_col9","_col11","_col13","_col14","_col15","_col16"]
                                              <-Map 34 [SIMPLE_EDGE]
                                                SHUFFLE [RS_107]
                                                  PartitionCols:_col0
                                                   Please refer to the previous Select Operator [SEL_14]
                                              <-Reducer 4 [SIMPLE_EDGE]
                                                SHUFFLE [RS_106]
                                                  PartitionCols:_col3
                                                  Merge Join Operator [MERGEJOIN_603] (rows=106480005 width=860)
                                                    Conds:RS_103._col1=RS_104._col0(Inner),Output:["_col0","_col2","_col3","_col7","_col9","_col11"]
                                                  <-Map 33 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_104]
                                                      PartitionCols:_col0
                                                       Please refer to the previous Select Operator [SEL_11]
                                                  <-Reducer 3 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_103]
                                                      PartitionCols:_col1
                                                      Merge Join Operator [MERGEJOIN_602] (rows=96800003 width=860)
                                                        Conds:RS_100._col4=RS_101._col0(Inner),Output:["_col0","_col1","_col2","_col3","_col7","_col9"]
                                                      <-Map 22 [SIMPLE_EDGE]
                                                        SHUFFLE [RS_101]
                                                          PartitionCols:_col0
                                                          Select Operator [SEL_5] (rows=73049 width=1119)
                                                            Output:["_col0","_col1"]
                                                            Filter Operator [FIL_564] (rows=73049 width=1119)
                                                              predicate:d_date_sk is not null
                                                               Please refer to the previous TableScan [TS_3]
                                                      <-Reducer 2 [SIMPLE_EDGE]
                                                        SHUFFLE [RS_100]
                                                          PartitionCols:_col4
                                                          Merge Join Operator [MERGEJOIN_601] (rows=88000001 width=860)
                                                            Conds:RS_97._col5=RS_98._col0(Inner),Output:["_col0","_col1","_col2","_col3","_col4","_col7"]
                                                          <-Map 22 [SIMPLE_EDGE]
                                                            SHUFFLE [RS_98]
                                                              PartitionCols:_col0
                                                               Please refer to the previous Select Operator [SEL_5]
                                                          <-Map 1 [SIMPLE_EDGE]
                                                            SHUFFLE [RS_97]
                                                              PartitionCols:_col5
                                                              Select Operator [SEL_2] (rows=80000000 width=860)
                                                                Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                                                                Filter Operator [FIL_563] (rows=80000000 width=860)
                                                                  predicate:(c_customer_sk is not null and c_first_shipto_date_sk is not null and c_first_sales_date_sk is not null and c_current_cdemo_sk is not null and c_current_hdemo_sk is not null and c_current_addr_sk is not null)
                                                                  TableScan [TS_0] (rows=80000000 width=860)
                                                                    default@customer,customer,Tbl:COMPLETE,Col:NONE,Output:["c_customer_sk","c_current_cdemo_sk","c_current_hdemo_sk","c_current_addr_sk","c_first_shipto_date_sk","c_first_sales_date_sk"]
                <-Reducer 21 [SIMPLE_EDGE]
                  SHUFFLE [RS_257]
                    PartitionCols:_col2, _col1, _col3
                    Select Operator [SEL_254] (rows=821691577 width=88)
                      Output:["_col1","_col2","_col3","_col13","_col14","_col15","_col16"]
                      Group By Operator [GBY_253] (rows=821691577 width=88)
                        Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8","_col9","_col10","_col11","_col12","_col13","_col14","_col15","_col16","_col17"],aggregations:["count(VALUE._col0)","sum(VALUE._col1)","sum(VALUE._col2)","sum(VALUE._col3)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3, KEY._col4, KEY._col5, KEY._col6, KEY._col7, KEY._col8, KEY._col9, KEY._col10, KEY._col11, KEY._col12, KEY._col13
                      <-Reducer 20 [SIMPLE_EDGE]
                        SHUFFLE [RS_252]
                          PartitionCols:_col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13
                          Group By Operator [GBY_251] (rows=1643383155 width=88)
                            Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8","_col9","_col10","_col11","_col12","_col13","_col14","_col15","_col16","_col17"],aggregations:["count()","sum(_col37)","sum(_col38)","sum(_col39)"],keys:_col22, _col40, _col23, _col53, _col54, _col55, _col56, _col13, _col14, _col15, _col16, _col7, _col9, _col43
                            Merge Join Operator [MERGEJOIN_636] (rows=1643383155 width=88)
                              Conds:RS_247._col33=RS_248._col0(Inner),Output:["_col7","_col9","_col13","_col14","_col15","_col16","_col22","_col23","_col37","_col38","_col39","_col40","_col43","_col53","_col54","_col55","_col56"]
                            <-Map 34 [SIMPLE_EDGE]
                              SHUFFLE [RS_248]
                                PartitionCols:_col0
                                 Please refer to the previous Select Operator [SEL_14]
                            <-Reducer 19 [SIMPLE_EDGE]
                              SHUFFLE [RS_247]
                                PartitionCols:_col33
                                Filter Operator [FIL_246] (rows=1493984654 width=88)
                                  predicate:(_col51 <> _col11)
                                  Merge Join Operator [MERGEJOIN_635] (rows=1493984654 width=88)
                                    Conds:RS_243._col31=RS_244._col0(Inner),Output:["_col7","_col9","_col11","_col13","_col14","_col15","_col16","_col22","_col23","_col33","_col37","_col38","_col39","_col40","_col43","_col51"]
                                  <-Map 33 [SIMPLE_EDGE]
                                    SHUFFLE [RS_244]
                                      PartitionCols:_col0
                                       Please refer to the previous Select Operator [SEL_11]
                                  <-Reducer 18 [SIMPLE_EDGE]
                                    SHUFFLE [RS_243]
                                      PartitionCols:_col31
                                      Merge Join Operator [MERGEJOIN_634] (rows=1358167838 width=88)
                                        Conds:RS_240._col2=RS_241._col0(Inner),Output:["_col7","_col9","_col11","_col13","_col14","_col15","_col16","_col22","_col23","_col31","_col33","_col37","_col38","_col39","_col40","_col43"]
                                      <-Reducer 17 [SIMPLE_EDGE]
                                        SHUFFLE [RS_240]
                                          PartitionCols:_col2
                                          Merge Join Operator [MERGEJOIN_633] (rows=1234698008 width=88)
                                            Conds:RS_237._col0=RS_238._col13(Inner),Output:["_col2","_col7","_col9","_col11","_col13","_col14","_col15","_col16","_col22","_col23","_col31","_col33","_col37","_col38","_col39","_col40","_col43"]
                                          <-Reducer 16 [SIMPLE_EDGE]
                                            SHUFFLE [RS_237]
                                              PartitionCols:_col0
                                              Merge Join Operator [MERGEJOIN_622] (rows=117128008 width=860)
                                                Conds:RS_234._col3=RS_235._col0(Inner),Output:["_col0","_col2","_col7","_col9","_col11","_col13","_col14","_col15","_col16"]
                                              <-Map 34 [SIMPLE_EDGE]
                                                SHUFFLE [RS_235]
                                                  PartitionCols:_col0
                                                   Please refer to the previous Select Operator [SEL_14]
                                              <-Reducer 15 [SIMPLE_EDGE]
                                                SHUFFLE [RS_234]
                                                  PartitionCols:_col3
                                                  Merge Join Operator [MERGEJOIN_621] (rows=106480005 width=860)
                                                    Conds:RS_231._col1=RS_232._col0(Inner),Output:["_col0","_col2","_col3","_col7","_col9","_col11"]
                                                  <-Map 33 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_232]
                                                      PartitionCols:_col0
                                                       Please refer to the previous Select Operator [SEL_11]
                                                  <-Reducer 14 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_231]
                                                      PartitionCols:_col1
                                                      Merge Join Operator [MERGEJOIN_620] (rows=96800003 width=860)
                                                        Conds:RS_228._col4=RS_229._col0(Inner),Output:["_col0","_col1","_col2","_col3","_col7","_col9"]
                                                      <-Map 22 [SIMPLE_EDGE]
                                                        SHUFFLE [RS_229]
                                                          PartitionCols:_col0
                                                          Select Operator [SEL_136] (rows=73049 width=1119)
                                                            Output:["_col0","_col1"]
                                                            Filter Operator [FIL_584] (rows=73049 width=1119)
                                                              predicate:d_date_sk is not null
                                                               Please refer to the previous TableScan [TS_3]
                                                      <-Reducer 13 [SIMPLE_EDGE]
                                                        SHUFFLE [RS_228]
                                                          PartitionCols:_col4
                                                          Merge Join Operator [MERGEJOIN_619] (rows=88000001 width=860)
                                                            Conds:RS_225._col5=RS_226._col0(Inner),Output:["_col0","_col1","_col2","_col3","_col4","_col7"]
                                                          <-Map 22 [SIMPLE_EDGE]
                                                            SHUFFLE [RS_226]
                                                              PartitionCols:_col0
                                                              Select Operator [SEL_133] (rows=73049 width=1119)
                                                                Output:["_col0","_col1"]
                                                                Filter Operator [FIL_583] (rows=73049 width=1119)
                                                                  predicate:d_date_sk is not null
                                                                   Please refer to the previous TableScan [TS_3]
                                                          <-Map 1 [SIMPLE_EDGE]
                                                            SHUFFLE [RS_225]
                                                              PartitionCols:_col5
                                                               Please refer to the previous Select Operator [SEL_2]
                                          <-Reducer 32 [SIMPLE_EDGE]
                                            SHUFFLE [RS_238]
                                              PartitionCols:_col13
                                              Select Operator [SEL_208] (rows=1122452711 width=88)
                                                Output:["_col5","_col6","_col13","_col14","_col16","_col20","_col21","_col22","_col23","_col26"]
                                                Merge Join Operator [MERGEJOIN_631] (rows=1122452711 width=88)
                                                  Conds:RS_205._col17=RS_206._col0(Inner),Output:["_col4","_col5","_col12","_col13","_col15","_col19","_col20","_col21","_col22","_col25"]
                                                <-Map 55 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_206]
                                                    PartitionCols:_col0
                                                     Please refer to the previous Select Operator [SEL_70]
                                                <-Reducer 31 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_205]
                                                    PartitionCols:_col17
                                                    Merge Join Operator [MERGEJOIN_630] (rows=1020411534 width=88)
                                                      Conds:RS_202._col0=RS_203._col11(Inner),Output:["_col4","_col5","_col12","_col13","_col15","_col17","_col19","_col20","_col21","_col22","_col25"]
                                                    <-Reducer 30 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_203]
                                                        PartitionCols:_col11
                                                        Select Operator [SEL_195] (rows=927646829 width=88)
                                                          Output:["_col1","_col2","_col9","_col10","_col11","_col12","_col14","_col16","_col17","_col18","_col19","_col22"]
                                                          Merge Join Operator [MERGEJOIN_629] (rows=927646829 width=88)
                                                            Conds:RS_192._col6=RS_193._col0(Inner),Output:["_col2","_col3","_col4","_col5","_col7","_col9","_col10","_col11","_col12","_col15","_col24","_col25"]
                                                          <-Map 54 [SIMPLE_EDGE]
                                                            SHUFFLE [RS_193]
                                                              PartitionCols:_col0
                                                               Please refer to the previous Select Operator [SEL_51]
                                                          <-Reducer 29 [SIMPLE_EDGE]
                                                            SHUFFLE [RS_192]
                                                              PartitionCols:_col6
                                                              Merge Join Operator [MERGEJOIN_628] (rows=843315281 width=88)
                                                                Conds:RS_189._col1=RS_190._col0(Inner),Output:["_col2","_col3","_col4","_col5","_col6","_col7","_col9","_col10","_col11","_col12","_col15"]
                                                              <-Reducer 28 [SIMPLE_EDGE]
                                                                SHUFFLE [RS_189]
                                                                  PartitionCols:_col1
                                                                  Merge Join Operator [MERGEJOIN_626] (rows=766650239 width=88)
                                                                    Conds:RS_186._col0=RS_187._col0(Inner),Output:["_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col9","_col10","_col11","_col12","_col15"]
                                                                  <-Map 22 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_187]
                                                                      PartitionCols:_col0
                                                                      Select Operator [SEL_160] (rows=36524 width=1119)
                                                                        Output:["_col0"]
                                                                        Filter Operator [FIL_592] (rows=36524 width=1119)
                                                                          predicate:((d_year = 2001) and d_date_sk is not null)
                                                                           Please refer to the previous TableScan [TS_3]
                                                                  <-Reducer 45 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_186]
                                                                      PartitionCols:_col0
                                                                      Merge Join Operator [MERGEJOIN_625] (rows=696954748 width=88)
                                                                        Conds:RS_183._col1, _col8=RS_184._col0, _col1(Inner),Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col9","_col10","_col11","_col12","_col15"]
                                                                      <-Map 47 [SIMPLE_EDGE]
                                                                        SHUFFLE [RS_184]
                                                                          PartitionCols:_col0, _col1
                                                                           Please refer to the previous Select Operator [SEL_29]
                                                                      <-Reducer 44 [SIMPLE_EDGE]
                                                                        SHUFFLE [RS_183]
                                                                          PartitionCols:_col1, _col8
                                                                          Merge Join Operator [MERGEJOIN_624] (rows=633595212 width=88)
                                                                            Conds:RS_180._col1=RS_181._col0(Inner),Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8","_col9","_col10","_col11","_col12","_col15"]
                                                                          <-Map 41 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_180]
                                                                              PartitionCols:_col1
                                                                               Please refer to the previous Select Operator [SEL_23]
                                                                          <-Map 46 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_181]
                                                                              PartitionCols:_col0
                                                                               Please refer to the previous Select Operator [SEL_26]
                                                              <-Reducer 52 [ONE_TO_ONE_EDGE]
                                                                FORWARD [RS_190]
                                                                  PartitionCols:_col0
                                                                  Select Operator [SEL_176] (rows=52798137 width=135)
                                                                    Output:["_col0"]
                                                                    Filter Operator [FIL_175] (rows=52798137 width=135)
                                                                      predicate:(_col1 > (2 * _col2))
                                                                      Group By Operator [GBY_174] (rows=158394413 width=135)
                                                                        Output:["_col0","_col1","_col2"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)"],keys:KEY._col0
                                                                      <-Reducer 51 [SIMPLE_EDGE]
                                                                        SHUFFLE [RS_173]
                                                                          PartitionCols:_col0
                                                                          Group By Operator [GBY_172] (rows=316788826 width=135)
                                                                            Output:["_col0","_col1","_col2"],aggregations:["sum(_col1)","sum(_col2)"],keys:_col0
                                                                            Select Operator [SEL_170] (rows=316788826 width=135)
                                                                              Output:["_col0","_col1","_col2"]
                                                                              Merge Join Operator [MERGEJOIN_627] (rows=316788826 width=135)
                                                                                Conds:RS_167._col0, _col1=RS_168._col0, _col1(Inner),Output:["_col0","_col2","_col5","_col6","_col7"]
                                                                              <-Map 48 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_167]
                                                                                  PartitionCols:_col0, _col1
                                                                                   Please refer to the previous Select Operator [SEL_35]
                                                                              <-Map 53 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_168]
                                                                                  PartitionCols:_col0, _col1
                                                                                   Please refer to the previous Select Operator [SEL_38]
                                                    <-Reducer 38 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_202]
                                                        PartitionCols:_col0
                                                        Merge Join Operator [MERGEJOIN_623] (rows=7920 width=107)
                                                          Conds:RS_199._col1=RS_200._col0(Inner),Output:["_col0"]
                                                        <-Map 35 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_199]
                                                            PartitionCols:_col1
                                                             Please refer to the previous Select Operator [SEL_17]
                                                        <-Map 40 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_200]
                                                            PartitionCols:_col0
                                                             Please refer to the previous Select Operator [SEL_20]
                                      <-Reducer 39 [SIMPLE_EDGE]
                                        SHUFFLE [RS_241]
                                          PartitionCols:_col0
                                          Merge Join Operator [MERGEJOIN_632] (rows=7920 width=107)
                                            Conds:RS_215._col1=RS_216._col0(Inner),Output:["_col0"]
                                          <-Map 35 [SIMPLE_EDGE]
                                            SHUFFLE [RS_215]
                                              PartitionCols:_col1
                                               Please refer to the previous Select Operator [SEL_17]
                                          <-Map 40 [SIMPLE_EDGE]
                                            SHUFFLE [RS_216]
                                              PartitionCols:_col0
                                               Please refer to the previous Select Operator [SEL_20]

