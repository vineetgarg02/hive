PREHOOK: query: explain
with customer_total_return as
 (select wr_returning_customer_sk as ctr_customer_sk
        ,ca_state as ctr_state, 
 	sum(wr_return_amt) as ctr_total_return
 from web_returns
     ,date_dim
     ,customer_address
 where wr_returned_date_sk = d_date_sk 
   and d_year =2002
   and wr_returning_addr_sk = ca_address_sk 
 group by wr_returning_customer_sk
         ,ca_state)
  select  c_customer_id,c_salutation,c_first_name,c_last_name,c_preferred_cust_flag
       ,c_birth_day,c_birth_month,c_birth_year,c_birth_country,c_login,c_email_address
       ,c_last_review_date,ctr_total_return
 from customer_total_return ctr1
     ,customer_address
     ,customer
 where ctr1.ctr_total_return > (select avg(ctr_total_return)*1.2
 			  from customer_total_return ctr2 
                  	  where ctr1.ctr_state = ctr2.ctr_state)
       and ca_address_sk = c_current_addr_sk
       and ca_state = 'IL'
       and ctr1.ctr_customer_sk = c_customer_sk
 order by c_customer_id,c_salutation,c_first_name,c_last_name,c_preferred_cust_flag
                  ,c_birth_day,c_birth_month,c_birth_year,c_birth_country,c_login,c_email_address
                  ,c_last_review_date,ctr_total_return
limit 100
PREHOOK: type: QUERY
POSTHOOK: query: explain
with customer_total_return as
 (select wr_returning_customer_sk as ctr_customer_sk
        ,ca_state as ctr_state, 
 	sum(wr_return_amt) as ctr_total_return
 from web_returns
     ,date_dim
     ,customer_address
 where wr_returned_date_sk = d_date_sk 
   and d_year =2002
   and wr_returning_addr_sk = ca_address_sk 
 group by wr_returning_customer_sk
         ,ca_state)
  select  c_customer_id,c_salutation,c_first_name,c_last_name,c_preferred_cust_flag
       ,c_birth_day,c_birth_month,c_birth_year,c_birth_country,c_login,c_email_address
       ,c_last_review_date,ctr_total_return
 from customer_total_return ctr1
     ,customer_address
     ,customer
 where ctr1.ctr_total_return > (select avg(ctr_total_return)*1.2
 			  from customer_total_return ctr2 
                  	  where ctr1.ctr_state = ctr2.ctr_state)
       and ca_address_sk = c_current_addr_sk
       and ca_state = 'IL'
       and ctr1.ctr_customer_sk = c_customer_sk
 order by c_customer_id,c_salutation,c_first_name,c_last_name,c_preferred_cust_flag
                  ,c_birth_day,c_birth_month,c_birth_year,c_birth_country,c_login,c_email_address
                  ,c_last_review_date,ctr_total_return
limit 100
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 10 <- Reducer 9 (SIMPLE_EDGE)
Reducer 13 <- Map 12 (SIMPLE_EDGE), Map 14 (SIMPLE_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 11 (SIMPLE_EDGE)
Reducer 3 <- Map 12 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Reducer 10 (SIMPLE_EDGE), Reducer 4 (SIMPLE_EDGE)
Reducer 6 <- Reducer 13 (SIMPLE_EDGE), Reducer 5 (SIMPLE_EDGE)
Reducer 7 <- Reducer 6 (SIMPLE_EDGE)
Reducer 8 <- Map 1 (SIMPLE_EDGE), Map 11 (SIMPLE_EDGE)
Reducer 9 <- Map 12 (SIMPLE_EDGE), Reducer 8 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 7
      File Output Operator [FS_66]
        Limit [LIM_65] (rows=100 width=860)
          Number of rows:100
          Select Operator [SEL_64] (rows=96800003 width=860)
            Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8","_col9","_col10","_col11","_col12"]
          <-Reducer 6 [SIMPLE_EDGE]
            SHUFFLE [RS_63]
              Select Operator [SEL_62] (rows=96800003 width=860)
                Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8","_col9","_col10","_col11","_col12"]
                Merge Join Operator [MERGEJOIN_107] (rows=96800003 width=860)
                  Conds:RS_59._col0=RS_60._col0(Inner),Output:["_col2","_col7","_col9","_col10","_col11","_col12","_col13","_col14","_col15","_col16","_col17","_col18","_col19"]
                <-Reducer 13 [SIMPLE_EDGE]
                  SHUFFLE [RS_60]
                    PartitionCols:_col0
                    Merge Join Operator [MERGEJOIN_105] (rows=88000001 width=860)
                      Conds:RS_51._col2=RS_52._col0(Inner),Output:["_col0","_col1","_col3","_col4","_col5","_col6","_col7","_col8","_col9","_col10","_col11","_col12","_col13"]
                    <-Map 12 [SIMPLE_EDGE]
                      SHUFFLE [RS_52]
                        PartitionCols:_col0
                        Select Operator [SEL_50] (rows=20000000 width=1014)
                          Output:["_col0"]
                          Filter Operator [FIL_100] (rows=20000000 width=1014)
                            predicate:((ca_state = 'IL') and ca_address_sk is not null)
                            TableScan [TS_6] (rows=40000000 width=1014)
                              default@customer_address,customer_address,Tbl:COMPLETE,Col:NONE,Output:["ca_address_sk","ca_state"]
                    <-Map 14 [SIMPLE_EDGE]
                      SHUFFLE [RS_51]
                        PartitionCols:_col2
                        Select Operator [SEL_47] (rows=80000000 width=860)
                          Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8","_col9","_col10","_col11","_col12","_col13"]
                          Filter Operator [FIL_99] (rows=80000000 width=860)
                            predicate:(c_customer_sk is not null and c_current_addr_sk is not null)
                            TableScan [TS_45] (rows=80000000 width=860)
                              default@customer,customer,Tbl:COMPLETE,Col:NONE,Output:["c_customer_sk","c_customer_id","c_current_addr_sk","c_salutation","c_first_name","c_last_name","c_preferred_cust_flag","c_birth_day","c_birth_month","c_birth_year","c_birth_country","c_login","c_email_address","c_last_review_date"]
                <-Reducer 5 [SIMPLE_EDGE]
                  SHUFFLE [RS_59]
                    PartitionCols:_col0
                    Filter Operator [FIL_58] (rows=8066666 width=1014)
                      predicate:(_col2 > CASE WHEN (_col4 is null) THEN (null) ELSE (_col3) END)
                      Merge Join Operator [MERGEJOIN_106] (rows=24200000 width=1014)
                        Conds:RS_55._col1=RS_56._col2(Inner),Output:["_col0","_col2","_col3","_col4"]
                      <-Reducer 10 [SIMPLE_EDGE]
                        SHUFFLE [RS_56]
                          PartitionCols:_col2
                          Select Operator [SEL_44] (rows=11000000 width=1014)
                            Output:["_col0","_col1","_col2"]
                            Group By Operator [GBY_43] (rows=11000000 width=1014)
                              Output:["_col0","_col1"],aggregations:["avg(_col2)"],keys:_col0
                              Select Operator [SEL_39] (rows=22000000 width=1014)
                                Output:["_col0","_col2"]
                                Group By Operator [GBY_38] (rows=22000000 width=1014)
                                  Output:["_col0","_col1","_col2"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0, KEY._col1
                                <-Reducer 9 [SIMPLE_EDGE]
                                  SHUFFLE [RS_37]
                                    PartitionCols:_col0
                                    Group By Operator [GBY_36] (rows=44000000 width=1014)
                                      Output:["_col0","_col1","_col2"],aggregations:["sum(_col3)"],keys:_col7, _col1
                                      Merge Join Operator [MERGEJOIN_104] (rows=44000000 width=1014)
                                        Conds:RS_32._col2=RS_33._col0(Inner),Output:["_col1","_col3","_col7"]
                                      <-Map 12 [SIMPLE_EDGE]
                                        SHUFFLE [RS_33]
                                          PartitionCols:_col0
                                          Select Operator [SEL_28] (rows=40000000 width=1014)
                                            Output:["_col0","_col1"]
                                            Filter Operator [FIL_98] (rows=40000000 width=1014)
                                              predicate:(ca_address_sk is not null and ca_state is not null)
                                               Please refer to the previous TableScan [TS_6]
                                      <-Reducer 8 [SIMPLE_EDGE]
                                        SHUFFLE [RS_32]
                                          PartitionCols:_col2
                                          Merge Join Operator [MERGEJOIN_103] (rows=15838314 width=92)
                                            Conds:RS_29._col0=RS_30._col0(Inner),Output:["_col1","_col2","_col3"]
                                          <-Map 1 [SIMPLE_EDGE]
                                            SHUFFLE [RS_29]
                                              PartitionCols:_col0
                                              Select Operator [SEL_22] (rows=14398467 width=92)
                                                Output:["_col0","_col1","_col2","_col3"]
                                                Filter Operator [FIL_96] (rows=14398467 width=92)
                                                  predicate:(wr_returned_date_sk is not null and wr_returning_addr_sk is not null)
                                                  TableScan [TS_0] (rows=14398467 width=92)
                                                    default@web_returns,web_returns,Tbl:COMPLETE,Col:NONE,Output:["wr_returned_date_sk","wr_returning_customer_sk","wr_returning_addr_sk","wr_return_amt"]
                                          <-Map 11 [SIMPLE_EDGE]
                                            SHUFFLE [RS_30]
                                              PartitionCols:_col0
                                              Select Operator [SEL_5] (rows=36524 width=1119)
                                                Output:["_col0"]
                                                Filter Operator [FIL_94] (rows=36524 width=1119)
                                                  predicate:((d_year = 2002) and d_date_sk is not null)
                                                  TableScan [TS_3] (rows=73049 width=1119)
                                                    default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year"]
                      <-Reducer 4 [SIMPLE_EDGE]
                        SHUFFLE [RS_55]
                          PartitionCols:_col1
                          Select Operator [SEL_19] (rows=22000000 width=1014)
                            Output:["_col0","_col1","_col2"]
                            Group By Operator [GBY_18] (rows=22000000 width=1014)
                              Output:["_col0","_col1","_col2"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0, KEY._col1
                            <-Reducer 3 [SIMPLE_EDGE]
                              SHUFFLE [RS_17]
                                PartitionCols:_col0, _col1
                                Group By Operator [GBY_16] (rows=44000000 width=1014)
                                  Output:["_col0","_col1","_col2"],aggregations:["sum(_col3)"],keys:_col7, _col1
                                  Merge Join Operator [MERGEJOIN_102] (rows=44000000 width=1014)
                                    Conds:RS_12._col2=RS_13._col0(Inner),Output:["_col1","_col3","_col7"]
                                  <-Map 12 [SIMPLE_EDGE]
                                    SHUFFLE [RS_13]
                                      PartitionCols:_col0
                                      Select Operator [SEL_8] (rows=40000000 width=1014)
                                        Output:["_col0","_col1"]
                                        Filter Operator [FIL_95] (rows=40000000 width=1014)
                                          predicate:ca_address_sk is not null
                                           Please refer to the previous TableScan [TS_6]
                                  <-Reducer 2 [SIMPLE_EDGE]
                                    SHUFFLE [RS_12]
                                      PartitionCols:_col2
                                      Merge Join Operator [MERGEJOIN_101] (rows=15838314 width=92)
                                        Conds:RS_9._col0=RS_10._col0(Inner),Output:["_col1","_col2","_col3"]
                                      <-Map 1 [SIMPLE_EDGE]
                                        SHUFFLE [RS_9]
                                          PartitionCols:_col0
                                          Select Operator [SEL_2] (rows=14398467 width=92)
                                            Output:["_col0","_col1","_col2","_col3"]
                                            Filter Operator [FIL_93] (rows=14398467 width=92)
                                              predicate:(wr_returned_date_sk is not null and wr_returning_addr_sk is not null and wr_returning_customer_sk is not null)
                                               Please refer to the previous TableScan [TS_0]
                                      <-Map 11 [SIMPLE_EDGE]
                                        SHUFFLE [RS_10]
                                          PartitionCols:_col0
                                           Please refer to the previous Select Operator [SEL_5]

