PREHOOK: query: explain select  a.ca_state state, count(*) cnt
 from customer_address a
     ,customer c
     ,store_sales s
     ,date_dim d
     ,item i
 where       a.ca_address_sk = c.c_current_addr_sk
 	and c.c_customer_sk = s.ss_customer_sk
 	and s.ss_sold_date_sk = d.d_date_sk
 	and s.ss_item_sk = i.i_item_sk
 	and d.d_month_seq = 
 	     (select distinct (d_month_seq)
 	      from date_dim
               where d_year = 2000
 	        and d_moy = 2 )
 	and i.i_current_price > 1.2 * 
             (select avg(j.i_current_price) 
 	     from item j 
 	     where j.i_category = i.i_category)
 group by a.ca_state
 having count(*) >= 10
 order by cnt 
 limit 100
PREHOOK: type: QUERY
POSTHOOK: query: explain select  a.ca_state state, count(*) cnt
 from customer_address a
     ,customer c
     ,store_sales s
     ,date_dim d
     ,item i
 where       a.ca_address_sk = c.c_current_addr_sk
 	and c.c_customer_sk = s.ss_customer_sk
 	and s.ss_sold_date_sk = d.d_date_sk
 	and s.ss_item_sk = i.i_item_sk
 	and d.d_month_seq = 
 	     (select distinct (d_month_seq)
 	      from date_dim
               where d_year = 2000
 	        and d_moy = 2 )
 	and i.i_current_price > 1.2 * 
             (select avg(j.i_current_price) 
 	     from item j 
 	     where j.i_category = i.i_category)
 group by a.ca_state
 having count(*) >= 10
 order by cnt 
 limit 100
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 10 <- Map 9 (SIMPLE_EDGE)
Reducer 14 <- Map 13 (SIMPLE_EDGE), Map 15 (SIMPLE_EDGE)
Reducer 17 <- Map 16 (SIMPLE_EDGE), Reducer 23 (SIMPLE_EDGE)
Reducer 18 <- Reducer 17 (SIMPLE_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Reducer 10 (SIMPLE_EDGE)
Reducer 20 <- Map 19 (SIMPLE_EDGE), Map 24 (SIMPLE_EDGE)
Reducer 21 <- Reducer 20 (SIMPLE_EDGE), Reducer 26 (SIMPLE_EDGE)
Reducer 22 <- Reducer 21 (SIMPLE_EDGE), Reducer 30 (SIMPLE_EDGE)
Reducer 23 <- Reducer 22 (SIMPLE_EDGE)
Reducer 26 <- Map 25 (SIMPLE_EDGE), Reducer 28 (SIMPLE_EDGE)
Reducer 28 <- Map 27 (SIMPLE_EDGE)
Reducer 3 <- Map 11 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 30 <- Map 29 (SIMPLE_EDGE), Map 31 (SIMPLE_EDGE)
Reducer 4 <- Map 12 (SIMPLE_EDGE), Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Reducer 14 (SIMPLE_EDGE), Reducer 4 (SIMPLE_EDGE)
Reducer 6 <- Reducer 18 (SIMPLE_EDGE), Reducer 5 (SIMPLE_EDGE)
Reducer 7 <- Reducer 6 (SIMPLE_EDGE)
Reducer 8 <- Reducer 7 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 8
      File Output Operator [FS_106]
        Limit [LIM_105] (rows=100 width=88)
          Number of rows:100
          Select Operator [SEL_104] (rows=46850848 width=88)
            Output:["_col0","_col1"]
          <-Reducer 7 [SIMPLE_EDGE]
            SHUFFLE [RS_103]
              Filter Operator [FIL_101] (rows=46850848 width=88)
                predicate:(_col1 >= 10)
                Group By Operator [GBY_100] (rows=140552546 width=88)
                  Output:["_col0","_col1"],aggregations:["count(VALUE._col0)"],keys:KEY._col0
                <-Reducer 6 [SIMPLE_EDGE]
                  SHUFFLE [RS_99]
                    PartitionCols:_col0
                    Group By Operator [GBY_98] (rows=281105093 width=88)
                      Output:["_col0","_col1"],aggregations:["count()"],keys:_col1
                      Select Operator [SEL_97] (rows=281105093 width=88)
                        Output:["_col1"]
                        Filter Operator [FIL_96] (rows=281105093 width=88)
                          predicate:(_col10 > (1.2 * _col13))
                          Select Operator [SEL_95] (rows=843315281 width=88)
                            Output:["_col1","_col10","_col13"]
                            Merge Join Operator [MERGEJOIN_178] (rows=843315281 width=88)
                              Conds:RS_92._col8=RS_93._col1(Left Outer),Output:["_col7","_col12","_col13"]
                            <-Reducer 18 [SIMPLE_EDGE]
                              SHUFFLE [RS_93]
                                PartitionCols:_col1
                                Select Operator [SEL_79] (rows=210828820 width=88)
                                  Output:["_col0","_col1"]
                                  Group By Operator [GBY_78] (rows=210828820 width=88)
                                    Output:["_col0","_col1"],aggregations:["avg(VALUE._col0)"],keys:KEY._col0
                                  <-Reducer 17 [SIMPLE_EDGE]
                                    SHUFFLE [RS_77]
                                      PartitionCols:_col0
                                      Group By Operator [GBY_76] (rows=421657640 width=88)
                                        Output:["_col0","_col1"],aggregations:["avg(_col0)"],keys:_col2
                                        Select Operator [SEL_75] (rows=421657640 width=88)
                                          Output:["_col2","_col0"]
                                          Merge Join Operator [MERGEJOIN_172] (rows=421657640 width=88)
                                            Conds:RS_72._col1=RS_73._col0(Inner),Output:["_col0","_col2"]
                                          <-Map 16 [SIMPLE_EDGE]
                                            SHUFFLE [RS_72]
                                              PartitionCols:_col1
                                              Select Operator [SEL_27] (rows=462000 width=1436)
                                                Output:["_col0","_col1"]
                                                TableScan [TS_26] (rows=462000 width=1436)
                                                  default@item,j,Tbl:COMPLETE,Col:NONE,Output:["i_current_price","i_category"]
                                          <-Reducer 23 [SIMPLE_EDGE]
                                            SHUFFLE [RS_73]
                                              PartitionCols:_col0
                                              Group By Operator [GBY_70] (rows=383325119 width=88)
                                                Output:["_col0"],keys:KEY._col0
                                              <-Reducer 22 [SIMPLE_EDGE]
                                                SHUFFLE [RS_69]
                                                  PartitionCols:_col0
                                                  Group By Operator [GBY_68] (rows=766650239 width=88)
                                                    Output:["_col0"],keys:_col4
                                                    Merge Join Operator [MERGEJOIN_171] (rows=766650239 width=88)
                                                      Conds:RS_64._col2=RS_65._col0(Inner),Output:["_col4"]
                                                    <-Reducer 21 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_64]
                                                        PartitionCols:_col2
                                                        Merge Join Operator [MERGEJOIN_169] (rows=696954748 width=88)
                                                          Conds:RS_61._col0=RS_62._col0(Inner),Output:["_col2","_col4"]
                                                        <-Reducer 20 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_61]
                                                            PartitionCols:_col0
                                                            Merge Join Operator [MERGEJOIN_167] (rows=633595212 width=88)
                                                              Conds:RS_58._col1=RS_59._col0(Inner),Output:["_col0","_col2","_col4"]
                                                            <-Map 19 [SIMPLE_EDGE]
                                                              SHUFFLE [RS_58]
                                                                PartitionCols:_col1
                                                                Select Operator [SEL_30] (rows=575995635 width=88)
                                                                  Output:["_col0","_col1","_col2"]
                                                                  Filter Operator [FIL_161] (rows=575995635 width=88)
                                                                    predicate:(ss_customer_sk is not null and ss_sold_date_sk is not null and ss_item_sk is not null)
                                                                    TableScan [TS_28] (rows=575995635 width=88)
                                                                      default@store_sales,s,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_item_sk","ss_customer_sk"]
                                                            <-Map 24 [SIMPLE_EDGE]
                                                              SHUFFLE [RS_59]
                                                                PartitionCols:_col0
                                                                Select Operator [SEL_33] (rows=462000 width=1436)
                                                                  Output:["_col0","_col1"]
                                                                  Filter Operator [FIL_162] (rows=462000 width=1436)
                                                                    predicate:i_item_sk is not null
                                                                    TableScan [TS_31] (rows=462000 width=1436)
                                                                      default@item,i,Tbl:COMPLETE,Col:NONE,Output:["i_item_sk","i_category"]
                                                        <-Reducer 26 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_62]
                                                            PartitionCols:_col0
                                                            Merge Join Operator [MERGEJOIN_168] (rows=80353 width=1119)
                                                              Conds:RS_44._col1=RS_45._col0(Inner),Output:["_col0"]
                                                            <-Map 25 [SIMPLE_EDGE]
                                                              SHUFFLE [RS_44]
                                                                PartitionCols:_col1
                                                                Select Operator [SEL_36] (rows=73049 width=1119)
                                                                  Output:["_col0","_col1"]
                                                                  Filter Operator [FIL_163] (rows=73049 width=1119)
                                                                    predicate:(d_date_sk is not null and d_month_seq is not null)
                                                                    TableScan [TS_34] (rows=73049 width=1119)
                                                                      default@date_dim,d,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_month_seq"]
                                                            <-Reducer 28 [SIMPLE_EDGE]
                                                              SHUFFLE [RS_45]
                                                                PartitionCols:_col0
                                                                Group By Operator [GBY_42] (rows=9131 width=1119)
                                                                  Output:["_col0"],keys:KEY._col0
                                                                <-Map 27 [SIMPLE_EDGE]
                                                                  SHUFFLE [RS_41]
                                                                    PartitionCols:_col0
                                                                    Group By Operator [GBY_40] (rows=18262 width=1119)
                                                                      Output:["_col0"],keys:d_month_seq
                                                                      Select Operator [SEL_39] (rows=18262 width=1119)
                                                                        Output:["d_month_seq"]
                                                                        Filter Operator [FIL_164] (rows=18262 width=1119)
                                                                          predicate:((d_year = 2000) and (d_moy = 2) and d_month_seq is not null)
                                                                          TableScan [TS_37] (rows=73049 width=1119)
                                                                            default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_month_seq","d_year","d_moy"]
                                                    <-Reducer 30 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_65]
                                                        PartitionCols:_col0
                                                        Merge Join Operator [MERGEJOIN_170] (rows=88000001 width=860)
                                                          Conds:RS_54._col1=RS_55._col0(Inner),Output:["_col0"]
                                                        <-Map 29 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_54]
                                                            PartitionCols:_col1
                                                            Select Operator [SEL_50] (rows=80000000 width=860)
                                                              Output:["_col0","_col1"]
                                                              Filter Operator [FIL_165] (rows=80000000 width=860)
                                                                predicate:(c_current_addr_sk is not null and c_customer_sk is not null)
                                                                TableScan [TS_48] (rows=80000000 width=860)
                                                                  default@customer,c,Tbl:COMPLETE,Col:NONE,Output:["c_customer_sk","c_current_addr_sk"]
                                                        <-Map 31 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_55]
                                                            PartitionCols:_col0
                                                            Select Operator [SEL_53] (rows=40000000 width=1014)
                                                              Output:["_col0"]
                                                              Filter Operator [FIL_166] (rows=40000000 width=1014)
                                                                predicate:ca_address_sk is not null
                                                                TableScan [TS_51] (rows=40000000 width=1014)
                                                                  default@customer_address,a,Tbl:COMPLETE,Col:NONE,Output:["ca_address_sk"]
                            <-Reducer 5 [SIMPLE_EDGE]
                              SHUFFLE [RS_92]
                                PartitionCols:_col8
                                Merge Join Operator [MERGEJOIN_177] (rows=766650239 width=88)
                                  Conds:RS_89._col5=RS_90._col0(Inner),Output:["_col7","_col8","_col12"]
                                <-Reducer 14 [SIMPLE_EDGE]
                                  SHUFFLE [RS_90]
                                    PartitionCols:_col0
                                    Merge Join Operator [MERGEJOIN_176] (rows=88000001 width=860)
                                      Conds:RS_22._col1=RS_23._col0(Inner),Output:["_col0","_col3"]
                                    <-Map 13 [SIMPLE_EDGE]
                                      SHUFFLE [RS_22]
                                        PartitionCols:_col1
                                        Select Operator [SEL_18] (rows=80000000 width=860)
                                          Output:["_col0","_col1"]
                                          Filter Operator [FIL_158] (rows=80000000 width=860)
                                            predicate:(c_current_addr_sk is not null and c_customer_sk is not null)
                                            TableScan [TS_16] (rows=80000000 width=860)
                                              default@customer,c,Tbl:COMPLETE,Col:NONE,Output:["c_customer_sk","c_current_addr_sk"]
                                    <-Map 15 [SIMPLE_EDGE]
                                      SHUFFLE [RS_23]
                                        PartitionCols:_col0
                                        Select Operator [SEL_21] (rows=40000000 width=1014)
                                          Output:["_col0","_col1"]
                                          Filter Operator [FIL_159] (rows=40000000 width=1014)
                                            predicate:ca_address_sk is not null
                                            TableScan [TS_19] (rows=40000000 width=1014)
                                              default@customer_address,a,Tbl:COMPLETE,Col:NONE,Output:["ca_address_sk","ca_state"]
                                <-Reducer 4 [SIMPLE_EDGE]
                                  SHUFFLE [RS_89]
                                    PartitionCols:_col5
                                    Merge Join Operator [MERGEJOIN_175] (rows=696954748 width=88)
                                      Conds:RS_86._col4=RS_87._col0(Inner),Output:["_col5","_col7","_col8"]
                                    <-Map 12 [SIMPLE_EDGE]
                                      SHUFFLE [RS_87]
                                        PartitionCols:_col0
                                        Select Operator [SEL_15] (rows=462000 width=1436)
                                          Output:["_col0","_col1","_col2"]
                                          Filter Operator [FIL_157] (rows=462000 width=1436)
                                            predicate:i_item_sk is not null
                                            TableScan [TS_13] (rows=462000 width=1436)
                                              default@item,i,Tbl:COMPLETE,Col:NONE,Output:["i_item_sk","i_current_price","i_category"]
                                    <-Reducer 3 [SIMPLE_EDGE]
                                      SHUFFLE [RS_86]
                                        PartitionCols:_col4
                                        Merge Join Operator [MERGEJOIN_174] (rows=633595212 width=88)
                                          Conds:RS_83._col0=RS_84._col0(Inner),Output:["_col4","_col5"]
                                        <-Map 11 [SIMPLE_EDGE]
                                          SHUFFLE [RS_84]
                                            PartitionCols:_col0
                                            Select Operator [SEL_12] (rows=575995635 width=88)
                                              Output:["_col0","_col1","_col2"]
                                              Filter Operator [FIL_156] (rows=575995635 width=88)
                                                predicate:(ss_customer_sk is not null and ss_sold_date_sk is not null and ss_item_sk is not null)
                                                TableScan [TS_10] (rows=575995635 width=88)
                                                  default@store_sales,s,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_item_sk","ss_customer_sk"]
                                        <-Reducer 2 [SIMPLE_EDGE]
                                          SHUFFLE [RS_83]
                                            PartitionCols:_col0
                                            Merge Join Operator [MERGEJOIN_173] (rows=80353 width=1119)
                                              Conds:RS_80._col1=RS_81._col0(Inner),Output:["_col0"]
                                            <-Map 1 [SIMPLE_EDGE]
                                              SHUFFLE [RS_80]
                                                PartitionCols:_col1
                                                Select Operator [SEL_2] (rows=73049 width=1119)
                                                  Output:["_col0","_col1"]
                                                  Filter Operator [FIL_154] (rows=73049 width=1119)
                                                    predicate:(d_date_sk is not null and d_month_seq is not null)
                                                    TableScan [TS_0] (rows=73049 width=1119)
                                                      default@date_dim,d,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_month_seq"]
                                            <-Reducer 10 [SIMPLE_EDGE]
                                              SHUFFLE [RS_81]
                                                PartitionCols:_col0
                                                Group By Operator [GBY_8] (rows=9131 width=1119)
                                                  Output:["_col0"],keys:KEY._col0
                                                <-Map 9 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_7]
                                                    PartitionCols:_col0
                                                    Group By Operator [GBY_6] (rows=18262 width=1119)
                                                      Output:["_col0"],keys:d_month_seq
                                                      Select Operator [SEL_5] (rows=18262 width=1119)
                                                        Output:["d_month_seq"]
                                                        Filter Operator [FIL_155] (rows=18262 width=1119)
                                                          predicate:((d_year = 2000) and (d_moy = 2) and d_month_seq is not null)
                                                          TableScan [TS_3] (rows=73049 width=1119)
                                                            default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_month_seq","d_year","d_moy"]

