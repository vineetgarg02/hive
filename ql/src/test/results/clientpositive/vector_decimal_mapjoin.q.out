PREHOOK: query: CREATE TABLE over1k(t tinyint,
           si smallint,
           i int,
           b bigint,
           f float,
           d double,
           bo boolean,
           s string,
           ts timestamp,
           `dec` decimal(20,2),
           bin binary)
ROW FORMAT DELIMITED FIELDS TERMINATED BY '|'
STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@over1k
POSTHOOK: query: CREATE TABLE over1k(t tinyint,
           si smallint,
           i int,
           b bigint,
           f float,
           d double,
           bo boolean,
           s string,
           ts timestamp,
           `dec` decimal(20,2),
           bin binary)
ROW FORMAT DELIMITED FIELDS TERMINATED BY '|'
STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@over1k
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/over1k' OVERWRITE INTO TABLE over1k
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@over1k
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/over1k' OVERWRITE INTO TABLE over1k
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@over1k
PREHOOK: query: CREATE TABLE t1(`dec` decimal(22,2)) STORED AS ORC
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@t1
POSTHOOK: query: CREATE TABLE t1(`dec` decimal(22,2)) STORED AS ORC
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@t1
PREHOOK: query: INSERT INTO TABLE t1 select `dec` from over1k
PREHOOK: type: QUERY
PREHOOK: Input: default@over1k
PREHOOK: Output: default@t1
POSTHOOK: query: INSERT INTO TABLE t1 select `dec` from over1k
POSTHOOK: type: QUERY
POSTHOOK: Input: default@over1k
POSTHOOK: Output: default@t1
POSTHOOK: Lineage: t1.dec EXPRESSION [(over1k)over1k.FieldSchema(name:dec, type:decimal(20,2), comment:null), ]
PREHOOK: query: CREATE TABLE t2(`dec` decimal(24,0)) STORED AS ORC
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@t2
POSTHOOK: query: CREATE TABLE t2(`dec` decimal(24,0)) STORED AS ORC
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@t2
PREHOOK: query: INSERT INTO TABLE t2 select `dec` from over1k
PREHOOK: type: QUERY
PREHOOK: Input: default@over1k
PREHOOK: Output: default@t2
POSTHOOK: query: INSERT INTO TABLE t2 select `dec` from over1k
POSTHOOK: type: QUERY
POSTHOOK: Input: default@over1k
POSTHOOK: Output: default@t2
POSTHOOK: Lineage: t2.dec EXPRESSION [(over1k)over1k.FieldSchema(name:dec, type:decimal(20,2), comment:null), ]
PREHOOK: query: explain vectorization detail
select t1.`dec`, t2.`dec` from t1 join t2 on (t1.`dec`=t2.`dec`)
PREHOOK: type: QUERY
POSTHOOK: query: explain vectorization detail
select t1.`dec`, t2.`dec` from t1 join t2 on (t1.`dec`=t2.`dec`)
POSTHOOK: type: QUERY
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-4 is a root stage
  Stage-3 depends on stages: Stage-4
  Stage-0 depends on stages: Stage-3

STAGE PLANS:
  Stage: Stage-4
    Map Reduce Local Work
      Alias -> Map Local Tables:
        $hdt$_1:t2 
          Fetch Operator
            limit: -1
      Alias -> Map Local Operator Tree:
        $hdt$_1:t2 
          TableScan
            alias: t2
            Statistics: Num rows: 1049 Data size: 117488 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: dec is not null (type: boolean)
              Statistics: Num rows: 1049 Data size: 117488 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: dec (type: decimal(24,0))
                outputColumnNames: _col0
                Statistics: Num rows: 1049 Data size: 117488 Basic stats: COMPLETE Column stats: NONE
                HashTable Sink Operator
                  keys:
                    0 _col0 (type: decimal(26,2))
                    1 _col0 (type: decimal(26,2))

  Stage: Stage-3
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: t1
            Statistics: Num rows: 1049 Data size: 117488 Basic stats: COMPLETE Column stats: NONE
            TableScan Vectorization:
                native: true
                vectorizationSchemaColumns: [0:dec:decimal(22,2), 1:ROW__ID:struct<transactionid:bigint,bucketid:int,rowid:bigint>]
            Filter Operator
              Filter Vectorization:
                  className: VectorFilterOperator
                  native: true
                  predicateExpression: SelectColumnIsNotNull(col 0:decimal(22,2))
              predicate: dec is not null (type: boolean)
              Statistics: Num rows: 1049 Data size: 117488 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: dec (type: decimal(22,2))
                outputColumnNames: _col0
                Select Vectorization:
                    className: VectorSelectOperator
                    native: true
                    projectedOutputColumnNums: [0]
                Statistics: Num rows: 1049 Data size: 117488 Basic stats: COMPLETE Column stats: NONE
                Map Join Operator
                  condition map:
                       Inner Join 0 to 1
                  keys:
                    0 _col0 (type: decimal(26,2))
                    1 _col0 (type: decimal(26,2))
                  Map Join Vectorization:
                      className: VectorMapJoinOperator
                      native: false
                      nativeConditionsMet: hive.mapjoin.optimized.hashtable IS true, hive.vectorized.execution.mapjoin.native.enabled IS true, One MapJoin Condition IS true, No nullsafe IS true, Small table vectorizes IS true
                      nativeConditionsNotMet: hive.execution.engine mr IN [tez, spark] IS false, Optimized Table and Supports Key Types IS false
                      nativeNotSupportedKeyTypes: DECIMAL
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 1153 Data size: 129236 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    File Sink Vectorization:
                        className: VectorFileSinkOperator
                        native: false
                    Statistics: Num rows: 1153 Data size: 129236 Basic stats: COMPLETE Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
      Execution mode: vectorized
      Map Vectorization:
          enabled: true
          enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
          inputFormatFeatureSupport: []
          featureSupportInUse: []
          inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
          allNative: false
          usesVectorUDFAdaptor: false
          vectorized: true
          rowBatchContext:
              dataColumnCount: 1
              includeColumns: [0]
              dataColumns: dec:decimal(22,2)
              partitionColumnCount: 0
              scratchColumnTypeNames: []
      Local Work:
        Map Reduce Local Work

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select t1.`dec`, t2.`dec` from t1 join t2 on (t1.`dec`=t2.`dec`)
PREHOOK: type: QUERY
PREHOOK: Input: default@t1
PREHOOK: Input: default@t2
#### A masked pattern was here ####
POSTHOOK: query: select t1.`dec`, t2.`dec` from t1 join t2 on (t1.`dec`=t2.`dec`)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1
POSTHOOK: Input: default@t2
#### A masked pattern was here ####
14.00	14
14.00	14
14.00	14
14.00	14
14.00	14
14.00	14
14.00	14
14.00	14
14.00	14
17.00	17
17.00	17
17.00	17
17.00	17
17.00	17
17.00	17
17.00	17
17.00	17
17.00	17
17.00	17
45.00	45
45.00	45
45.00	45
45.00	45
45.00	45
6.00	6
6.00	6
6.00	6
6.00	6
6.00	6
6.00	6
62.00	62
62.00	62
62.00	62
62.00	62
62.00	62
62.00	62
62.00	62
62.00	62
62.00	62
62.00	62
62.00	62
62.00	62
64.00	64
64.00	64
64.00	64
64.00	64
64.00	64
64.00	64
64.00	64
64.00	64
64.00	64
64.00	64
64.00	64
64.00	64
64.00	64
64.00	64
64.00	64
64.00	64
64.00	64
64.00	64
70.00	70
70.00	70
70.00	70
70.00	70
70.00	70
70.00	70
70.00	70
79.00	79
79.00	79
79.00	79
79.00	79
79.00	79
79.00	79
89.00	89
89.00	89
89.00	89
89.00	89
89.00	89
89.00	89
89.00	89
89.00	89
89.00	89
89.00	89
89.00	89
89.00	89
9.00	9
9.00	9
9.00	9
9.00	9
9.00	9
9.00	9
9.00	9
9.00	9
9.00	9
9.00	9
9.00	9
9.00	9
9.00	9
9.00	9
9.00	9
9.00	9
9.00	9
9.00	9
9.00	9
9.00	9
9.00	9
PREHOOK: query: CREATE TABLE over1k_small(t tinyint,
           si smallint,
           i int,
           b bigint,
           f float,
           d double,
           bo boolean,
           s string,
           ts timestamp,
           `dec` decimal(4,2),
           bin binary)
ROW FORMAT DELIMITED FIELDS TERMINATED BY '|'
STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@over1k_small
POSTHOOK: query: CREATE TABLE over1k_small(t tinyint,
           si smallint,
           i int,
           b bigint,
           f float,
           d double,
           bo boolean,
           s string,
           ts timestamp,
           `dec` decimal(4,2),
           bin binary)
ROW FORMAT DELIMITED FIELDS TERMINATED BY '|'
STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@over1k_small
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/over1k' OVERWRITE INTO TABLE over1k_small
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@over1k_small
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/over1k' OVERWRITE INTO TABLE over1k_small
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@over1k_small
PREHOOK: query: CREATE TABLE t1_small(`dec` decimal(4,2)) STORED AS ORC
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@t1_small
POSTHOOK: query: CREATE TABLE t1_small(`dec` decimal(4,2)) STORED AS ORC
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@t1_small
PREHOOK: query: INSERT INTO TABLE t1 select `dec` from over1k_small
PREHOOK: type: QUERY
PREHOOK: Input: default@over1k_small
PREHOOK: Output: default@t1
POSTHOOK: query: INSERT INTO TABLE t1 select `dec` from over1k_small
POSTHOOK: type: QUERY
POSTHOOK: Input: default@over1k_small
POSTHOOK: Output: default@t1
POSTHOOK: Lineage: t1.dec EXPRESSION [(over1k_small)over1k_small.FieldSchema(name:dec, type:decimal(4,2), comment:null), ]
PREHOOK: query: CREATE TABLE t2_small(`dec` decimal(4,0)) STORED AS ORC
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@t2_small
POSTHOOK: query: CREATE TABLE t2_small(`dec` decimal(4,0)) STORED AS ORC
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@t2_small
PREHOOK: query: INSERT INTO TABLE t2 select `dec` from over1k_small
PREHOOK: type: QUERY
PREHOOK: Input: default@over1k_small
PREHOOK: Output: default@t2
POSTHOOK: query: INSERT INTO TABLE t2 select `dec` from over1k_small
POSTHOOK: type: QUERY
POSTHOOK: Input: default@over1k_small
POSTHOOK: Output: default@t2
POSTHOOK: Lineage: t2.dec EXPRESSION [(over1k_small)over1k_small.FieldSchema(name:dec, type:decimal(4,2), comment:null), ]
PREHOOK: query: explain vectorization detail
select t1_small.`dec`, t2_small.`dec` from t1_small join t2_small on (t1_small.`dec`=t2_small.`dec`)
PREHOOK: type: QUERY
POSTHOOK: query: explain vectorization detail
select t1_small.`dec`, t2_small.`dec` from t1_small join t2_small on (t1_small.`dec`=t2_small.`dec`)
POSTHOOK: type: QUERY
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-4 is a root stage
  Stage-3 depends on stages: Stage-4
  Stage-0 depends on stages: Stage-3

STAGE PLANS:
  Stage: Stage-4
    Map Reduce Local Work
      Alias -> Map Local Tables:
        $hdt$_0:t1_small 
          Fetch Operator
            limit: -1
      Alias -> Map Local Operator Tree:
        $hdt$_0:t1_small 
          TableScan
            alias: t1_small
            Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
            Filter Operator
              predicate: dec is not null (type: boolean)
              Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
              Select Operator
                expressions: dec (type: decimal(4,2))
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
                HashTable Sink Operator
                  keys:
                    0 _col0 (type: decimal(6,2))
                    1 _col0 (type: decimal(6,2))

  Stage: Stage-3
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: t2_small
            Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
            TableScan Vectorization:
                native: true
                vectorizationSchemaColumns: [0:dec:decimal(4,0), 1:ROW__ID:struct<transactionid:bigint,bucketid:int,rowid:bigint>]
            Filter Operator
              Filter Vectorization:
                  className: VectorFilterOperator
                  native: true
                  predicateExpression: SelectColumnIsNotNull(col 0:decimal(4,0))
              predicate: dec is not null (type: boolean)
              Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
              Select Operator
                expressions: dec (type: decimal(4,0))
                outputColumnNames: _col0
                Select Vectorization:
                    className: VectorSelectOperator
                    native: true
                    projectedOutputColumnNums: [0]
                Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
                Map Join Operator
                  condition map:
                       Inner Join 0 to 1
                  keys:
                    0 _col0 (type: decimal(6,2))
                    1 _col0 (type: decimal(6,2))
                  Map Join Vectorization:
                      className: VectorMapJoinOperator
                      native: false
                      nativeConditionsMet: hive.mapjoin.optimized.hashtable IS true, hive.vectorized.execution.mapjoin.native.enabled IS true, One MapJoin Condition IS true, No nullsafe IS true, Small table vectorizes IS true
                      nativeConditionsNotMet: hive.execution.engine mr IN [tez, spark] IS false, Optimized Table and Supports Key Types IS false
                      nativeNotSupportedKeyTypes: DECIMAL
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
                  File Output Operator
                    compressed: false
                    File Sink Vectorization:
                        className: VectorFileSinkOperator
                        native: false
                    Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
      Execution mode: vectorized
      Map Vectorization:
          enabled: true
          enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
          inputFormatFeatureSupport: []
          featureSupportInUse: []
          inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
          allNative: false
          usesVectorUDFAdaptor: false
          vectorized: true
          rowBatchContext:
              dataColumnCount: 1
              includeColumns: [0]
              dataColumns: dec:decimal(4,0)
              partitionColumnCount: 0
              scratchColumnTypeNames: []
      Local Work:
        Map Reduce Local Work

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select t1_small.`dec`, t2_small.`dec` from t1_small join t2_small on (t1_small.`dec`=t2_small.`dec`)
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_small
PREHOOK: Input: default@t2_small
#### A masked pattern was here ####
POSTHOOK: query: select t1_small.`dec`, t2_small.`dec` from t1_small join t2_small on (t1_small.`dec`=t2_small.`dec`)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_small
POSTHOOK: Input: default@t2_small
#### A masked pattern was here ####
