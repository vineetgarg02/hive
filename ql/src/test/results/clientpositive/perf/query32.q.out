PREHOOK: query: explain
select  sum(cs_ext_discount_amt)  as `excess discount amount` 
from 
   catalog_sales 
   ,item 
   ,date_dim
where
i_manufact_id = 269
and i_item_sk = cs_item_sk 
and d_date between '1998-03-18' and 
        (cast('1998-03-18' as date) + 90 days)
and d_date_sk = cs_sold_date_sk 
and cs_ext_discount_amt  
     > ( 
         select 
            1.3 * avg(cs_ext_discount_amt) 
         from 
            catalog_sales 
           ,date_dim
         where 
              cs_item_sk = i_item_sk 
          and d_date between '1998-03-18' and
                             (cast('1998-03-18' as date) + 90 days)
          and d_date_sk = cs_sold_date_sk 
      ) 
limit 100
PREHOOK: type: QUERY
POSTHOOK: query: explain
select  sum(cs_ext_discount_amt)  as `excess discount amount` 
from 
   catalog_sales 
   ,item 
   ,date_dim
where
i_manufact_id = 269
and i_item_sk = cs_item_sk 
and d_date between '1998-03-18' and 
        (cast('1998-03-18' as date) + 90 days)
and d_date_sk = cs_sold_date_sk 
and cs_ext_discount_amt  
     > ( 
         select 
            1.3 * avg(cs_ext_discount_amt) 
         from 
            catalog_sales 
           ,date_dim
         where 
              cs_item_sk = i_item_sk 
          and d_date between '1998-03-18' and
                             (cast('1998-03-18' as date) + 90 days)
          and d_date_sk = cs_sold_date_sk 
      ) 
limit 100
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 8 (SIMPLE_EDGE)
Reducer 3 <- Map 9 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Reducer 3 (SIMPLE_EDGE), Reducer 7 (ONE_TO_ONE_EDGE)
Reducer 5 <- Reducer 4 (CUSTOM_SIMPLE_EDGE)
Reducer 6 <- Map 1 (SIMPLE_EDGE), Map 9 (SIMPLE_EDGE)
Reducer 7 <- Reducer 6 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 5
      File Output Operator [FS_39]
        Limit [LIM_38] (rows=1 width=112)
          Number of rows:100
          Group By Operator [GBY_36] (rows=1 width=112)
            Output:["_col0"],aggregations:["sum(VALUE._col0)"]
          <-Reducer 4 [CUSTOM_SIMPLE_EDGE]
            PARTITION_ONLY_SHUFFLE [RS_35]
              Group By Operator [GBY_34] (rows=1 width=112)
                Output:["_col0"],aggregations:["sum(_col2)"]
                Select Operator [SEL_33] (rows=127771498 width=135)
                  Output:["_col2"]
                  Filter Operator [FIL_32] (rows=127771498 width=135)
                    predicate:(_col2 > _col7)
                    Merge Join Operator [MERGEJOIN_60] (rows=383314495 width=135)
                      Conds:RS_29._col3=RS_30._col1(Inner),Output:["_col2","_col7"]
                    <-Reducer 3 [SIMPLE_EDGE]
                      SHUFFLE [RS_29]
                        PartitionCols:_col3
                        Merge Join Operator [MERGEJOIN_58] (rows=348467716 width=135)
                          Conds:RS_26._col0=RS_27._col0(Inner),Output:["_col2","_col3"]
                        <-Map 9 [SIMPLE_EDGE]
                          SHUFFLE [RS_27]
                            PartitionCols:_col0
                            Select Operator [SEL_8] (rows=8116 width=1119)
                              Output:["_col0"]
                              Filter Operator [FIL_54] (rows=8116 width=1119)
                                predicate:(CAST( d_date AS TIMESTAMP) BETWEEN 1998-03-18 00:00:00.0 AND 1998-06-16 01:00:00.0 and d_date_sk is not null)
                                TableScan [TS_6] (rows=73049 width=1119)
                                  default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_date"]
                        <-Reducer 2 [SIMPLE_EDGE]
                          SHUFFLE [RS_26]
                            PartitionCols:_col0
                            Merge Join Operator [MERGEJOIN_57] (rows=316788826 width=135)
                              Conds:RS_23._col1=RS_24._col0(Inner),Output:["_col0","_col2","_col3"]
                            <-Map 1 [SIMPLE_EDGE]
                              SHUFFLE [RS_23]
                                PartitionCols:_col1
                                Select Operator [SEL_2] (rows=287989836 width=135)
                                  Output:["_col0","_col1","_col2"]
                                  Filter Operator [FIL_52] (rows=287989836 width=135)
                                    predicate:(cs_item_sk is not null and cs_sold_date_sk is not null)
                                    TableScan [TS_0] (rows=287989836 width=135)
                                      default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:NONE,Output:["cs_sold_date_sk","cs_item_sk","cs_ext_discount_amt"]
                            <-Map 8 [SIMPLE_EDGE]
                              SHUFFLE [RS_24]
                                PartitionCols:_col0
                                Select Operator [SEL_5] (rows=231000 width=1436)
                                  Output:["_col0"]
                                  Filter Operator [FIL_53] (rows=231000 width=1436)
                                    predicate:((i_manufact_id = 269) and i_item_sk is not null)
                                    TableScan [TS_3] (rows=462000 width=1436)
                                      default@item,item,Tbl:COMPLETE,Col:NONE,Output:["i_item_sk","i_manufact_id"]
                    <-Reducer 7 [ONE_TO_ONE_EDGE]
                      FORWARD [RS_30]
                        PartitionCols:_col1
                        Select Operator [SEL_22] (rows=158394413 width=135)
                          Output:["_col0","_col1"]
                          Group By Operator [GBY_21] (rows=158394413 width=135)
                            Output:["_col0","_col1"],aggregations:["avg(VALUE._col0)"],keys:KEY._col0
                          <-Reducer 6 [SIMPLE_EDGE]
                            SHUFFLE [RS_20]
                              PartitionCols:_col0
                              Group By Operator [GBY_19] (rows=316788826 width=135)
                                Output:["_col0","_col1"],aggregations:["avg(_col2)"],keys:_col1
                                Merge Join Operator [MERGEJOIN_59] (rows=316788826 width=135)
                                  Conds:RS_15._col0=RS_16._col0(Inner),Output:["_col1","_col2"]
                                <-Map 1 [SIMPLE_EDGE]
                                  SHUFFLE [RS_15]
                                    PartitionCols:_col0
                                     Please refer to the previous Select Operator [SEL_2]
                                <-Map 9 [SIMPLE_EDGE]
                                  SHUFFLE [RS_16]
                                    PartitionCols:_col0
                                     Please refer to the previous Select Operator [SEL_8]

