Warning: Shuffle Join MERGEJOIN[110][tables = [$hdt$_3, $hdt$_4]] in Stage 'Reducer 14' is a cross product
PREHOOK: query: explain
select  a.ca_state state, count(*) cnt
 from customer_address a
     ,customer c
     ,store_sales s
     ,date_dim d
     ,item i
 where       a.ca_address_sk = c.c_current_addr_sk
 	and c.c_customer_sk = s.ss_customer_sk
 	and s.ss_sold_date_sk = d.d_date_sk
 	and s.ss_item_sk = i.i_item_sk
 	and d.d_month_seq = 
 	     (select distinct (d_month_seq)
 	      from date_dim
               where d_year = 2000
 	        and d_moy = 2 )
 	and i.i_current_price > 1.2 * 
             (select avg(j.i_current_price) 
 	     from item j 
 	     where j.i_category = i.i_category)
 group by a.ca_state
 having count(*) >= 10
 order by cnt 
 limit 100
PREHOOK: type: QUERY
POSTHOOK: query: explain
select  a.ca_state state, count(*) cnt
 from customer_address a
     ,customer c
     ,store_sales s
     ,date_dim d
     ,item i
 where       a.ca_address_sk = c.c_current_addr_sk
 	and c.c_customer_sk = s.ss_customer_sk
 	and s.ss_sold_date_sk = d.d_date_sk
 	and s.ss_item_sk = i.i_item_sk
 	and d.d_month_seq = 
 	     (select distinct (d_month_seq)
 	      from date_dim
               where d_year = 2000
 	        and d_moy = 2 )
 	and i.i_current_price > 1.2 * 
             (select avg(j.i_current_price) 
 	     from item j 
 	     where j.i_category = i.i_category)
 group by a.ca_state
 having count(*) >= 10
 order by cnt 
 limit 100
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 11 <- Map 10 (SIMPLE_EDGE), Map 12 (SIMPLE_EDGE)
Reducer 14 <- Map 13 (CUSTOM_SIMPLE_EDGE), Reducer 17 (CUSTOM_SIMPLE_EDGE)
Reducer 16 <- Map 15 (SIMPLE_EDGE)
Reducer 17 <- Reducer 16 (CUSTOM_SIMPLE_EDGE)
Reducer 18 <- Map 15 (SIMPLE_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 9 (SIMPLE_EDGE)
Reducer 20 <- Map 19 (SIMPLE_EDGE)
Reducer 3 <- Reducer 11 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Reducer 14 (SIMPLE_EDGE), Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Reducer 18 (SIMPLE_EDGE), Reducer 4 (SIMPLE_EDGE)
Reducer 6 <- Reducer 20 (SIMPLE_EDGE), Reducer 5 (SIMPLE_EDGE)
Reducer 7 <- Reducer 6 (SIMPLE_EDGE)
Reducer 8 <- Reducer 7 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 8
      File Output Operator [FS_77]
        Limit [LIM_76] (rows=100 width=88)
          Number of rows:100
          Select Operator [SEL_75] (rows=51535934 width=88)
            Output:["_col0","_col1"]
          <-Reducer 7 [SIMPLE_EDGE]
            SHUFFLE [RS_74]
              Filter Operator [FIL_72] (rows=51535934 width=88)
                predicate:(_col1 >= 10)
                Group By Operator [GBY_71] (rows=154607804 width=88)
                  Output:["_col0","_col1"],aggregations:["count(VALUE._col0)"],keys:KEY._col0
                <-Reducer 6 [SIMPLE_EDGE]
                  SHUFFLE [RS_70]
                    PartitionCols:_col0
                    Group By Operator [GBY_69] (rows=309215609 width=88)
                      Output:["_col0","_col1"],aggregations:["count()"],keys:_col0
                      Select Operator [SEL_68] (rows=309215609 width=88)
                        Output:["_col0"]
                        Filter Operator [FIL_67] (rows=309215609 width=88)
                          predicate:(_col2 > (1.2 * CASE WHEN (_col6 is null) THEN (null) ELSE (_col5) END))
                          Merge Join Operator [MERGEJOIN_114] (rows=927646829 width=88)
                            Conds:RS_64._col3=RS_65._col2(Left Outer),Output:["_col0","_col2","_col5","_col6"]
                          <-Reducer 20 [SIMPLE_EDGE]
                            SHUFFLE [RS_65]
                              PartitionCols:_col2
                              Select Operator [SEL_60] (rows=231000 width=1436)
                                Output:["_col0","_col1","_col2"]
                                Group By Operator [GBY_59] (rows=231000 width=1436)
                                  Output:["_col0","_col1"],aggregations:["avg(VALUE._col0)"],keys:KEY._col0
                                <-Map 19 [SIMPLE_EDGE]
                                  SHUFFLE [RS_58]
                                    PartitionCols:_col0
                                    Group By Operator [GBY_57] (rows=462000 width=1436)
                                      Output:["_col0","_col1"],aggregations:["avg(i_current_price)"],keys:i_category
                                      Filter Operator [FIL_107] (rows=462000 width=1436)
                                        predicate:i_category is not null
                                        TableScan [TS_54] (rows=462000 width=1436)
                                          default@item,j,Tbl:COMPLETE,Col:NONE,Output:["i_current_price","i_category"]
                          <-Reducer 5 [SIMPLE_EDGE]
                            SHUFFLE [RS_64]
                              PartitionCols:_col3
                              Merge Join Operator [MERGEJOIN_113] (rows=843315281 width=88)
                                Conds:RS_61._col1=RS_62._col0(Inner),Output:["_col0","_col2","_col3"]
                              <-Reducer 18 [SIMPLE_EDGE]
                                SHUFFLE [RS_62]
                                  PartitionCols:_col0
                                  Group By Operator [GBY_52] (rows=9131 width=1119)
                                    Output:["_col0"],keys:KEY._col0
                                  <-Map 15 [SIMPLE_EDGE]
                                    SHUFFLE [RS_51]
                                      PartitionCols:_col0
                                      Group By Operator [GBY_50] (rows=18262 width=1119)
                                        Output:["_col0"],keys:d_month_seq
                                        Select Operator [SEL_49] (rows=18262 width=1119)
                                          Output:["d_month_seq"]
                                          Filter Operator [FIL_106] (rows=18262 width=1119)
                                            predicate:((d_year = 2000) and (d_moy = 2) and d_month_seq is not null)
                                            TableScan [TS_19] (rows=73049 width=1119)
                                              default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_month_seq","d_year","d_moy"]
                              <-Reducer 4 [SIMPLE_EDGE]
                                SHUFFLE [RS_61]
                                  PartitionCols:_col1
                                  Select Operator [SEL_46] (rows=766650239 width=88)
                                    Output:["_col0","_col1","_col2","_col3"]
                                    Merge Join Operator [MERGEJOIN_112] (rows=766650239 width=88)
                                      Conds:RS_43._col1=RS_44._col0(Inner),Output:["_col4","_col8","_col10","_col11"]
                                    <-Reducer 14 [SIMPLE_EDGE]
                                      SHUFFLE [RS_44]
                                        PartitionCols:_col0
                                        Merge Join Operator [MERGEJOIN_110] (rows=462000 width=1445)
                                          Conds:(Inner),Output:["_col0","_col1","_col2"]
                                        <-Map 13 [CUSTOM_SIMPLE_EDGE]
                                          PARTITION_ONLY_SHUFFLE [RS_33]
                                            Select Operator [SEL_18] (rows=462000 width=1436)
                                              Output:["_col0","_col1","_col2"]
                                              Filter Operator [FIL_104] (rows=462000 width=1436)
                                                predicate:i_item_sk is not null
                                                TableScan [TS_16] (rows=462000 width=1436)
                                                  default@item,i,Tbl:COMPLETE,Col:NONE,Output:["i_item_sk","i_current_price","i_category"]
                                        <-Reducer 17 [CUSTOM_SIMPLE_EDGE]
                                          PARTITION_ONLY_SHUFFLE [RS_34]
                                            Select Operator [SEL_32] (rows=1 width=8)
                                              Filter Operator [FIL_31] (rows=1 width=8)
                                                predicate:(sq_count_check(_col0) <= 1)
                                                Group By Operator [GBY_29] (rows=1 width=8)
                                                  Output:["_col0"],aggregations:["count(VALUE._col0)"]
                                                <-Reducer 16 [CUSTOM_SIMPLE_EDGE]
                                                  PARTITION_ONLY_SHUFFLE [RS_28]
                                                    Group By Operator [GBY_27] (rows=1 width=8)
                                                      Output:["_col0"],aggregations:["count()"]
                                                      Select Operator [SEL_25] (rows=9131 width=1119)
                                                        Group By Operator [GBY_24] (rows=9131 width=1119)
                                                          Output:["_col0"],keys:KEY._col0
                                                        <-Map 15 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_23]
                                                            PartitionCols:_col0
                                                            Group By Operator [GBY_22] (rows=18262 width=1119)
                                                              Output:["_col0"],keys:d_month_seq
                                                              Select Operator [SEL_21] (rows=18262 width=1119)
                                                                Output:["d_month_seq"]
                                                                Filter Operator [FIL_105] (rows=18262 width=1119)
                                                                  predicate:((d_year = 2000) and (d_moy = 2))
                                                                   Please refer to the previous TableScan [TS_19]
                                    <-Reducer 3 [SIMPLE_EDGE]
                                      SHUFFLE [RS_43]
                                        PartitionCols:_col1
                                        Merge Join Operator [MERGEJOIN_111] (rows=696954748 width=88)
                                          Conds:RS_40._col2=RS_41._col0(Inner),Output:["_col1","_col4","_col8"]
                                        <-Reducer 11 [SIMPLE_EDGE]
                                          SHUFFLE [RS_41]
                                            PartitionCols:_col0
                                            Merge Join Operator [MERGEJOIN_109] (rows=88000001 width=860)
                                              Conds:RS_12._col1=RS_13._col0(Inner),Output:["_col0","_col3"]
                                            <-Map 10 [SIMPLE_EDGE]
                                              SHUFFLE [RS_12]
                                                PartitionCols:_col1
                                                Select Operator [SEL_8] (rows=80000000 width=860)
                                                  Output:["_col0","_col1"]
                                                  Filter Operator [FIL_102] (rows=80000000 width=860)
                                                    predicate:(c_current_addr_sk is not null and c_customer_sk is not null)
                                                    TableScan [TS_6] (rows=80000000 width=860)
                                                      default@customer,c,Tbl:COMPLETE,Col:NONE,Output:["c_customer_sk","c_current_addr_sk"]
                                            <-Map 12 [SIMPLE_EDGE]
                                              SHUFFLE [RS_13]
                                                PartitionCols:_col0
                                                Select Operator [SEL_11] (rows=40000000 width=1014)
                                                  Output:["_col0","_col1"]
                                                  Filter Operator [FIL_103] (rows=40000000 width=1014)
                                                    predicate:ca_address_sk is not null
                                                    TableScan [TS_9] (rows=40000000 width=1014)
                                                      default@customer_address,a,Tbl:COMPLETE,Col:NONE,Output:["ca_address_sk","ca_state"]
                                        <-Reducer 2 [SIMPLE_EDGE]
                                          SHUFFLE [RS_40]
                                            PartitionCols:_col2
                                            Merge Join Operator [MERGEJOIN_108] (rows=633595212 width=88)
                                              Conds:RS_37._col0=RS_38._col0(Inner),Output:["_col1","_col2","_col4"]
                                            <-Map 1 [SIMPLE_EDGE]
                                              SHUFFLE [RS_37]
                                                PartitionCols:_col0
                                                Select Operator [SEL_2] (rows=575995635 width=88)
                                                  Output:["_col0","_col1","_col2"]
                                                  Filter Operator [FIL_100] (rows=575995635 width=88)
                                                    predicate:(ss_customer_sk is not null and ss_sold_date_sk is not null and ss_item_sk is not null)
                                                    TableScan [TS_0] (rows=575995635 width=88)
                                                      default@store_sales,s,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_item_sk","ss_customer_sk"]
                                            <-Map 9 [SIMPLE_EDGE]
                                              SHUFFLE [RS_38]
                                                PartitionCols:_col0
                                                Select Operator [SEL_5] (rows=73049 width=1119)
                                                  Output:["_col0","_col1"]
                                                  Filter Operator [FIL_101] (rows=73049 width=1119)
                                                    predicate:(d_date_sk is not null and d_month_seq is not null)
                                                    TableScan [TS_3] (rows=73049 width=1119)
                                                      default@date_dim,d,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_month_seq"]

