PREHOOK: query: -- SORT_QUERY_RESULTS

-- exists test
create view cv1 as 
select * 
from src b 
where exists
  (select a.key 
  from src a 
  where b.value = a.value  and a.key = b.key and a.value > 'val_9')
PREHOOK: type: CREATEVIEW
PREHOOK: Input: default@src
PREHOOK: Output: database:default
PREHOOK: Output: default@cv1
POSTHOOK: query: -- SORT_QUERY_RESULTS

-- exists test
create view cv1 as 
select * 
from src b 
where exists
  (select a.key 
  from src a 
  where b.value = a.value  and a.key = b.key and a.value > 'val_9')
POSTHOOK: type: CREATEVIEW
POSTHOOK: Input: default@src
POSTHOOK: Output: database:default
POSTHOOK: Output: default@cv1
PREHOOK: query: describe extended cv1
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@cv1
POSTHOOK: query: describe extended cv1
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@cv1
key                 	string              	                    
value               	string              	                    
	 	 
#### A masked pattern was here ####
from src b 	 	 
where exists	 	 
  (select a.key 	 	 
  from src a 	 	 
  where b.value = a.value  and a.key = b.key and a.value > 'val_9'), viewExpandedText:select `b`.`key`, `b`.`value` 	 	 
from `default`.`src` `b` 	 	 
where exists	 	 
  (select `a`.`key` 	 	 
  from `default`.`src` `a` 	 	 
  where `b`.`value` = `a`.`value`  and `a`.`key` = `b`.`key` and `a`.`value` > 'val_9'), tableType:VIRTUAL_VIEW)		 
PREHOOK: query: select * 
from cv1 where cv1.key in (select key from cv1 c where c.key > '95')
PREHOOK: type: QUERY
PREHOOK: Input: default@cv1
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: select * 
from cv1 where cv1.key in (select key from cv1 c where c.key > '95')
POSTHOOK: type: QUERY
POSTHOOK: Input: default@cv1
POSTHOOK: Input: default@src
#### A masked pattern was here ####
96	val_96
97	val_97
97	val_97
98	val_98
98	val_98
PREHOOK: query: -- not in test
create view cv2 as 
select * 
from src b 
where b.key not in
  (select a.key 
  from src a 
  where b.value = a.value  and a.key = b.key and a.value > 'val_11'
  )
PREHOOK: type: CREATEVIEW
PREHOOK: Input: default@src
PREHOOK: Output: database:default
PREHOOK: Output: default@cv2
POSTHOOK: query: -- not in test
create view cv2 as 
select * 
from src b 
where b.key not in
  (select a.key 
  from src a 
  where b.value = a.value  and a.key = b.key and a.value > 'val_11'
  )
POSTHOOK: type: CREATEVIEW
POSTHOOK: Input: default@src
POSTHOOK: Output: database:default
POSTHOOK: Output: default@cv2
PREHOOK: query: describe extended cv2
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@cv2
POSTHOOK: query: describe extended cv2
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@cv2
key                 	string              	                    
value               	string              	                    
	 	 
#### A masked pattern was here ####
from src b 	 	 
where b.key not in	 	 
  (select a.key 	 	 
  from src a 	 	 
  where b.value = a.value  and a.key = b.key and a.value > 'val_11'	 	 
  ), viewExpandedText:select `b`.`key`, `b`.`value` 	 	 
from `default`.`src` `b` 	 	 
where `b`.`key` not in	 	 
  (select `a`.`key` 	 	 
  from `default`.`src` `a` 	 	 
  where `b`.`value` = `a`.`value`  and `a`.`key` = `b`.`key` and `a`.`value` > 'val_11'	 	 
  ), tableType:VIRTUAL_VIEW)		 
PREHOOK: query: explain
select * 
from cv2 where cv2.key in (select key from cv2 c where c.key < '11')
PREHOOK: type: QUERY
POSTHOOK: query: explain
select * 
from cv2 where cv2.key in (select key from cv2 c where c.key < '11')
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 10 <- Map 9 (SIMPLE_EDGE), Reducer 14 (SIMPLE_EDGE)
        Reducer 11 <- Reducer 10 (SIMPLE_EDGE)
        Reducer 13 <- Map 12 (SIMPLE_EDGE), Reducer 16 (SIMPLE_EDGE)
        Reducer 14 <- Reducer 13 (SIMPLE_EDGE)
        Reducer 16 <- Map 15 (SIMPLE_EDGE)
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Reducer 6 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 11 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
        Reducer 5 <- Map 4 (SIMPLE_EDGE), Reducer 8 (SIMPLE_EDGE)
        Reducer 6 <- Reducer 5 (SIMPLE_EDGE)
        Reducer 8 <- Map 7 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: b
                  properties:
                    insideView TRUE
                  Statistics: Num rows: 500 Data size: 89000 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: key (type: string), value (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 500 Data size: 89000 Basic stats: COMPLETE Column stats: COMPLETE
                    Reduce Output Operator
                      key expressions: _col0 (type: string), _col1 (type: string), _col0 (type: string)
                      sort order: +++
                      Map-reduce partition columns: _col0 (type: string), _col1 (type: string), _col0 (type: string)
                      Statistics: Num rows: 500 Data size: 89000 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: llap
            LLAP IO: no inputs
        Map 12 
            Map Operator Tree:
                TableScan
                  alias: a
                  Statistics: Num rows: 500 Data size: 89000 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (value > 'val_11') (type: boolean)
                    Statistics: Num rows: 166 Data size: 29548 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: key (type: string), value (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 166 Data size: 29548 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: string), _col1 (type: string)
                        sort order: ++
                        Map-reduce partition columns: _col0 (type: string), _col1 (type: string)
                        Statistics: Num rows: 166 Data size: 29548 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: llap
            LLAP IO: no inputs
        Map 15 
            Map Operator Tree:
                TableScan
                  alias: b
                  properties:
                    insideView TRUE
                  Statistics: Num rows: 500 Data size: 89000 Basic stats: COMPLETE Column stats: COMPLETE
                  Group By Operator
                    keys: key (type: string), value (type: string)
                    mode: hash
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 250 Data size: 44500 Basic stats: COMPLETE Column stats: COMPLETE
                    Reduce Output Operator
                      key expressions: _col0 (type: string), _col1 (type: string)
                      sort order: ++
                      Map-reduce partition columns: _col0 (type: string), _col1 (type: string)
                      Statistics: Num rows: 250 Data size: 44500 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: llap
            LLAP IO: no inputs
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: a
                  Statistics: Num rows: 500 Data size: 89000 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (value > 'val_11') (type: boolean)
                    Statistics: Num rows: 166 Data size: 29548 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: key (type: string), value (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 166 Data size: 29548 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: string), _col1 (type: string)
                        sort order: ++
                        Map-reduce partition columns: _col0 (type: string), _col1 (type: string)
                        Statistics: Num rows: 166 Data size: 29548 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: llap
            LLAP IO: no inputs
        Map 7 
            Map Operator Tree:
                TableScan
                  alias: b
                  properties:
                    insideView TRUE
                  Statistics: Num rows: 500 Data size: 89000 Basic stats: COMPLETE Column stats: COMPLETE
                  Group By Operator
                    keys: key (type: string), value (type: string)
                    mode: hash
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 250 Data size: 44500 Basic stats: COMPLETE Column stats: COMPLETE
                    Reduce Output Operator
                      key expressions: _col0 (type: string), _col1 (type: string)
                      sort order: ++
                      Map-reduce partition columns: _col0 (type: string), _col1 (type: string)
                      Statistics: Num rows: 250 Data size: 44500 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: llap
            LLAP IO: no inputs
        Map 9 
            Map Operator Tree:
                TableScan
                  alias: b
                  properties:
                    insideView TRUE
                  Statistics: Num rows: 500 Data size: 89000 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: key (type: string), value (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 500 Data size: 89000 Basic stats: COMPLETE Column stats: COMPLETE
                    Reduce Output Operator
                      key expressions: _col0 (type: string), _col1 (type: string), _col0 (type: string)
                      sort order: +++
                      Map-reduce partition columns: _col0 (type: string), _col1 (type: string), _col0 (type: string)
                      Statistics: Num rows: 500 Data size: 89000 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: llap
            LLAP IO: no inputs
        Reducer 10 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col0 (type: string), _col1 (type: string), _col0 (type: string)
                  1 _col0 (type: string), _col2 (type: string), _col1 (type: string)
                outputColumnNames: _col0, _col5
                Statistics: Num rows: 1 Data size: 91 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: _col0 (type: string), _col5 (type: boolean)
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 1 Data size: 87 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ((_col0 < '11') and _col1 is null) (type: boolean)
                    Statistics: Num rows: 1 Data size: 87 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: _col0 (type: string)
                      outputColumnNames: _col0
                      Statistics: Num rows: 1 Data size: 87 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        keys: _col0 (type: string)
                        mode: hash
                        outputColumnNames: _col0
                        Statistics: Num rows: 1 Data size: 87 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          key expressions: _col0 (type: string)
                          sort order: +
                          Map-reduce partition columns: _col0 (type: string)
                          Statistics: Num rows: 1 Data size: 87 Basic stats: COMPLETE Column stats: COMPLETE
        Reducer 11 
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                keys: KEY._col0 (type: string)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 87 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  key expressions: _col0 (type: string)
                  sort order: +
                  Map-reduce partition columns: _col0 (type: string)
                  Statistics: Num rows: 1 Data size: 87 Basic stats: COMPLETE Column stats: COMPLETE
        Reducer 13 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col0 (type: string), _col1 (type: string)
                  1 _col0 (type: string), _col1 (type: string)
                outputColumnNames: _col0, _col2, _col3
                Statistics: Num rows: 1 Data size: 265 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: _col0 (type: string), _col3 (type: string), _col2 (type: string)
                  outputColumnNames: _col0, _col3, _col2
                  Statistics: Num rows: 1 Data size: 265 Basic stats: COMPLETE Column stats: COMPLETE
                  Group By Operator
                    keys: _col0 (type: string), _col3 (type: string), _col2 (type: string)
                    mode: hash
                    outputColumnNames: _col0, _col1, _col2
                    Statistics: Num rows: 1 Data size: 265 Basic stats: COMPLETE Column stats: COMPLETE
                    Reduce Output Operator
                      key expressions: _col0 (type: string), _col1 (type: string), _col2 (type: string)
                      sort order: +++
                      Map-reduce partition columns: _col0 (type: string), _col1 (type: string), _col2 (type: string)
                      Statistics: Num rows: 1 Data size: 265 Basic stats: COMPLETE Column stats: COMPLETE
        Reducer 14 
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                keys: KEY._col0 (type: string), KEY._col1 (type: string), KEY._col2 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 1 Data size: 265 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: _col0 (type: string), _col2 (type: string), _col1 (type: string), true (type: boolean)
                  outputColumnNames: _col0, _col1, _col2, _col3
                  Statistics: Num rows: 1 Data size: 269 Basic stats: COMPLETE Column stats: COMPLETE
                  Reduce Output Operator
                    key expressions: _col0 (type: string), _col2 (type: string), _col1 (type: string)
                    sort order: +++
                    Map-reduce partition columns: _col0 (type: string), _col2 (type: string), _col1 (type: string)
                    Statistics: Num rows: 1 Data size: 269 Basic stats: COMPLETE Column stats: COMPLETE
                    value expressions: _col3 (type: boolean)
        Reducer 16 
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                keys: KEY._col0 (type: string), KEY._col1 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 250 Data size: 44500 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  key expressions: _col0 (type: string), _col1 (type: string)
                  sort order: ++
                  Map-reduce partition columns: _col0 (type: string), _col1 (type: string)
                  Statistics: Num rows: 250 Data size: 44500 Basic stats: COMPLETE Column stats: COMPLETE
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col0 (type: string), _col1 (type: string), _col0 (type: string)
                  1 _col0 (type: string), _col2 (type: string), _col1 (type: string)
                outputColumnNames: _col0, _col1, _col5
                Statistics: Num rows: 1 Data size: 182 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: _col0 (type: string), _col1 (type: string), _col5 (type: boolean)
                  outputColumnNames: _col0, _col1, _col2
                  Statistics: Num rows: 1 Data size: 178 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (not CASE WHEN (_col2 is not null) THEN (true) WHEN (_col0 is null) THEN (null) ELSE (false) END) (type: boolean)
                    Statistics: Num rows: 1 Data size: 178 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: _col0 (type: string), _col1 (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 1 Data size: 178 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: string)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: string)
                        Statistics: Num rows: 1 Data size: 178 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col1 (type: string)
        Reducer 3 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col0 (type: string)
                  1 _col0 (type: string)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 1 Data size: 178 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 178 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
        Reducer 5 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col0 (type: string), _col1 (type: string)
                  1 _col0 (type: string), _col1 (type: string)
                outputColumnNames: _col0, _col2, _col3
                Statistics: Num rows: 1 Data size: 265 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: _col0 (type: string), _col3 (type: string), _col2 (type: string)
                  outputColumnNames: _col0, _col3, _col2
                  Statistics: Num rows: 1 Data size: 265 Basic stats: COMPLETE Column stats: COMPLETE
                  Group By Operator
                    keys: _col0 (type: string), _col3 (type: string), _col2 (type: string)
                    mode: hash
                    outputColumnNames: _col0, _col1, _col2
                    Statistics: Num rows: 1 Data size: 265 Basic stats: COMPLETE Column stats: COMPLETE
                    Reduce Output Operator
                      key expressions: _col0 (type: string), _col1 (type: string), _col2 (type: string)
                      sort order: +++
                      Map-reduce partition columns: _col0 (type: string), _col1 (type: string), _col2 (type: string)
                      Statistics: Num rows: 1 Data size: 265 Basic stats: COMPLETE Column stats: COMPLETE
        Reducer 6 
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                keys: KEY._col0 (type: string), KEY._col1 (type: string), KEY._col2 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 1 Data size: 265 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: _col0 (type: string), _col2 (type: string), _col1 (type: string), true (type: boolean)
                  outputColumnNames: _col0, _col1, _col2, _col3
                  Statistics: Num rows: 1 Data size: 269 Basic stats: COMPLETE Column stats: COMPLETE
                  Reduce Output Operator
                    key expressions: _col0 (type: string), _col2 (type: string), _col1 (type: string)
                    sort order: +++
                    Map-reduce partition columns: _col0 (type: string), _col2 (type: string), _col1 (type: string)
                    Statistics: Num rows: 1 Data size: 269 Basic stats: COMPLETE Column stats: COMPLETE
                    value expressions: _col3 (type: boolean)
        Reducer 8 
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                keys: KEY._col0 (type: string), KEY._col1 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 250 Data size: 44500 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  key expressions: _col0 (type: string), _col1 (type: string)
                  sort order: ++
                  Map-reduce partition columns: _col0 (type: string), _col1 (type: string)
                  Statistics: Num rows: 250 Data size: 44500 Basic stats: COMPLETE Column stats: COMPLETE

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select * 
from cv2 where cv2.key in (select key from cv2 c where c.key < '11')
PREHOOK: type: QUERY
PREHOOK: Input: default@cv2
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: select * 
from cv2 where cv2.key in (select key from cv2 c where c.key < '11')
POSTHOOK: type: QUERY
POSTHOOK: Input: default@cv2
POSTHOOK: Input: default@src
#### A masked pattern was here ####
PREHOOK: query: -- in where + having
create view cv3 as
select key, value, count(*) 
from src b
where b.key in (select key from src where src.key > '8')
group by key, value
having count(*) in (select count(*) from src s1 where s1.key > '9' group by s1.key )
PREHOOK: type: CREATEVIEW
PREHOOK: Input: default@src
PREHOOK: Output: database:default
PREHOOK: Output: default@cv3
POSTHOOK: query: -- in where + having
create view cv3 as
select key, value, count(*) 
from src b
where b.key in (select key from src where src.key > '8')
group by key, value
having count(*) in (select count(*) from src s1 where s1.key > '9' group by s1.key )
POSTHOOK: type: CREATEVIEW
POSTHOOK: Input: default@src
POSTHOOK: Output: database:default
POSTHOOK: Output: default@cv3
PREHOOK: query: describe extended cv3
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@cv3
POSTHOOK: query: describe extended cv3
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@cv3
key                 	string              	                    
value               	string              	                    
_c2                 	bigint              	                    
	 	 
#### A masked pattern was here ####
from src b	 	 
where b.key in (select key from src where src.key > '8')	 	 
group by key, value	 	 
having count(*) in (select count(*) from src s1 where s1.key > '9' group by s1.key ), viewExpandedText:select `b`.`key`, `b`.`value`, count(*) 	 	 
from `default`.`src` `b`	 	 
where `b`.`key` in (select `src`.`key` from `default`.`src` where `src`.`key` > '8')	 	 
group by `b`.`key`, `b`.`value`	 	 
having count(*) in (select count(*) from `default`.`src` `s1` where `s1`.`key` > '9' group by `s1`.`key` ), tableType:VIRTUAL_VIEW)		 
PREHOOK: query: select * from cv3
PREHOOK: type: QUERY
PREHOOK: Input: default@cv3
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: select * from cv3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@cv3
POSTHOOK: Input: default@src
#### A masked pattern was here ####
80	val_80	1
82	val_82	1
83	val_83	2
84	val_84	2
85	val_85	1
86	val_86	1
87	val_87	1
9	val_9	1
90	val_90	3
92	val_92	1
95	val_95	2
96	val_96	1
97	val_97	2
98	val_98	2
PREHOOK: query: -- join of subquery views
select *
from cv3
where cv3.key in (select key from cv1)
PREHOOK: type: QUERY
PREHOOK: Input: default@cv1
PREHOOK: Input: default@cv3
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: -- join of subquery views
select *
from cv3
where cv3.key in (select key from cv1)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@cv1
POSTHOOK: Input: default@cv3
POSTHOOK: Input: default@src
#### A masked pattern was here ####
90	val_90	3
92	val_92	1
95	val_95	2
96	val_96	1
97	val_97	2
98	val_98	2
PREHOOK: query: drop table tc
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table tc
POSTHOOK: type: DROPTABLE
PREHOOK: query: create table tc (`@d` int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@tc
POSTHOOK: query: create table tc (`@d` int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tc
PREHOOK: query: insert overwrite table tc select 1 from src limit 1
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@tc
POSTHOOK: query: insert overwrite table tc select 1 from src limit 1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@tc
POSTHOOK: Lineage: tc.@d SIMPLE []
PREHOOK: query: drop view tcv
PREHOOK: type: DROPVIEW
POSTHOOK: query: drop view tcv
POSTHOOK: type: DROPVIEW
PREHOOK: query: create view tcv as select * from tc b where exists (select a.`@d` from tc a where b.`@d`=a.`@d`)
PREHOOK: type: CREATEVIEW
PREHOOK: Input: default@tc
PREHOOK: Output: database:default
PREHOOK: Output: default@tcv
POSTHOOK: query: create view tcv as select * from tc b where exists (select a.`@d` from tc a where b.`@d`=a.`@d`)
POSTHOOK: type: CREATEVIEW
POSTHOOK: Input: default@tc
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tcv
PREHOOK: query: describe extended tcv
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@tcv
POSTHOOK: query: describe extended tcv
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@tcv
@d                  	int                 	                    
	 	 
#### A masked pattern was here ####
PREHOOK: query: select * from tcv
PREHOOK: type: QUERY
PREHOOK: Input: default@tc
PREHOOK: Input: default@tcv
#### A masked pattern was here ####
POSTHOOK: query: select * from tcv
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tc
POSTHOOK: Input: default@tcv
#### A masked pattern was here ####
1
