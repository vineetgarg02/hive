PREHOOK: query: explain select  ss_items.item_id
       ,ss_item_rev
       ,ss_item_rev/(ss_item_rev+cs_item_rev+ws_item_rev)/3 * 100 ss_dev
       ,cs_item_rev
       ,cs_item_rev/(ss_item_rev+cs_item_rev+ws_item_rev)/3 * 100 cs_dev
       ,ws_item_rev
       ,ws_item_rev/(ss_item_rev+cs_item_rev+ws_item_rev)/3 * 100 ws_dev
       ,(ss_item_rev+cs_item_rev+ws_item_rev)/3 average
FROM
( select i_item_id item_id ,sum(ss_ext_sales_price) as ss_item_rev 
 from store_sales
     JOIN item ON store_sales.ss_item_sk = item.i_item_sk
     JOIN date_dim ON store_sales.ss_sold_date_sk = date_dim.d_date_sk
     JOIN (select d1.d_date
                 from date_dim d1 JOIN date_dim d2 ON d1.d_week_seq = d2.d_week_seq
                 where d2.d_date = '1998-08-04') sub ON date_dim.d_date = sub.d_date
 group by i_item_id ) ss_items
JOIN
( select i_item_id item_id ,sum(cs_ext_sales_price) as cs_item_rev 
 from catalog_sales
     JOIN item ON catalog_sales.cs_item_sk = item.i_item_sk
     JOIN date_dim ON catalog_sales.cs_sold_date_sk = date_dim.d_date_sk
     JOIN (select d1.d_date
                 from date_dim d1 JOIN date_dim d2 ON d1.d_week_seq = d2.d_week_seq
                 where d2.d_date = '1998-08-04') sub ON date_dim.d_date = sub.d_date
 group by i_item_id ) cs_items
ON ss_items.item_id=cs_items.item_id
JOIN
( select i_item_id item_id ,sum(ws_ext_sales_price) as ws_item_rev 
 from web_sales
     JOIN item ON web_sales.ws_item_sk = item.i_item_sk
     JOIN date_dim ON web_sales.ws_sold_date_sk = date_dim.d_date_sk
     JOIN (select d1.d_date
                 from date_dim d1 JOIN date_dim d2 ON d1.d_week_seq = d2.d_week_seq
                 where d2.d_date = '1998-08-04') sub ON date_dim.d_date = sub.d_date
 group by i_item_id ) ws_items
ON ss_items.item_id=ws_items.item_id 
 where
       ss_item_rev between 0.9 * cs_item_rev and 1.1 * cs_item_rev
   and ss_item_rev between 0.9 * ws_item_rev and 1.1 * ws_item_rev
   and cs_item_rev between 0.9 * ss_item_rev and 1.1 * ss_item_rev
   and cs_item_rev between 0.9 * ws_item_rev and 1.1 * ws_item_rev
   and ws_item_rev between 0.9 * ss_item_rev and 1.1 * ss_item_rev
   and ws_item_rev between 0.9 * cs_item_rev and 1.1 * cs_item_rev
 order by item_id ,ss_item_rev
 limit 100
PREHOOK: type: QUERY
POSTHOOK: query: explain select  ss_items.item_id
       ,ss_item_rev
       ,ss_item_rev/(ss_item_rev+cs_item_rev+ws_item_rev)/3 * 100 ss_dev
       ,cs_item_rev
       ,cs_item_rev/(ss_item_rev+cs_item_rev+ws_item_rev)/3 * 100 cs_dev
       ,ws_item_rev
       ,ws_item_rev/(ss_item_rev+cs_item_rev+ws_item_rev)/3 * 100 ws_dev
       ,(ss_item_rev+cs_item_rev+ws_item_rev)/3 average
FROM
( select i_item_id item_id ,sum(ss_ext_sales_price) as ss_item_rev 
 from store_sales
     JOIN item ON store_sales.ss_item_sk = item.i_item_sk
     JOIN date_dim ON store_sales.ss_sold_date_sk = date_dim.d_date_sk
     JOIN (select d1.d_date
                 from date_dim d1 JOIN date_dim d2 ON d1.d_week_seq = d2.d_week_seq
                 where d2.d_date = '1998-08-04') sub ON date_dim.d_date = sub.d_date
 group by i_item_id ) ss_items
JOIN
( select i_item_id item_id ,sum(cs_ext_sales_price) as cs_item_rev 
 from catalog_sales
     JOIN item ON catalog_sales.cs_item_sk = item.i_item_sk
     JOIN date_dim ON catalog_sales.cs_sold_date_sk = date_dim.d_date_sk
     JOIN (select d1.d_date
                 from date_dim d1 JOIN date_dim d2 ON d1.d_week_seq = d2.d_week_seq
                 where d2.d_date = '1998-08-04') sub ON date_dim.d_date = sub.d_date
 group by i_item_id ) cs_items
ON ss_items.item_id=cs_items.item_id
JOIN
( select i_item_id item_id ,sum(ws_ext_sales_price) as ws_item_rev 
 from web_sales
     JOIN item ON web_sales.ws_item_sk = item.i_item_sk
     JOIN date_dim ON web_sales.ws_sold_date_sk = date_dim.d_date_sk
     JOIN (select d1.d_date
                 from date_dim d1 JOIN date_dim d2 ON d1.d_week_seq = d2.d_week_seq
                 where d2.d_date = '1998-08-04') sub ON date_dim.d_date = sub.d_date
 group by i_item_id ) ws_items
ON ss_items.item_id=ws_items.item_id 
 where
       ss_item_rev between 0.9 * cs_item_rev and 1.1 * cs_item_rev
   and ss_item_rev between 0.9 * ws_item_rev and 1.1 * ws_item_rev
   and cs_item_rev between 0.9 * ss_item_rev and 1.1 * ss_item_rev
   and cs_item_rev between 0.9 * ws_item_rev and 1.1 * ws_item_rev
   and ws_item_rev between 0.9 * ss_item_rev and 1.1 * ss_item_rev
   and ws_item_rev between 0.9 * cs_item_rev and 1.1 * cs_item_rev
 order by item_id ,ss_item_rev
 limit 100
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 10 <- Map 22 (SIMPLE_EDGE), Reducer 9 (SIMPLE_EDGE)
Reducer 11 <- Reducer 10 (SIMPLE_EDGE)
Reducer 12 <- Map 1 (SIMPLE_EDGE), Reducer 19 (SIMPLE_EDGE)
Reducer 13 <- Map 24 (SIMPLE_EDGE), Reducer 12 (SIMPLE_EDGE)
Reducer 14 <- Map 22 (SIMPLE_EDGE), Reducer 13 (SIMPLE_EDGE)
Reducer 15 <- Reducer 14 (SIMPLE_EDGE)
Reducer 17 <- Map 16 (SIMPLE_EDGE), Map 20 (SIMPLE_EDGE)
Reducer 18 <- Map 16 (SIMPLE_EDGE), Map 20 (SIMPLE_EDGE)
Reducer 19 <- Map 16 (SIMPLE_EDGE), Map 20 (SIMPLE_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Reducer 17 (SIMPLE_EDGE)
Reducer 3 <- Map 21 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Map 22 (SIMPLE_EDGE), Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Reducer 4 (SIMPLE_EDGE)
Reducer 6 <- Reducer 11 (SIMPLE_EDGE), Reducer 15 (SIMPLE_EDGE), Reducer 5 (SIMPLE_EDGE)
Reducer 7 <- Reducer 6 (SIMPLE_EDGE)
Reducer 8 <- Map 1 (SIMPLE_EDGE), Reducer 18 (SIMPLE_EDGE)
Reducer 9 <- Map 23 (SIMPLE_EDGE), Reducer 8 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 7
      File Output Operator [FS_113]
        Limit [LIM_112] (rows=100 width=88)
          Number of rows:100
          Select Operator [SEL_111] (rows=1442 width=88)
            Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
          <-Reducer 6 [SIMPLE_EDGE]
            SHUFFLE [RS_110]
              Select Operator [SEL_109] (rows=1442 width=88)
                Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
                Filter Operator [FIL_103] (rows=1442 width=88)
                  predicate:(_col5 BETWEEN (0.9 * _col1) AND (1.1 * _col1) and _col5 BETWEEN (0.9 * _col3) AND (1.1 * _col3) and _col1 BETWEEN (0.9 * _col5) AND (1.1 * _col5) and _col3 BETWEEN (0.9 * _col5) AND (1.1 * _col5) and _col1 BETWEEN (0.9 * _col3) AND (1.1 * _col3) and _col3 BETWEEN (0.9 * _col1) AND (1.1 * _col1))
                  Merge Join Operator [MERGEJOIN_213] (rows=766650239 width=88)
                    Conds:RS_99._col0=RS_100._col0(Inner),RS_99._col0=RS_101._col0(Inner),Output:["_col0","_col1","_col3","_col5"]
                  <-Reducer 11 [SIMPLE_EDGE]
                    SHUFFLE [RS_100]
                      PartitionCols:_col0
                      Group By Operator [GBY_64] (rows=348477374 width=88)
                        Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0
                      <-Reducer 10 [SIMPLE_EDGE]
                        SHUFFLE [RS_63]
                          PartitionCols:_col0
                          Group By Operator [GBY_62] (rows=696954748 width=88)
                            Output:["_col0","_col1"],aggregations:["sum(_col5)"],keys:_col7
                            Merge Join Operator [MERGEJOIN_208] (rows=696954748 width=88)
                              Conds:RS_58._col4=RS_59._col0(Inner),Output:["_col5","_col7"]
                            <-Map 22 [SIMPLE_EDGE]
                              SHUFFLE [RS_59]
                                PartitionCols:_col0
                                Select Operator [SEL_51] (rows=462000 width=1436)
                                  Output:["_col0","_col1"]
                                  Filter Operator [FIL_195] (rows=462000 width=1436)
                                    predicate:(i_item_sk is not null and i_item_id is not null)
                                    TableScan [TS_16] (rows=462000 width=1436)
                                      default@item,item,Tbl:COMPLETE,Col:NONE,Output:["i_item_sk","i_item_id"]
                            <-Reducer 9 [SIMPLE_EDGE]
                              SHUFFLE [RS_58]
                                PartitionCols:_col4
                                Merge Join Operator [MERGEJOIN_207] (rows=633595212 width=88)
                                  Conds:RS_55._col0=RS_56._col0(Inner),Output:["_col4","_col5"]
                                <-Map 23 [SIMPLE_EDGE]
                                  SHUFFLE [RS_56]
                                    PartitionCols:_col0
                                    Select Operator [SEL_48] (rows=575995635 width=88)
                                      Output:["_col0","_col1","_col2"]
                                      Filter Operator [FIL_194] (rows=575995635 width=88)
                                        predicate:(ss_item_sk is not null and ss_sold_date_sk is not null)
                                        TableScan [TS_46] (rows=575995635 width=88)
                                          default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_item_sk","ss_ext_sales_price"]
                                <-Reducer 8 [SIMPLE_EDGE]
                                  SHUFFLE [RS_55]
                                    PartitionCols:_col0
                                    Merge Join Operator [MERGEJOIN_206] (rows=88388 width=1119)
                                      Conds:RS_52._col1=RS_53._col0(Inner),Output:["_col0"]
                                    <-Map 1 [SIMPLE_EDGE]
                                      SHUFFLE [RS_52]
                                        PartitionCols:_col1
                                        Select Operator [SEL_35] (rows=73049 width=1119)
                                          Output:["_col0","_col1"]
                                          Filter Operator [FIL_191] (rows=73049 width=1119)
                                            predicate:(d_date_sk is not null and d_date is not null)
                                            TableScan [TS_0] (rows=73049 width=1119)
                                              default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_date"]
                                    <-Reducer 18 [SIMPLE_EDGE]
                                      SHUFFLE [RS_53]
                                        PartitionCols:_col0
                                        Merge Join Operator [MERGEJOIN_205] (rows=80353 width=1119)
                                          Conds:RS_42._col1=RS_43._col1(Inner),Output:["_col0"]
                                        <-Map 16 [SIMPLE_EDGE]
                                          SHUFFLE [RS_42]
                                            PartitionCols:_col1
                                            Select Operator [SEL_38] (rows=73049 width=1119)
                                              Output:["_col0","_col1"]
                                              Filter Operator [FIL_192] (rows=73049 width=1119)
                                                predicate:(d_week_seq is not null and d_date is not null)
                                                TableScan [TS_3] (rows=73049 width=1119)
                                                  default@date_dim,d1,Tbl:COMPLETE,Col:NONE,Output:["d_date","d_week_seq"]
                                        <-Map 20 [SIMPLE_EDGE]
                                          SHUFFLE [RS_43]
                                            PartitionCols:_col1
                                            Select Operator [SEL_41] (rows=36524 width=1119)
                                              Output:["_col1"]
                                              Filter Operator [FIL_193] (rows=36524 width=1119)
                                                predicate:((d_date = '1998-08-04') and d_week_seq is not null)
                                                TableScan [TS_6] (rows=73049 width=1119)
                                                  default@date_dim,d2,Tbl:COMPLETE,Col:NONE,Output:["d_date","d_week_seq"]
                  <-Reducer 15 [SIMPLE_EDGE]
                    SHUFFLE [RS_101]
                      PartitionCols:_col0
                      Group By Operator [GBY_97] (rows=87121617 width=135)
                        Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0
                      <-Reducer 14 [SIMPLE_EDGE]
                        SHUFFLE [RS_96]
                          PartitionCols:_col0
                          Group By Operator [GBY_95] (rows=174243235 width=135)
                            Output:["_col0","_col1"],aggregations:["sum(_col5)"],keys:_col7
                            Merge Join Operator [MERGEJOIN_212] (rows=174243235 width=135)
                              Conds:RS_91._col4=RS_92._col0(Inner),Output:["_col5","_col7"]
                            <-Map 22 [SIMPLE_EDGE]
                              SHUFFLE [RS_92]
                                PartitionCols:_col0
                                Select Operator [SEL_84] (rows=462000 width=1436)
                                  Output:["_col0","_col1"]
                                  Filter Operator [FIL_200] (rows=462000 width=1436)
                                    predicate:(i_item_sk is not null and i_item_id is not null)
                                     Please refer to the previous TableScan [TS_16]
                            <-Reducer 13 [SIMPLE_EDGE]
                              SHUFFLE [RS_91]
                                PartitionCols:_col4
                                Merge Join Operator [MERGEJOIN_211] (rows=158402938 width=135)
                                  Conds:RS_88._col0=RS_89._col0(Inner),Output:["_col4","_col5"]
                                <-Map 24 [SIMPLE_EDGE]
                                  SHUFFLE [RS_89]
                                    PartitionCols:_col0
                                    Select Operator [SEL_81] (rows=144002668 width=135)
                                      Output:["_col0","_col1","_col2"]
                                      Filter Operator [FIL_199] (rows=144002668 width=135)
                                        predicate:(ws_item_sk is not null and ws_sold_date_sk is not null)
                                        TableScan [TS_79] (rows=144002668 width=135)
                                          default@web_sales,web_sales,Tbl:COMPLETE,Col:NONE,Output:["ws_sold_date_sk","ws_item_sk","ws_ext_sales_price"]
                                <-Reducer 12 [SIMPLE_EDGE]
                                  SHUFFLE [RS_88]
                                    PartitionCols:_col0
                                    Merge Join Operator [MERGEJOIN_210] (rows=88388 width=1119)
                                      Conds:RS_85._col1=RS_86._col0(Inner),Output:["_col0"]
                                    <-Map 1 [SIMPLE_EDGE]
                                      SHUFFLE [RS_85]
                                        PartitionCols:_col1
                                        Select Operator [SEL_68] (rows=73049 width=1119)
                                          Output:["_col0","_col1"]
                                          Filter Operator [FIL_196] (rows=73049 width=1119)
                                            predicate:(d_date_sk is not null and d_date is not null)
                                             Please refer to the previous TableScan [TS_0]
                                    <-Reducer 19 [SIMPLE_EDGE]
                                      SHUFFLE [RS_86]
                                        PartitionCols:_col0
                                        Merge Join Operator [MERGEJOIN_209] (rows=80353 width=1119)
                                          Conds:RS_75._col1=RS_76._col1(Inner),Output:["_col0"]
                                        <-Map 16 [SIMPLE_EDGE]
                                          SHUFFLE [RS_75]
                                            PartitionCols:_col1
                                            Select Operator [SEL_71] (rows=73049 width=1119)
                                              Output:["_col0","_col1"]
                                              Filter Operator [FIL_197] (rows=73049 width=1119)
                                                predicate:(d_week_seq is not null and d_date is not null)
                                                 Please refer to the previous TableScan [TS_3]
                                        <-Map 20 [SIMPLE_EDGE]
                                          SHUFFLE [RS_76]
                                            PartitionCols:_col1
                                            Select Operator [SEL_74] (rows=36524 width=1119)
                                              Output:["_col1"]
                                              Filter Operator [FIL_198] (rows=36524 width=1119)
                                                predicate:((d_date = '1998-08-04') and d_week_seq is not null)
                                                 Please refer to the previous TableScan [TS_6]
                  <-Reducer 5 [SIMPLE_EDGE]
                    SHUFFLE [RS_99]
                      PartitionCols:_col0
                      Group By Operator [GBY_31] (rows=174233858 width=135)
                        Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0
                      <-Reducer 4 [SIMPLE_EDGE]
                        SHUFFLE [RS_30]
                          PartitionCols:_col0
                          Group By Operator [GBY_29] (rows=348467716 width=135)
                            Output:["_col0","_col1"],aggregations:["sum(_col5)"],keys:_col7
                            Merge Join Operator [MERGEJOIN_204] (rows=348467716 width=135)
                              Conds:RS_25._col4=RS_26._col0(Inner),Output:["_col5","_col7"]
                            <-Map 22 [SIMPLE_EDGE]
                              SHUFFLE [RS_26]
                                PartitionCols:_col0
                                Select Operator [SEL_18] (rows=462000 width=1436)
                                  Output:["_col0","_col1"]
                                  Filter Operator [FIL_190] (rows=462000 width=1436)
                                    predicate:(i_item_sk is not null and i_item_id is not null)
                                     Please refer to the previous TableScan [TS_16]
                            <-Reducer 3 [SIMPLE_EDGE]
                              SHUFFLE [RS_25]
                                PartitionCols:_col4
                                Merge Join Operator [MERGEJOIN_203] (rows=316788826 width=135)
                                  Conds:RS_22._col0=RS_23._col0(Inner),Output:["_col4","_col5"]
                                <-Map 21 [SIMPLE_EDGE]
                                  SHUFFLE [RS_23]
                                    PartitionCols:_col0
                                    Select Operator [SEL_15] (rows=287989836 width=135)
                                      Output:["_col0","_col1","_col2"]
                                      Filter Operator [FIL_189] (rows=287989836 width=135)
                                        predicate:(cs_item_sk is not null and cs_sold_date_sk is not null)
                                        TableScan [TS_13] (rows=287989836 width=135)
                                          default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:NONE,Output:["cs_sold_date_sk","cs_item_sk","cs_ext_sales_price"]
                                <-Reducer 2 [SIMPLE_EDGE]
                                  SHUFFLE [RS_22]
                                    PartitionCols:_col0
                                    Merge Join Operator [MERGEJOIN_202] (rows=88388 width=1119)
                                      Conds:RS_19._col1=RS_20._col0(Inner),Output:["_col0"]
                                    <-Map 1 [SIMPLE_EDGE]
                                      SHUFFLE [RS_19]
                                        PartitionCols:_col1
                                        Select Operator [SEL_2] (rows=73049 width=1119)
                                          Output:["_col0","_col1"]
                                          Filter Operator [FIL_186] (rows=73049 width=1119)
                                            predicate:(d_date_sk is not null and d_date is not null)
                                             Please refer to the previous TableScan [TS_0]
                                    <-Reducer 17 [SIMPLE_EDGE]
                                      SHUFFLE [RS_20]
                                        PartitionCols:_col0
                                        Merge Join Operator [MERGEJOIN_201] (rows=80353 width=1119)
                                          Conds:RS_9._col1=RS_10._col1(Inner),Output:["_col0"]
                                        <-Map 16 [SIMPLE_EDGE]
                                          SHUFFLE [RS_9]
                                            PartitionCols:_col1
                                            Select Operator [SEL_5] (rows=73049 width=1119)
                                              Output:["_col0","_col1"]
                                              Filter Operator [FIL_187] (rows=73049 width=1119)
                                                predicate:(d_week_seq is not null and d_date is not null)
                                                 Please refer to the previous TableScan [TS_3]
                                        <-Map 20 [SIMPLE_EDGE]
                                          SHUFFLE [RS_10]
                                            PartitionCols:_col1
                                            Select Operator [SEL_8] (rows=36524 width=1119)
                                              Output:["_col1"]
                                              Filter Operator [FIL_188] (rows=36524 width=1119)
                                                predicate:((d_date = '1998-08-04') and d_week_seq is not null)
                                                 Please refer to the previous TableScan [TS_6]

