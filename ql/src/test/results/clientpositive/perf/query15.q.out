PREHOOK: query: explain
select  ca_zip
       ,sum(cs_sales_price)
 from catalog_sales
     ,customer
     ,customer_address
     ,date_dim
 where cs_bill_customer_sk = c_customer_sk
 	and c_current_addr_sk = ca_address_sk 
 	and ( substr(ca_zip,1,5) in ('85669', '86197','88274','83405','86475',
                                   '85392', '85460', '80348', '81792')
 	      or ca_state in ('CA','WA','GA')
 	      or cs_sales_price > 500)
 	and cs_sold_date_sk = d_date_sk
 	and d_qoy = 2 and d_year = 2000
 group by ca_zip
 order by ca_zip
 limit 100
PREHOOK: type: QUERY
POSTHOOK: query: explain
select  ca_zip
       ,sum(cs_sales_price)
 from catalog_sales
     ,customer
     ,customer_address
     ,date_dim
 where cs_bill_customer_sk = c_customer_sk
 	and c_current_addr_sk = ca_address_sk 
 	and ( substr(ca_zip,1,5) in ('85669', '86197','88274','83405','86475',
                                   '85392', '85460', '80348', '81792')
 	      or ca_state in ('CA','WA','GA')
 	      or cs_sales_price > 500)
 	and cs_sold_date_sk = d_date_sk
 	and d_qoy = 2 and d_year = 2000
 group by ca_zip
 order by ca_zip
 limit 100
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 7 (SIMPLE_EDGE)
Reducer 3 <- Map 8 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Map 9 (SIMPLE_EDGE), Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Reducer 4 (SIMPLE_EDGE)
Reducer 6 <- Reducer 5 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 6
      File Output Operator [FS_30]
        Limit [LIM_29] (rows=100 width=135)
          Number of rows:100
          Select Operator [SEL_28] (rows=191657247 width=135)
            Output:["_col0","_col1"]
          <-Reducer 5 [SIMPLE_EDGE]
            SHUFFLE [RS_27]
              Group By Operator [GBY_25] (rows=191657247 width=135)
                Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0
              <-Reducer 4 [SIMPLE_EDGE]
                SHUFFLE [RS_24]
                  PartitionCols:_col0
                  Group By Operator [GBY_23] (rows=383314495 width=135)
                    Output:["_col0","_col1"],aggregations:["sum(_col2)"],keys:_col10
                    Select Operator [SEL_22] (rows=383314495 width=135)
                      Output:["_col2","_col10"]
                      Filter Operator [FIL_21] (rows=383314495 width=135)
                        predicate:((substr(_col10, 1, 5)) IN ('85669', '86197', '88274', '83405', '86475', '85392', '85460', '80348', '81792') or (_col9) IN ('CA', 'WA', 'GA') or (_col2 > 500))
                        Merge Join Operator [MERGEJOIN_46] (rows=383314495 width=135)
                          Conds:RS_18._col7=RS_19._col0(Inner),Output:["_col2","_col9","_col10"]
                        <-Map 9 [SIMPLE_EDGE]
                          SHUFFLE [RS_19]
                            PartitionCols:_col0
                            Select Operator [SEL_11] (rows=40000000 width=1014)
                              Output:["_col0","_col1","_col2"]
                              Filter Operator [FIL_43] (rows=40000000 width=1014)
                                predicate:ca_address_sk is not null
                                TableScan [TS_9] (rows=40000000 width=1014)
                                  default@customer_address,customer_address,Tbl:COMPLETE,Col:NONE,Output:["ca_address_sk","ca_state","ca_zip"]
                        <-Reducer 3 [SIMPLE_EDGE]
                          SHUFFLE [RS_18]
                            PartitionCols:_col7
                            Merge Join Operator [MERGEJOIN_45] (rows=348467716 width=135)
                              Conds:RS_15._col1=RS_16._col0(Inner),Output:["_col2","_col7"]
                            <-Map 8 [SIMPLE_EDGE]
                              SHUFFLE [RS_16]
                                PartitionCols:_col0
                                Select Operator [SEL_8] (rows=80000000 width=860)
                                  Output:["_col0","_col1"]
                                  Filter Operator [FIL_42] (rows=80000000 width=860)
                                    predicate:(c_customer_sk is not null and c_current_addr_sk is not null)
                                    TableScan [TS_6] (rows=80000000 width=860)
                                      default@customer,customer,Tbl:COMPLETE,Col:NONE,Output:["c_customer_sk","c_current_addr_sk"]
                            <-Reducer 2 [SIMPLE_EDGE]
                              SHUFFLE [RS_15]
                                PartitionCols:_col1
                                Merge Join Operator [MERGEJOIN_44] (rows=316788826 width=135)
                                  Conds:RS_12._col0=RS_13._col0(Inner),Output:["_col1","_col2"]
                                <-Map 1 [SIMPLE_EDGE]
                                  SHUFFLE [RS_12]
                                    PartitionCols:_col0
                                    Select Operator [SEL_2] (rows=287989836 width=135)
                                      Output:["_col0","_col1","_col2"]
                                      Filter Operator [FIL_40] (rows=287989836 width=135)
                                        predicate:(cs_bill_customer_sk is not null and cs_sold_date_sk is not null)
                                        TableScan [TS_0] (rows=287989836 width=135)
                                          default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:NONE,Output:["cs_sold_date_sk","cs_bill_customer_sk","cs_sales_price"]
                                <-Map 7 [SIMPLE_EDGE]
                                  SHUFFLE [RS_13]
                                    PartitionCols:_col0
                                    Select Operator [SEL_5] (rows=18262 width=1119)
                                      Output:["_col0"]
                                      Filter Operator [FIL_41] (rows=18262 width=1119)
                                        predicate:((d_qoy = 2) and (d_year = 2000) and d_date_sk is not null)
                                        TableScan [TS_3] (rows=73049 width=1119)
                                          default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year","d_qoy"]

