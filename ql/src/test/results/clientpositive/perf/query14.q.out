Warning: Shuffle Join MERGEJOIN[908][tables = [$hdt$_1, $hdt$_2, $hdt$_0]] in Stage 'Reducer 16' is a cross product
Warning: Shuffle Join MERGEJOIN[907][tables = [$hdt$_1, $hdt$_2, $hdt$_0]] in Stage 'Reducer 12' is a cross product
Warning: Shuffle Join MERGEJOIN[906][tables = [$hdt$_1, $hdt$_2, $hdt$_0]] in Stage 'Reducer 5' is a cross product
PREHOOK: query: explain
with  cross_items as
 (select i_item_sk ss_item_sk
 from item,
 (select iss.i_brand_id brand_id
     ,iss.i_class_id class_id
     ,iss.i_category_id category_id
 from store_sales
     ,item iss
     ,date_dim d1
 where ss_item_sk = iss.i_item_sk
   and ss_sold_date_sk = d1.d_date_sk
   and d1.d_year between 1999 AND 1999 + 2
 intersect 
 select ics.i_brand_id
     ,ics.i_class_id
     ,ics.i_category_id
 from catalog_sales
     ,item ics
     ,date_dim d2
 where cs_item_sk = ics.i_item_sk
   and cs_sold_date_sk = d2.d_date_sk
   and d2.d_year between 1999 AND 1999 + 2
 intersect
 select iws.i_brand_id
     ,iws.i_class_id
     ,iws.i_category_id
 from web_sales
     ,item iws
     ,date_dim d3
 where ws_item_sk = iws.i_item_sk
   and ws_sold_date_sk = d3.d_date_sk
   and d3.d_year between 1999 AND 1999 + 2) x
 where i_brand_id = brand_id
      and i_class_id = class_id
      and i_category_id = category_id
),
 avg_sales as
 (select avg(quantity*list_price) average_sales
  from (select ss_quantity quantity
             ,ss_list_price list_price
       from store_sales
           ,date_dim
       where ss_sold_date_sk = d_date_sk
         and d_year between 1999 and 2001 
       union all 
       select cs_quantity quantity 
             ,cs_list_price list_price
       from catalog_sales
           ,date_dim
       where cs_sold_date_sk = d_date_sk
         and d_year between 1998 and 1998 + 2 
       union all
       select ws_quantity quantity
             ,ws_list_price list_price
       from web_sales
           ,date_dim
       where ws_sold_date_sk = d_date_sk
         and d_year between 1998 and 1998 + 2) x)
  select  channel, i_brand_id,i_class_id,i_category_id,sum(sales), sum(number_sales)
 from(
       select 'store' channel, i_brand_id,i_class_id
             ,i_category_id,sum(ss_quantity*ss_list_price) sales
             , count(*) number_sales
       from store_sales
           ,item
           ,date_dim
       where ss_item_sk in (select ss_item_sk from cross_items)
         and ss_item_sk = i_item_sk
         and ss_sold_date_sk = d_date_sk
         and d_year = 1998+2 
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(ss_quantity*ss_list_price) > (select average_sales from avg_sales)
       union all
       select 'catalog' channel, i_brand_id,i_class_id,i_category_id, sum(cs_quantity*cs_list_price) sales, count(*) number_sales
       from catalog_sales
           ,item
           ,date_dim
       where cs_item_sk in (select ss_item_sk from cross_items)
         and cs_item_sk = i_item_sk
         and cs_sold_date_sk = d_date_sk
         and d_year = 1998+2 
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(cs_quantity*cs_list_price) > (select average_sales from avg_sales)
       union all
       select 'web' channel, i_brand_id,i_class_id,i_category_id, sum(ws_quantity*ws_list_price) sales , count(*) number_sales
       from web_sales
           ,item
           ,date_dim
       where ws_item_sk in (select ss_item_sk from cross_items)
         and ws_item_sk = i_item_sk
         and ws_sold_date_sk = d_date_sk
         and d_year = 1998+2
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(ws_quantity*ws_list_price) > (select average_sales from avg_sales)
 ) y
 group by rollup (channel, i_brand_id,i_class_id,i_category_id)
 order by channel,i_brand_id,i_class_id,i_category_id
 limit 100
PREHOOK: type: QUERY
POSTHOOK: query: explain
with  cross_items as
 (select i_item_sk ss_item_sk
 from item,
 (select iss.i_brand_id brand_id
     ,iss.i_class_id class_id
     ,iss.i_category_id category_id
 from store_sales
     ,item iss
     ,date_dim d1
 where ss_item_sk = iss.i_item_sk
   and ss_sold_date_sk = d1.d_date_sk
   and d1.d_year between 1999 AND 1999 + 2
 intersect 
 select ics.i_brand_id
     ,ics.i_class_id
     ,ics.i_category_id
 from catalog_sales
     ,item ics
     ,date_dim d2
 where cs_item_sk = ics.i_item_sk
   and cs_sold_date_sk = d2.d_date_sk
   and d2.d_year between 1999 AND 1999 + 2
 intersect
 select iws.i_brand_id
     ,iws.i_class_id
     ,iws.i_category_id
 from web_sales
     ,item iws
     ,date_dim d3
 where ws_item_sk = iws.i_item_sk
   and ws_sold_date_sk = d3.d_date_sk
   and d3.d_year between 1999 AND 1999 + 2) x
 where i_brand_id = brand_id
      and i_class_id = class_id
      and i_category_id = category_id
),
 avg_sales as
 (select avg(quantity*list_price) average_sales
  from (select ss_quantity quantity
             ,ss_list_price list_price
       from store_sales
           ,date_dim
       where ss_sold_date_sk = d_date_sk
         and d_year between 1999 and 2001 
       union all 
       select cs_quantity quantity 
             ,cs_list_price list_price
       from catalog_sales
           ,date_dim
       where cs_sold_date_sk = d_date_sk
         and d_year between 1998 and 1998 + 2 
       union all
       select ws_quantity quantity
             ,ws_list_price list_price
       from web_sales
           ,date_dim
       where ws_sold_date_sk = d_date_sk
         and d_year between 1998 and 1998 + 2) x)
  select  channel, i_brand_id,i_class_id,i_category_id,sum(sales), sum(number_sales)
 from(
       select 'store' channel, i_brand_id,i_class_id
             ,i_category_id,sum(ss_quantity*ss_list_price) sales
             , count(*) number_sales
       from store_sales
           ,item
           ,date_dim
       where ss_item_sk in (select ss_item_sk from cross_items)
         and ss_item_sk = i_item_sk
         and ss_sold_date_sk = d_date_sk
         and d_year = 1998+2 
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(ss_quantity*ss_list_price) > (select average_sales from avg_sales)
       union all
       select 'catalog' channel, i_brand_id,i_class_id,i_category_id, sum(cs_quantity*cs_list_price) sales, count(*) number_sales
       from catalog_sales
           ,item
           ,date_dim
       where cs_item_sk in (select ss_item_sk from cross_items)
         and cs_item_sk = i_item_sk
         and cs_sold_date_sk = d_date_sk
         and d_year = 1998+2 
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(cs_quantity*cs_list_price) > (select average_sales from avg_sales)
       union all
       select 'web' channel, i_brand_id,i_class_id,i_category_id, sum(ws_quantity*ws_list_price) sales , count(*) number_sales
       from web_sales
           ,item
           ,date_dim
       where ws_item_sk in (select ss_item_sk from cross_items)
         and ws_item_sk = i_item_sk
         and ws_sold_date_sk = d_date_sk
         and d_year = 1998+2
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(ws_quantity*ws_list_price) > (select average_sales from avg_sales)
 ) y
 group by rollup (channel, i_brand_id,i_class_id,i_category_id)
 order by channel,i_brand_id,i_class_id,i_category_id
 limit 100
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 11 <- Union 10 (CUSTOM_SIMPLE_EDGE)
Reducer 12 <- Reducer 11 (CUSTOM_SIMPLE_EDGE), Reducer 38 (CUSTOM_SIMPLE_EDGE), Reducer 47 (CUSTOM_SIMPLE_EDGE), Union 6 (CONTAINS)
Reducer 13 <- Map 1 (SIMPLE_EDGE), Map 17 (SIMPLE_EDGE), Union 14 (CONTAINS)
Reducer 15 <- Union 14 (CUSTOM_SIMPLE_EDGE)
Reducer 16 <- Reducer 15 (CUSTOM_SIMPLE_EDGE), Reducer 56 (CUSTOM_SIMPLE_EDGE), Reducer 65 (CUSTOM_SIMPLE_EDGE), Union 6 (CONTAINS)
Reducer 18 <- Map 17 (SIMPLE_EDGE), Map 88 (SIMPLE_EDGE), Union 19 (CONTAINS)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 17 (SIMPLE_EDGE), Union 3 (CONTAINS)
Reducer 20 <- Union 19 (CUSTOM_SIMPLE_EDGE)
Reducer 21 <- Map 17 (SIMPLE_EDGE), Map 97 (SIMPLE_EDGE)
Reducer 22 <- Map 96 (SIMPLE_EDGE), Reducer 21 (SIMPLE_EDGE)
Reducer 23 <- Reducer 22 (SIMPLE_EDGE), Union 24 (CONTAINS)
Reducer 25 <- Union 24 (SIMPLE_EDGE)
Reducer 26 <- Map 96 (SIMPLE_EDGE), Reducer 25 (SIMPLE_EDGE)
Reducer 27 <- Reducer 26 (SIMPLE_EDGE)
Reducer 28 <- Map 96 (SIMPLE_EDGE), Reducer 27 (SIMPLE_EDGE), Reducer 92 (SIMPLE_EDGE)
Reducer 29 <- Reducer 28 (SIMPLE_EDGE)
Reducer 30 <- Map 17 (SIMPLE_EDGE), Map 98 (SIMPLE_EDGE)
Reducer 31 <- Map 96 (SIMPLE_EDGE), Reducer 30 (SIMPLE_EDGE)
Reducer 32 <- Reducer 31 (SIMPLE_EDGE), Union 24 (CONTAINS)
Reducer 33 <- Map 17 (SIMPLE_EDGE), Map 99 (SIMPLE_EDGE)
Reducer 34 <- Map 96 (SIMPLE_EDGE), Reducer 33 (SIMPLE_EDGE)
Reducer 35 <- Reducer 34 (SIMPLE_EDGE), Union 24 (CONTAINS)
Reducer 36 <- Map 17 (SIMPLE_EDGE), Map 88 (SIMPLE_EDGE), Union 37 (CONTAINS)
Reducer 38 <- Union 37 (CUSTOM_SIMPLE_EDGE)
Reducer 39 <- Map 17 (SIMPLE_EDGE), Map 97 (SIMPLE_EDGE)
Reducer 4 <- Union 3 (CUSTOM_SIMPLE_EDGE)
Reducer 40 <- Map 96 (SIMPLE_EDGE), Reducer 39 (SIMPLE_EDGE)
Reducer 41 <- Reducer 40 (SIMPLE_EDGE), Union 42 (CONTAINS)
Reducer 43 <- Union 42 (SIMPLE_EDGE)
Reducer 44 <- Map 96 (SIMPLE_EDGE), Reducer 43 (SIMPLE_EDGE)
Reducer 45 <- Reducer 44 (SIMPLE_EDGE)
Reducer 46 <- Map 96 (SIMPLE_EDGE), Reducer 45 (SIMPLE_EDGE), Reducer 94 (SIMPLE_EDGE)
Reducer 47 <- Reducer 46 (SIMPLE_EDGE)
Reducer 48 <- Map 17 (SIMPLE_EDGE), Map 98 (SIMPLE_EDGE)
Reducer 49 <- Map 96 (SIMPLE_EDGE), Reducer 48 (SIMPLE_EDGE)
Reducer 5 <- Reducer 20 (CUSTOM_SIMPLE_EDGE), Reducer 29 (CUSTOM_SIMPLE_EDGE), Reducer 4 (CUSTOM_SIMPLE_EDGE), Union 6 (CONTAINS)
Reducer 50 <- Reducer 49 (SIMPLE_EDGE), Union 42 (CONTAINS)
Reducer 51 <- Map 17 (SIMPLE_EDGE), Map 99 (SIMPLE_EDGE)
Reducer 52 <- Map 96 (SIMPLE_EDGE), Reducer 51 (SIMPLE_EDGE)
Reducer 53 <- Reducer 52 (SIMPLE_EDGE), Union 42 (CONTAINS)
Reducer 54 <- Map 17 (SIMPLE_EDGE), Map 88 (SIMPLE_EDGE), Union 55 (CONTAINS)
Reducer 56 <- Union 55 (CUSTOM_SIMPLE_EDGE)
Reducer 57 <- Map 17 (SIMPLE_EDGE), Map 97 (SIMPLE_EDGE)
Reducer 58 <- Map 96 (SIMPLE_EDGE), Reducer 57 (SIMPLE_EDGE)
Reducer 59 <- Reducer 58 (SIMPLE_EDGE), Union 60 (CONTAINS)
Reducer 61 <- Union 60 (SIMPLE_EDGE)
Reducer 62 <- Map 96 (SIMPLE_EDGE), Reducer 61 (SIMPLE_EDGE)
Reducer 63 <- Reducer 62 (SIMPLE_EDGE)
Reducer 64 <- Map 96 (SIMPLE_EDGE), Reducer 63 (SIMPLE_EDGE), Reducer 95 (SIMPLE_EDGE)
Reducer 65 <- Reducer 64 (SIMPLE_EDGE)
Reducer 66 <- Map 17 (SIMPLE_EDGE), Map 98 (SIMPLE_EDGE)
Reducer 67 <- Map 96 (SIMPLE_EDGE), Reducer 66 (SIMPLE_EDGE)
Reducer 68 <- Reducer 67 (SIMPLE_EDGE), Union 60 (CONTAINS)
Reducer 69 <- Map 17 (SIMPLE_EDGE), Map 99 (SIMPLE_EDGE)
Reducer 7 <- Union 6 (SIMPLE_EDGE)
Reducer 70 <- Map 96 (SIMPLE_EDGE), Reducer 69 (SIMPLE_EDGE)
Reducer 71 <- Reducer 70 (SIMPLE_EDGE), Union 60 (CONTAINS)
Reducer 73 <- Map 72 (SIMPLE_EDGE), Map 76 (SIMPLE_EDGE), Union 3 (CONTAINS)
Reducer 74 <- Map 72 (SIMPLE_EDGE), Map 76 (SIMPLE_EDGE), Union 10 (CONTAINS)
Reducer 75 <- Map 72 (SIMPLE_EDGE), Map 76 (SIMPLE_EDGE), Union 14 (CONTAINS)
Reducer 77 <- Map 76 (SIMPLE_EDGE), Map 89 (SIMPLE_EDGE), Union 19 (CONTAINS)
Reducer 78 <- Map 76 (SIMPLE_EDGE), Map 89 (SIMPLE_EDGE), Union 37 (CONTAINS)
Reducer 79 <- Map 76 (SIMPLE_EDGE), Map 89 (SIMPLE_EDGE), Union 55 (CONTAINS)
Reducer 8 <- Reducer 7 (SIMPLE_EDGE)
Reducer 81 <- Map 80 (SIMPLE_EDGE), Map 84 (SIMPLE_EDGE), Union 3 (CONTAINS)
Reducer 82 <- Map 80 (SIMPLE_EDGE), Map 84 (SIMPLE_EDGE), Union 10 (CONTAINS)
Reducer 83 <- Map 80 (SIMPLE_EDGE), Map 84 (SIMPLE_EDGE), Union 14 (CONTAINS)
Reducer 85 <- Map 84 (SIMPLE_EDGE), Map 90 (SIMPLE_EDGE), Union 19 (CONTAINS)
Reducer 86 <- Map 84 (SIMPLE_EDGE), Map 90 (SIMPLE_EDGE), Union 37 (CONTAINS)
Reducer 87 <- Map 84 (SIMPLE_EDGE), Map 90 (SIMPLE_EDGE), Union 55 (CONTAINS)
Reducer 9 <- Map 1 (SIMPLE_EDGE), Map 17 (SIMPLE_EDGE), Union 10 (CONTAINS)
Reducer 92 <- Map 91 (SIMPLE_EDGE), Map 93 (SIMPLE_EDGE)
Reducer 94 <- Map 100 (SIMPLE_EDGE), Map 93 (SIMPLE_EDGE)
Reducer 95 <- Map 101 (SIMPLE_EDGE), Map 93 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 8
      File Output Operator [FS_590]
        Limit [LIM_589] (rows=100 width=405)
          Number of rows:100
          Select Operator [SEL_588] (rows=1016388080 width=405)
            Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
          <-Reducer 7 [SIMPLE_EDGE]
            SHUFFLE [RS_587]
              Select Operator [SEL_586] (rows=1016388080 width=405)
                Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                Group By Operator [GBY_585] (rows=1016388080 width=405)
                  Output:["_col0","_col1","_col2","_col3","_col5","_col6"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3, KEY._col4
                <-Union 6 [SIMPLE_EDGE]
                  <-Reducer 12 [CONTAINS]
                    Reduce Output Operator [RS_584]
                      PartitionCols:_col0, _col1, _col2, _col3, _col4
                      Group By Operator [GBY_583] (rows=2032776160 width=405)
                        Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],aggregations:["sum(_col4)","sum(_col5)"],keys:_col0, _col1, _col2, _col3, 0
                        Select Operator [SEL_385] (rows=116155905 width=432)
                          Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                          Filter Operator [FIL_384] (rows=116155905 width=432)
                            predicate:(_col5 > _col1)
                            Merge Join Operator [MERGEJOIN_907] (rows=348467716 width=432)
                              Conds:(Inner),(Inner),Output:["_col1","_col2","_col3","_col4","_col5","_col6"]
                            <-Reducer 11 [CUSTOM_SIMPLE_EDGE]
                              PARTITION_ONLY_SHUFFLE [RS_380]
                                Select Operator [SEL_237] (rows=1 width=8)
                                  Filter Operator [FIL_236] (rows=1 width=8)
                                    predicate:(sq_count_check(_col0) <= 1)
                                    Group By Operator [GBY_234] (rows=1 width=8)
                                      Output:["_col0"],aggregations:["count()"]
                                      Select Operator [SEL_229] (rows=1 width=8)
                                        Group By Operator [GBY_228] (rows=1 width=8)
                                          Output:["_col0"],aggregations:["count(VALUE._col0)"]
                                        <-Union 10 [CUSTOM_SIMPLE_EDGE]
                                          <-Reducer 74 [CONTAINS]
                                            Reduce Output Operator [RS_227]
                                              Group By Operator [GBY_226] (rows=1 width=8)
                                                Output:["_col0"],aggregations:["count(_col0)"]
                                                Select Operator [SEL_225] (rows=1108786976 width=108)
                                                  Output:["_col0"]
                                                  Select Operator [SEL_212] (rows=316788826 width=135)
                                                    Output:["_col0"]
                                                    Merge Join Operator [MERGEJOIN_877] (rows=316788826 width=135)
                                                      Conds:RS_209._col0=RS_210._col0(Inner),Output:["_col1"]
                                                    <-Map 76 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_210]
                                                        PartitionCols:_col0
                                                        Select Operator [SEL_208] (rows=8116 width=1119)
                                                          Output:["_col0"]
                                                          Filter Operator [FIL_814] (rows=8116 width=1119)
                                                            predicate:(d_year BETWEEN 1998 AND 2000 and d_date_sk is not null)
                                                            TableScan [TS_13] (rows=73049 width=1119)
                                                              default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year"]
                                                    <-Map 72 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_209]
                                                        PartitionCols:_col0
                                                        Select Operator [SEL_205] (rows=287989836 width=135)
                                                          Output:["_col0","_col1"]
                                                          Filter Operator [FIL_813] (rows=287989836 width=135)
                                                            predicate:cs_sold_date_sk is not null
                                                            TableScan [TS_10] (rows=287989836 width=135)
                                                              default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:NONE,Output:["cs_sold_date_sk","cs_quantity"]
                                          <-Reducer 82 [CONTAINS]
                                            Reduce Output Operator [RS_227]
                                              Group By Operator [GBY_226] (rows=1 width=8)
                                                Output:["_col0"],aggregations:["count(_col0)"]
                                                Select Operator [SEL_225] (rows=1108786976 width=108)
                                                  Output:["_col0"]
                                                  Select Operator [SEL_224] (rows=158402938 width=135)
                                                    Output:["_col0"]
                                                    Merge Join Operator [MERGEJOIN_878] (rows=158402938 width=135)
                                                      Conds:RS_221._col0=RS_222._col0(Inner),Output:["_col1"]
                                                    <-Map 84 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_222]
                                                        PartitionCols:_col0
                                                        Select Operator [SEL_220] (rows=8116 width=1119)
                                                          Output:["_col0"]
                                                          Filter Operator [FIL_816] (rows=8116 width=1119)
                                                            predicate:(d_year BETWEEN 1998 AND 2000 and d_date_sk is not null)
                                                            TableScan [TS_25] (rows=73049 width=1119)
                                                              default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year"]
                                                    <-Map 80 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_221]
                                                        PartitionCols:_col0
                                                        Select Operator [SEL_217] (rows=144002668 width=135)
                                                          Output:["_col0","_col1"]
                                                          Filter Operator [FIL_815] (rows=144002668 width=135)
                                                            predicate:ws_sold_date_sk is not null
                                                            TableScan [TS_22] (rows=144002668 width=135)
                                                              default@web_sales,web_sales,Tbl:COMPLETE,Col:NONE,Output:["ws_sold_date_sk","ws_quantity"]
                                          <-Reducer 9 [CONTAINS]
                                            Reduce Output Operator [RS_227]
                                              Group By Operator [GBY_226] (rows=1 width=8)
                                                Output:["_col0"],aggregations:["count(_col0)"]
                                                Select Operator [SEL_225] (rows=1108786976 width=108)
                                                  Output:["_col0"]
                                                  Select Operator [SEL_202] (rows=633595212 width=88)
                                                    Output:["_col0"]
                                                    Merge Join Operator [MERGEJOIN_876] (rows=633595212 width=88)
                                                      Conds:RS_199._col0=RS_200._col0(Inner),Output:["_col1"]
                                                    <-Map 17 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_200]
                                                        PartitionCols:_col0
                                                        Select Operator [SEL_198] (rows=8116 width=1119)
                                                          Output:["_col0"]
                                                          Filter Operator [FIL_812] (rows=8116 width=1119)
                                                            predicate:(d_year BETWEEN 1999 AND 2001 and d_date_sk is not null)
                                                            TableScan [TS_3] (rows=73049 width=1119)
                                                              default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year"]
                                                    <-Map 1 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_199]
                                                        PartitionCols:_col0
                                                        Select Operator [SEL_195] (rows=575995635 width=88)
                                                          Output:["_col0","_col1"]
                                                          Filter Operator [FIL_811] (rows=575995635 width=88)
                                                            predicate:ss_sold_date_sk is not null
                                                            TableScan [TS_0] (rows=575995635 width=88)
                                                              default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_quantity"]
                            <-Reducer 38 [CUSTOM_SIMPLE_EDGE]
                              PARTITION_ONLY_SHUFFLE [RS_381]
                                Group By Operator [GBY_274] (rows=1 width=288)
                                  Output:["_col0"],aggregations:["avg(VALUE._col0)"]
                                <-Union 37 [CUSTOM_SIMPLE_EDGE]
                                  <-Reducer 36 [CONTAINS]
                                    Reduce Output Operator [RS_273]
                                      Group By Operator [GBY_272] (rows=1 width=288)
                                        Output:["_col0"],aggregations:["avg(_col0)"]
                                        Select Operator [SEL_270] (rows=1108786976 width=108)
                                          Output:["_col0"]
                                          Select Operator [SEL_247] (rows=633595212 width=88)
                                            Output:["_col0","_col1"]
                                            Merge Join Operator [MERGEJOIN_879] (rows=633595212 width=88)
                                              Conds:RS_244._col0=RS_245._col0(Inner),Output:["_col1","_col2"]
                                            <-Map 17 [SIMPLE_EDGE]
                                              SHUFFLE [RS_245]
                                                PartitionCols:_col0
                                                Select Operator [SEL_243] (rows=8116 width=1119)
                                                  Output:["_col0"]
                                                  Filter Operator [FIL_818] (rows=8116 width=1119)
                                                    predicate:(d_year BETWEEN 1999 AND 2001 and d_date_sk is not null)
                                                     Please refer to the previous TableScan [TS_3]
                                            <-Map 88 [SIMPLE_EDGE]
                                              SHUFFLE [RS_244]
                                                PartitionCols:_col0
                                                Select Operator [SEL_240] (rows=575995635 width=88)
                                                  Output:["_col0","_col1","_col2"]
                                                  Filter Operator [FIL_817] (rows=575995635 width=88)
                                                    predicate:ss_sold_date_sk is not null
                                                    TableScan [TS_45] (rows=575995635 width=88)
                                                      default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_quantity","ss_list_price"]
                                  <-Reducer 78 [CONTAINS]
                                    Reduce Output Operator [RS_273]
                                      Group By Operator [GBY_272] (rows=1 width=288)
                                        Output:["_col0"],aggregations:["avg(_col0)"]
                                        Select Operator [SEL_270] (rows=1108786976 width=108)
                                          Output:["_col0"]
                                          Select Operator [SEL_257] (rows=316788826 width=135)
                                            Output:["_col0","_col1"]
                                            Merge Join Operator [MERGEJOIN_880] (rows=316788826 width=135)
                                              Conds:RS_254._col0=RS_255._col0(Inner),Output:["_col1","_col2"]
                                            <-Map 76 [SIMPLE_EDGE]
                                              SHUFFLE [RS_255]
                                                PartitionCols:_col0
                                                Select Operator [SEL_253] (rows=8116 width=1119)
                                                  Output:["_col0"]
                                                  Filter Operator [FIL_820] (rows=8116 width=1119)
                                                    predicate:(d_year BETWEEN 1998 AND 2000 and d_date_sk is not null)
                                                     Please refer to the previous TableScan [TS_13]
                                            <-Map 89 [SIMPLE_EDGE]
                                              SHUFFLE [RS_254]
                                                PartitionCols:_col0
                                                Select Operator [SEL_250] (rows=287989836 width=135)
                                                  Output:["_col0","_col1","_col2"]
                                                  Filter Operator [FIL_819] (rows=287989836 width=135)
                                                    predicate:cs_sold_date_sk is not null
                                                    TableScan [TS_55] (rows=287989836 width=135)
                                                      default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:NONE,Output:["cs_sold_date_sk","cs_quantity","cs_list_price"]
                                  <-Reducer 86 [CONTAINS]
                                    Reduce Output Operator [RS_273]
                                      Group By Operator [GBY_272] (rows=1 width=288)
                                        Output:["_col0"],aggregations:["avg(_col0)"]
                                        Select Operator [SEL_270] (rows=1108786976 width=108)
                                          Output:["_col0"]
                                          Select Operator [SEL_269] (rows=158402938 width=135)
                                            Output:["_col0","_col1"]
                                            Merge Join Operator [MERGEJOIN_881] (rows=158402938 width=135)
                                              Conds:RS_266._col0=RS_267._col0(Inner),Output:["_col1","_col2"]
                                            <-Map 84 [SIMPLE_EDGE]
                                              SHUFFLE [RS_267]
                                                PartitionCols:_col0
                                                Select Operator [SEL_265] (rows=8116 width=1119)
                                                  Output:["_col0"]
                                                  Filter Operator [FIL_822] (rows=8116 width=1119)
                                                    predicate:(d_year BETWEEN 1998 AND 2000 and d_date_sk is not null)
                                                     Please refer to the previous TableScan [TS_25]
                                            <-Map 90 [SIMPLE_EDGE]
                                              SHUFFLE [RS_266]
                                                PartitionCols:_col0
                                                Select Operator [SEL_262] (rows=144002668 width=135)
                                                  Output:["_col0","_col1","_col2"]
                                                  Filter Operator [FIL_821] (rows=144002668 width=135)
                                                    predicate:ws_sold_date_sk is not null
                                                    TableScan [TS_67] (rows=144002668 width=135)
                                                      default@web_sales,web_sales,Tbl:COMPLETE,Col:NONE,Output:["ws_sold_date_sk","ws_quantity","ws_list_price"]
                            <-Reducer 47 [CUSTOM_SIMPLE_EDGE]
                              PARTITION_ONLY_SHUFFLE [RS_382]
                                Group By Operator [GBY_378] (rows=348467716 width=135)
                                  Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(VALUE._col0)","count(VALUE._col1)"],keys:KEY._col0, KEY._col1, KEY._col2
                                <-Reducer 46 [SIMPLE_EDGE]
                                  SHUFFLE [RS_377]
                                    PartitionCols:_col0, _col1, _col2
                                    Group By Operator [GBY_376] (rows=696935432 width=135)
                                      Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(_col3)","count()"],keys:_col0, _col1, _col2
                                      Select Operator [SEL_374] (rows=696935432 width=135)
                                        Output:["_col0","_col1","_col2","_col3"]
                                        Merge Join Operator [MERGEJOIN_890] (rows=696935432 width=135)
                                          Conds:RS_370._col1=RS_371._col0(Inner),RS_370._col1=RS_372._col0(Inner),Output:["_col2","_col3","_col8","_col9","_col10"]
                                        <-Map 96 [SIMPLE_EDGE]
                                          SHUFFLE [RS_371]
                                            PartitionCols:_col0
                                            Select Operator [SEL_284] (rows=462000 width=1436)
                                              Output:["_col0","_col1","_col2","_col3"]
                                              Filter Operator [FIL_825] (rows=462000 width=1436)
                                                predicate:i_item_sk is not null
                                                TableScan [TS_89] (rows=462000 width=1436)
                                                  default@item,item,Tbl:COMPLETE,Col:NONE,Output:["i_item_sk","i_brand_id","i_class_id","i_category_id"]
                                        <-Reducer 45 [SIMPLE_EDGE]
                                          SHUFFLE [RS_372]
                                            PartitionCols:_col0
                                            Group By Operator [GBY_365] (rows=254100 width=1436)
                                              Output:["_col0"],keys:KEY._col0
                                            <-Reducer 44 [SIMPLE_EDGE]
                                              SHUFFLE [RS_364]
                                                PartitionCols:_col0
                                                Group By Operator [GBY_363] (rows=508200 width=1436)
                                                  Output:["_col0"],keys:_col0
                                                  Merge Join Operator [MERGEJOIN_889] (rows=508200 width=1436)
                                                    Conds:RS_359._col1, _col2, _col3=RS_360._col0, _col1, _col2(Inner),Output:["_col0"]
                                                  <-Map 96 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_359]
                                                      PartitionCols:_col1, _col2, _col3
                                                      Select Operator [SEL_287] (rows=462000 width=1436)
                                                        Output:["_col0","_col1","_col2","_col3"]
                                                        Filter Operator [FIL_826] (rows=462000 width=1436)
                                                          predicate:(i_brand_id is not null and i_class_id is not null and i_category_id is not null and i_item_sk is not null)
                                                           Please refer to the previous TableScan [TS_89]
                                                  <-Reducer 43 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_360]
                                                      PartitionCols:_col0, _col1, _col2
                                                      Select Operator [SEL_358] (rows=1 width=108)
                                                        Output:["_col0","_col1","_col2"]
                                                        Filter Operator [FIL_357] (rows=1 width=108)
                                                          predicate:(_col3 = 3)
                                                          Group By Operator [GBY_356] (rows=304916424 width=108)
                                                            Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                          <-Union 42 [SIMPLE_EDGE]
                                                            <-Reducer 41 [CONTAINS]
                                                              Reduce Output Operator [RS_355]
                                                                PartitionCols:_col0, _col1, _col2
                                                                Group By Operator [GBY_354] (rows=609832849 width=108)
                                                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                  Group By Operator [GBY_307] (rows=348477374 width=88)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                  <-Reducer 40 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_306]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                      Group By Operator [GBY_305] (rows=696954748 width=88)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count(1)"],keys:_col0, _col1, _col2
                                                                        Select Operator [SEL_303] (rows=696954748 width=88)
                                                                          Output:["_col0","_col1","_col2"]
                                                                          Merge Join Operator [MERGEJOIN_884] (rows=696954748 width=88)
                                                                            Conds:RS_300._col1=RS_301._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                          <-Map 96 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_301]
                                                                              PartitionCols:_col0
                                                                              Select Operator [SEL_296] (rows=462000 width=1436)
                                                                                Output:["_col0","_col1","_col2","_col3"]
                                                                                Filter Operator [FIL_829] (rows=462000 width=1436)
                                                                                  predicate:(i_item_sk is not null and i_brand_id is not null and i_class_id is not null and i_category_id is not null)
                                                                                   Please refer to the previous TableScan [TS_89]
                                                                          <-Reducer 39 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_300]
                                                                              PartitionCols:_col1
                                                                              Merge Join Operator [MERGEJOIN_883] (rows=633595212 width=88)
                                                                                Conds:RS_297._col0=RS_298._col0(Inner),Output:["_col1"]
                                                                              <-Map 17 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_298]
                                                                                  PartitionCols:_col0
                                                                                  Select Operator [SEL_293] (rows=8116 width=1119)
                                                                                    Output:["_col0"]
                                                                                    Filter Operator [FIL_828] (rows=8116 width=1119)
                                                                                      predicate:(d_year BETWEEN 1999 AND 2001 and d_date_sk is not null)
                                                                                       Please refer to the previous TableScan [TS_3]
                                                                              <-Map 97 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_297]
                                                                                  PartitionCols:_col0
                                                                                  Select Operator [SEL_290] (rows=575995635 width=88)
                                                                                    Output:["_col0","_col1"]
                                                                                    Filter Operator [FIL_827] (rows=575995635 width=88)
                                                                                      predicate:(ss_item_sk is not null and ss_sold_date_sk is not null)
                                                                                      TableScan [TS_95] (rows=575995635 width=88)
                                                                                        default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_item_sk"]
                                                            <-Reducer 50 [CONTAINS]
                                                              Reduce Output Operator [RS_355]
                                                                PartitionCols:_col0, _col1, _col2
                                                                Group By Operator [GBY_354] (rows=609832849 width=108)
                                                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                  Group By Operator [GBY_328] (rows=174233858 width=135)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                  <-Reducer 49 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_327]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                      Group By Operator [GBY_326] (rows=348467716 width=135)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count(1)"],keys:_col0, _col1, _col2
                                                                        Select Operator [SEL_324] (rows=348467716 width=135)
                                                                          Output:["_col0","_col1","_col2"]
                                                                          Merge Join Operator [MERGEJOIN_886] (rows=348467716 width=135)
                                                                            Conds:RS_321._col1=RS_322._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                          <-Map 96 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_322]
                                                                              PartitionCols:_col0
                                                                              Select Operator [SEL_317] (rows=462000 width=1436)
                                                                                Output:["_col0","_col1","_col2","_col3"]
                                                                                Filter Operator [FIL_832] (rows=462000 width=1436)
                                                                                  predicate:(i_item_sk is not null and i_brand_id is not null and i_class_id is not null and i_category_id is not null)
                                                                                   Please refer to the previous TableScan [TS_89]
                                                                          <-Reducer 48 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_321]
                                                                              PartitionCols:_col1
                                                                              Merge Join Operator [MERGEJOIN_885] (rows=316788826 width=135)
                                                                                Conds:RS_318._col0=RS_319._col0(Inner),Output:["_col1"]
                                                                              <-Map 17 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_319]
                                                                                  PartitionCols:_col0
                                                                                  Select Operator [SEL_314] (rows=8116 width=1119)
                                                                                    Output:["_col0"]
                                                                                    Filter Operator [FIL_831] (rows=8116 width=1119)
                                                                                      predicate:(d_year BETWEEN 1999 AND 2001 and d_date_sk is not null)
                                                                                       Please refer to the previous TableScan [TS_3]
                                                                              <-Map 98 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_318]
                                                                                  PartitionCols:_col0
                                                                                  Select Operator [SEL_311] (rows=287989836 width=135)
                                                                                    Output:["_col0","_col1"]
                                                                                    Filter Operator [FIL_830] (rows=287989836 width=135)
                                                                                      predicate:(cs_item_sk is not null and cs_sold_date_sk is not null)
                                                                                      TableScan [TS_116] (rows=287989836 width=135)
                                                                                        default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:NONE,Output:["cs_sold_date_sk","cs_item_sk"]
                                                            <-Reducer 53 [CONTAINS]
                                                              Reduce Output Operator [RS_355]
                                                                PartitionCols:_col0, _col1, _col2
                                                                Group By Operator [GBY_354] (rows=609832849 width=108)
                                                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                  Group By Operator [GBY_350] (rows=87121617 width=135)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                  <-Reducer 52 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_349]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                      Group By Operator [GBY_348] (rows=174243235 width=135)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count(1)"],keys:_col0, _col1, _col2
                                                                        Select Operator [SEL_346] (rows=174243235 width=135)
                                                                          Output:["_col0","_col1","_col2"]
                                                                          Merge Join Operator [MERGEJOIN_888] (rows=174243235 width=135)
                                                                            Conds:RS_343._col1=RS_344._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                          <-Map 96 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_344]
                                                                              PartitionCols:_col0
                                                                              Select Operator [SEL_339] (rows=462000 width=1436)
                                                                                Output:["_col0","_col1","_col2","_col3"]
                                                                                Filter Operator [FIL_835] (rows=462000 width=1436)
                                                                                  predicate:(i_item_sk is not null and i_brand_id is not null and i_class_id is not null and i_category_id is not null)
                                                                                   Please refer to the previous TableScan [TS_89]
                                                                          <-Reducer 51 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_343]
                                                                              PartitionCols:_col1
                                                                              Merge Join Operator [MERGEJOIN_887] (rows=158402938 width=135)
                                                                                Conds:RS_340._col0=RS_341._col0(Inner),Output:["_col1"]
                                                                              <-Map 17 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_341]
                                                                                  PartitionCols:_col0
                                                                                  Select Operator [SEL_336] (rows=8116 width=1119)
                                                                                    Output:["_col0"]
                                                                                    Filter Operator [FIL_834] (rows=8116 width=1119)
                                                                                      predicate:(d_year BETWEEN 1999 AND 2001 and d_date_sk is not null)
                                                                                       Please refer to the previous TableScan [TS_3]
                                                                              <-Map 99 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_340]
                                                                                  PartitionCols:_col0
                                                                                  Select Operator [SEL_333] (rows=144002668 width=135)
                                                                                    Output:["_col0","_col1"]
                                                                                    Filter Operator [FIL_833] (rows=144002668 width=135)
                                                                                      predicate:(ws_item_sk is not null and ws_sold_date_sk is not null)
                                                                                      TableScan [TS_138] (rows=144002668 width=135)
                                                                                        default@web_sales,web_sales,Tbl:COMPLETE,Col:NONE,Output:["ws_sold_date_sk","ws_item_sk"]
                                        <-Reducer 94 [SIMPLE_EDGE]
                                          SHUFFLE [RS_370]
                                            PartitionCols:_col1
                                            Merge Join Operator [MERGEJOIN_882] (rows=316788826 width=135)
                                              Conds:RS_367._col0=RS_368._col0(Inner),Output:["_col1","_col2","_col3"]
                                            <-Map 93 [SIMPLE_EDGE]
                                              SHUFFLE [RS_368]
                                                PartitionCols:_col0
                                                Select Operator [SEL_281] (rows=18262 width=1119)
                                                  Output:["_col0"]
                                                  Filter Operator [FIL_824] (rows=18262 width=1119)
                                                    predicate:((d_year = 2000) and (d_moy = 11) and d_date_sk is not null)
                                                    TableScan [TS_86] (rows=73049 width=1119)
                                                      default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year","d_moy"]
                                            <-Map 100 [SIMPLE_EDGE]
                                              SHUFFLE [RS_367]
                                                PartitionCols:_col0
                                                Select Operator [SEL_278] (rows=287989836 width=135)
                                                  Output:["_col0","_col1","_col2","_col3"]
                                                  Filter Operator [FIL_823] (rows=287989836 width=135)
                                                    predicate:(cs_item_sk is not null and cs_sold_date_sk is not null)
                                                    TableScan [TS_276] (rows=287989836 width=135)
                                                      default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:NONE,Output:["cs_sold_date_sk","cs_item_sk","cs_quantity","cs_list_price"]
                  <-Reducer 16 [CONTAINS]
                    Reduce Output Operator [RS_584]
                      PartitionCols:_col0, _col1, _col2, _col3, _col4
                      Group By Operator [GBY_583] (rows=2032776160 width=405)
                        Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],aggregations:["sum(_col4)","sum(_col5)"],keys:_col0, _col1, _col2, _col3, 0
                        Select Operator [SEL_580] (rows=58081078 width=432)
                          Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                          Filter Operator [FIL_579] (rows=58081078 width=432)
                            predicate:(_col5 > _col1)
                            Merge Join Operator [MERGEJOIN_908] (rows=174243235 width=432)
                              Conds:(Inner),(Inner),Output:["_col1","_col2","_col3","_col4","_col5","_col6"]
                            <-Reducer 15 [CUSTOM_SIMPLE_EDGE]
                              PARTITION_ONLY_SHUFFLE [RS_575]
                                Select Operator [SEL_432] (rows=1 width=8)
                                  Filter Operator [FIL_431] (rows=1 width=8)
                                    predicate:(sq_count_check(_col0) <= 1)
                                    Group By Operator [GBY_429] (rows=1 width=8)
                                      Output:["_col0"],aggregations:["count()"]
                                      Select Operator [SEL_424] (rows=1 width=8)
                                        Group By Operator [GBY_423] (rows=1 width=8)
                                          Output:["_col0"],aggregations:["count(VALUE._col0)"]
                                        <-Union 14 [CUSTOM_SIMPLE_EDGE]
                                          <-Reducer 13 [CONTAINS]
                                            Reduce Output Operator [RS_422]
                                              Group By Operator [GBY_421] (rows=1 width=8)
                                                Output:["_col0"],aggregations:["count(_col0)"]
                                                Select Operator [SEL_420] (rows=1108786976 width=108)
                                                  Output:["_col0"]
                                                  Select Operator [SEL_397] (rows=633595212 width=88)
                                                    Output:["_col0"]
                                                    Merge Join Operator [MERGEJOIN_891] (rows=633595212 width=88)
                                                      Conds:RS_394._col0=RS_395._col0(Inner),Output:["_col1"]
                                                    <-Map 17 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_395]
                                                        PartitionCols:_col0
                                                        Select Operator [SEL_393] (rows=8116 width=1119)
                                                          Output:["_col0"]
                                                          Filter Operator [FIL_837] (rows=8116 width=1119)
                                                            predicate:(d_year BETWEEN 1999 AND 2001 and d_date_sk is not null)
                                                             Please refer to the previous TableScan [TS_3]
                                                    <-Map 1 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_394]
                                                        PartitionCols:_col0
                                                        Select Operator [SEL_390] (rows=575995635 width=88)
                                                          Output:["_col0","_col1"]
                                                          Filter Operator [FIL_836] (rows=575995635 width=88)
                                                            predicate:ss_sold_date_sk is not null
                                                             Please refer to the previous TableScan [TS_0]
                                          <-Reducer 75 [CONTAINS]
                                            Reduce Output Operator [RS_422]
                                              Group By Operator [GBY_421] (rows=1 width=8)
                                                Output:["_col0"],aggregations:["count(_col0)"]
                                                Select Operator [SEL_420] (rows=1108786976 width=108)
                                                  Output:["_col0"]
                                                  Select Operator [SEL_407] (rows=316788826 width=135)
                                                    Output:["_col0"]
                                                    Merge Join Operator [MERGEJOIN_892] (rows=316788826 width=135)
                                                      Conds:RS_404._col0=RS_405._col0(Inner),Output:["_col1"]
                                                    <-Map 76 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_405]
                                                        PartitionCols:_col0
                                                        Select Operator [SEL_403] (rows=8116 width=1119)
                                                          Output:["_col0"]
                                                          Filter Operator [FIL_839] (rows=8116 width=1119)
                                                            predicate:(d_year BETWEEN 1998 AND 2000 and d_date_sk is not null)
                                                             Please refer to the previous TableScan [TS_13]
                                                    <-Map 72 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_404]
                                                        PartitionCols:_col0
                                                        Select Operator [SEL_400] (rows=287989836 width=135)
                                                          Output:["_col0","_col1"]
                                                          Filter Operator [FIL_838] (rows=287989836 width=135)
                                                            predicate:cs_sold_date_sk is not null
                                                             Please refer to the previous TableScan [TS_10]
                                          <-Reducer 83 [CONTAINS]
                                            Reduce Output Operator [RS_422]
                                              Group By Operator [GBY_421] (rows=1 width=8)
                                                Output:["_col0"],aggregations:["count(_col0)"]
                                                Select Operator [SEL_420] (rows=1108786976 width=108)
                                                  Output:["_col0"]
                                                  Select Operator [SEL_419] (rows=158402938 width=135)
                                                    Output:["_col0"]
                                                    Merge Join Operator [MERGEJOIN_893] (rows=158402938 width=135)
                                                      Conds:RS_416._col0=RS_417._col0(Inner),Output:["_col1"]
                                                    <-Map 84 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_417]
                                                        PartitionCols:_col0
                                                        Select Operator [SEL_415] (rows=8116 width=1119)
                                                          Output:["_col0"]
                                                          Filter Operator [FIL_841] (rows=8116 width=1119)
                                                            predicate:(d_year BETWEEN 1998 AND 2000 and d_date_sk is not null)
                                                             Please refer to the previous TableScan [TS_25]
                                                    <-Map 80 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_416]
                                                        PartitionCols:_col0
                                                        Select Operator [SEL_412] (rows=144002668 width=135)
                                                          Output:["_col0","_col1"]
                                                          Filter Operator [FIL_840] (rows=144002668 width=135)
                                                            predicate:ws_sold_date_sk is not null
                                                             Please refer to the previous TableScan [TS_22]
                            <-Reducer 56 [CUSTOM_SIMPLE_EDGE]
                              PARTITION_ONLY_SHUFFLE [RS_576]
                                Group By Operator [GBY_469] (rows=1 width=288)
                                  Output:["_col0"],aggregations:["avg(VALUE._col0)"]
                                <-Union 55 [CUSTOM_SIMPLE_EDGE]
                                  <-Reducer 54 [CONTAINS]
                                    Reduce Output Operator [RS_468]
                                      Group By Operator [GBY_467] (rows=1 width=288)
                                        Output:["_col0"],aggregations:["avg(_col0)"]
                                        Select Operator [SEL_465] (rows=1108786976 width=108)
                                          Output:["_col0"]
                                          Select Operator [SEL_442] (rows=633595212 width=88)
                                            Output:["_col0","_col1"]
                                            Merge Join Operator [MERGEJOIN_894] (rows=633595212 width=88)
                                              Conds:RS_439._col0=RS_440._col0(Inner),Output:["_col1","_col2"]
                                            <-Map 17 [SIMPLE_EDGE]
                                              SHUFFLE [RS_440]
                                                PartitionCols:_col0
                                                Select Operator [SEL_438] (rows=8116 width=1119)
                                                  Output:["_col0"]
                                                  Filter Operator [FIL_843] (rows=8116 width=1119)
                                                    predicate:(d_year BETWEEN 1999 AND 2001 and d_date_sk is not null)
                                                     Please refer to the previous TableScan [TS_3]
                                            <-Map 88 [SIMPLE_EDGE]
                                              SHUFFLE [RS_439]
                                                PartitionCols:_col0
                                                Select Operator [SEL_435] (rows=575995635 width=88)
                                                  Output:["_col0","_col1","_col2"]
                                                  Filter Operator [FIL_842] (rows=575995635 width=88)
                                                    predicate:ss_sold_date_sk is not null
                                                     Please refer to the previous TableScan [TS_45]
                                  <-Reducer 79 [CONTAINS]
                                    Reduce Output Operator [RS_468]
                                      Group By Operator [GBY_467] (rows=1 width=288)
                                        Output:["_col0"],aggregations:["avg(_col0)"]
                                        Select Operator [SEL_465] (rows=1108786976 width=108)
                                          Output:["_col0"]
                                          Select Operator [SEL_452] (rows=316788826 width=135)
                                            Output:["_col0","_col1"]
                                            Merge Join Operator [MERGEJOIN_895] (rows=316788826 width=135)
                                              Conds:RS_449._col0=RS_450._col0(Inner),Output:["_col1","_col2"]
                                            <-Map 76 [SIMPLE_EDGE]
                                              SHUFFLE [RS_450]
                                                PartitionCols:_col0
                                                Select Operator [SEL_448] (rows=8116 width=1119)
                                                  Output:["_col0"]
                                                  Filter Operator [FIL_845] (rows=8116 width=1119)
                                                    predicate:(d_year BETWEEN 1998 AND 2000 and d_date_sk is not null)
                                                     Please refer to the previous TableScan [TS_13]
                                            <-Map 89 [SIMPLE_EDGE]
                                              SHUFFLE [RS_449]
                                                PartitionCols:_col0
                                                Select Operator [SEL_445] (rows=287989836 width=135)
                                                  Output:["_col0","_col1","_col2"]
                                                  Filter Operator [FIL_844] (rows=287989836 width=135)
                                                    predicate:cs_sold_date_sk is not null
                                                     Please refer to the previous TableScan [TS_55]
                                  <-Reducer 87 [CONTAINS]
                                    Reduce Output Operator [RS_468]
                                      Group By Operator [GBY_467] (rows=1 width=288)
                                        Output:["_col0"],aggregations:["avg(_col0)"]
                                        Select Operator [SEL_465] (rows=1108786976 width=108)
                                          Output:["_col0"]
                                          Select Operator [SEL_464] (rows=158402938 width=135)
                                            Output:["_col0","_col1"]
                                            Merge Join Operator [MERGEJOIN_896] (rows=158402938 width=135)
                                              Conds:RS_461._col0=RS_462._col0(Inner),Output:["_col1","_col2"]
                                            <-Map 84 [SIMPLE_EDGE]
                                              SHUFFLE [RS_462]
                                                PartitionCols:_col0
                                                Select Operator [SEL_460] (rows=8116 width=1119)
                                                  Output:["_col0"]
                                                  Filter Operator [FIL_847] (rows=8116 width=1119)
                                                    predicate:(d_year BETWEEN 1998 AND 2000 and d_date_sk is not null)
                                                     Please refer to the previous TableScan [TS_25]
                                            <-Map 90 [SIMPLE_EDGE]
                                              SHUFFLE [RS_461]
                                                PartitionCols:_col0
                                                Select Operator [SEL_457] (rows=144002668 width=135)
                                                  Output:["_col0","_col1","_col2"]
                                                  Filter Operator [FIL_846] (rows=144002668 width=135)
                                                    predicate:ws_sold_date_sk is not null
                                                     Please refer to the previous TableScan [TS_67]
                            <-Reducer 65 [CUSTOM_SIMPLE_EDGE]
                              PARTITION_ONLY_SHUFFLE [RS_577]
                                Group By Operator [GBY_573] (rows=174243235 width=135)
                                  Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(VALUE._col0)","count(VALUE._col1)"],keys:KEY._col0, KEY._col1, KEY._col2
                                <-Reducer 64 [SIMPLE_EDGE]
                                  SHUFFLE [RS_572]
                                    PartitionCols:_col0, _col1, _col2
                                    Group By Operator [GBY_571] (rows=348486471 width=135)
                                      Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(_col3)","count()"],keys:_col0, _col1, _col2
                                      Select Operator [SEL_569] (rows=348486471 width=135)
                                        Output:["_col0","_col1","_col2","_col3"]
                                        Merge Join Operator [MERGEJOIN_905] (rows=348486471 width=135)
                                          Conds:RS_565._col1=RS_566._col0(Inner),RS_565._col1=RS_567._col0(Inner),Output:["_col2","_col3","_col8","_col9","_col10"]
                                        <-Map 96 [SIMPLE_EDGE]
                                          SHUFFLE [RS_566]
                                            PartitionCols:_col0
                                            Select Operator [SEL_479] (rows=462000 width=1436)
                                              Output:["_col0","_col1","_col2","_col3"]
                                              Filter Operator [FIL_850] (rows=462000 width=1436)
                                                predicate:i_item_sk is not null
                                                 Please refer to the previous TableScan [TS_89]
                                        <-Reducer 63 [SIMPLE_EDGE]
                                          SHUFFLE [RS_567]
                                            PartitionCols:_col0
                                            Group By Operator [GBY_560] (rows=254100 width=1436)
                                              Output:["_col0"],keys:KEY._col0
                                            <-Reducer 62 [SIMPLE_EDGE]
                                              SHUFFLE [RS_559]
                                                PartitionCols:_col0
                                                Group By Operator [GBY_558] (rows=508200 width=1436)
                                                  Output:["_col0"],keys:_col0
                                                  Merge Join Operator [MERGEJOIN_904] (rows=508200 width=1436)
                                                    Conds:RS_554._col1, _col2, _col3=RS_555._col0, _col1, _col2(Inner),Output:["_col0"]
                                                  <-Map 96 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_554]
                                                      PartitionCols:_col1, _col2, _col3
                                                      Select Operator [SEL_482] (rows=462000 width=1436)
                                                        Output:["_col0","_col1","_col2","_col3"]
                                                        Filter Operator [FIL_851] (rows=462000 width=1436)
                                                          predicate:(i_brand_id is not null and i_class_id is not null and i_category_id is not null and i_item_sk is not null)
                                                           Please refer to the previous TableScan [TS_89]
                                                  <-Reducer 61 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_555]
                                                      PartitionCols:_col0, _col1, _col2
                                                      Select Operator [SEL_553] (rows=1 width=108)
                                                        Output:["_col0","_col1","_col2"]
                                                        Filter Operator [FIL_552] (rows=1 width=108)
                                                          predicate:(_col3 = 3)
                                                          Group By Operator [GBY_551] (rows=304916424 width=108)
                                                            Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                          <-Union 60 [SIMPLE_EDGE]
                                                            <-Reducer 59 [CONTAINS]
                                                              Reduce Output Operator [RS_550]
                                                                PartitionCols:_col0, _col1, _col2
                                                                Group By Operator [GBY_549] (rows=609832849 width=108)
                                                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                  Group By Operator [GBY_502] (rows=348477374 width=88)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                  <-Reducer 58 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_501]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                      Group By Operator [GBY_500] (rows=696954748 width=88)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count(1)"],keys:_col0, _col1, _col2
                                                                        Select Operator [SEL_498] (rows=696954748 width=88)
                                                                          Output:["_col0","_col1","_col2"]
                                                                          Merge Join Operator [MERGEJOIN_899] (rows=696954748 width=88)
                                                                            Conds:RS_495._col1=RS_496._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                          <-Map 96 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_496]
                                                                              PartitionCols:_col0
                                                                              Select Operator [SEL_491] (rows=462000 width=1436)
                                                                                Output:["_col0","_col1","_col2","_col3"]
                                                                                Filter Operator [FIL_854] (rows=462000 width=1436)
                                                                                  predicate:(i_item_sk is not null and i_brand_id is not null and i_class_id is not null and i_category_id is not null)
                                                                                   Please refer to the previous TableScan [TS_89]
                                                                          <-Reducer 57 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_495]
                                                                              PartitionCols:_col1
                                                                              Merge Join Operator [MERGEJOIN_898] (rows=633595212 width=88)
                                                                                Conds:RS_492._col0=RS_493._col0(Inner),Output:["_col1"]
                                                                              <-Map 17 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_493]
                                                                                  PartitionCols:_col0
                                                                                  Select Operator [SEL_488] (rows=8116 width=1119)
                                                                                    Output:["_col0"]
                                                                                    Filter Operator [FIL_853] (rows=8116 width=1119)
                                                                                      predicate:(d_year BETWEEN 1999 AND 2001 and d_date_sk is not null)
                                                                                       Please refer to the previous TableScan [TS_3]
                                                                              <-Map 97 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_492]
                                                                                  PartitionCols:_col0
                                                                                  Select Operator [SEL_485] (rows=575995635 width=88)
                                                                                    Output:["_col0","_col1"]
                                                                                    Filter Operator [FIL_852] (rows=575995635 width=88)
                                                                                      predicate:(ss_item_sk is not null and ss_sold_date_sk is not null)
                                                                                       Please refer to the previous TableScan [TS_95]
                                                            <-Reducer 68 [CONTAINS]
                                                              Reduce Output Operator [RS_550]
                                                                PartitionCols:_col0, _col1, _col2
                                                                Group By Operator [GBY_549] (rows=609832849 width=108)
                                                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                  Group By Operator [GBY_523] (rows=174233858 width=135)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                  <-Reducer 67 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_522]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                      Group By Operator [GBY_521] (rows=348467716 width=135)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count(1)"],keys:_col0, _col1, _col2
                                                                        Select Operator [SEL_519] (rows=348467716 width=135)
                                                                          Output:["_col0","_col1","_col2"]
                                                                          Merge Join Operator [MERGEJOIN_901] (rows=348467716 width=135)
                                                                            Conds:RS_516._col1=RS_517._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                          <-Map 96 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_517]
                                                                              PartitionCols:_col0
                                                                              Select Operator [SEL_512] (rows=462000 width=1436)
                                                                                Output:["_col0","_col1","_col2","_col3"]
                                                                                Filter Operator [FIL_857] (rows=462000 width=1436)
                                                                                  predicate:(i_item_sk is not null and i_brand_id is not null and i_class_id is not null and i_category_id is not null)
                                                                                   Please refer to the previous TableScan [TS_89]
                                                                          <-Reducer 66 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_516]
                                                                              PartitionCols:_col1
                                                                              Merge Join Operator [MERGEJOIN_900] (rows=316788826 width=135)
                                                                                Conds:RS_513._col0=RS_514._col0(Inner),Output:["_col1"]
                                                                              <-Map 17 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_514]
                                                                                  PartitionCols:_col0
                                                                                  Select Operator [SEL_509] (rows=8116 width=1119)
                                                                                    Output:["_col0"]
                                                                                    Filter Operator [FIL_856] (rows=8116 width=1119)
                                                                                      predicate:(d_year BETWEEN 1999 AND 2001 and d_date_sk is not null)
                                                                                       Please refer to the previous TableScan [TS_3]
                                                                              <-Map 98 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_513]
                                                                                  PartitionCols:_col0
                                                                                  Select Operator [SEL_506] (rows=287989836 width=135)
                                                                                    Output:["_col0","_col1"]
                                                                                    Filter Operator [FIL_855] (rows=287989836 width=135)
                                                                                      predicate:(cs_item_sk is not null and cs_sold_date_sk is not null)
                                                                                       Please refer to the previous TableScan [TS_116]
                                                            <-Reducer 71 [CONTAINS]
                                                              Reduce Output Operator [RS_550]
                                                                PartitionCols:_col0, _col1, _col2
                                                                Group By Operator [GBY_549] (rows=609832849 width=108)
                                                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                  Group By Operator [GBY_545] (rows=87121617 width=135)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                  <-Reducer 70 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_544]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                      Group By Operator [GBY_543] (rows=174243235 width=135)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count(1)"],keys:_col0, _col1, _col2
                                                                        Select Operator [SEL_541] (rows=174243235 width=135)
                                                                          Output:["_col0","_col1","_col2"]
                                                                          Merge Join Operator [MERGEJOIN_903] (rows=174243235 width=135)
                                                                            Conds:RS_538._col1=RS_539._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                          <-Map 96 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_539]
                                                                              PartitionCols:_col0
                                                                              Select Operator [SEL_534] (rows=462000 width=1436)
                                                                                Output:["_col0","_col1","_col2","_col3"]
                                                                                Filter Operator [FIL_860] (rows=462000 width=1436)
                                                                                  predicate:(i_item_sk is not null and i_brand_id is not null and i_class_id is not null and i_category_id is not null)
                                                                                   Please refer to the previous TableScan [TS_89]
                                                                          <-Reducer 69 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_538]
                                                                              PartitionCols:_col1
                                                                              Merge Join Operator [MERGEJOIN_902] (rows=158402938 width=135)
                                                                                Conds:RS_535._col0=RS_536._col0(Inner),Output:["_col1"]
                                                                              <-Map 17 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_536]
                                                                                  PartitionCols:_col0
                                                                                  Select Operator [SEL_531] (rows=8116 width=1119)
                                                                                    Output:["_col0"]
                                                                                    Filter Operator [FIL_859] (rows=8116 width=1119)
                                                                                      predicate:(d_year BETWEEN 1999 AND 2001 and d_date_sk is not null)
                                                                                       Please refer to the previous TableScan [TS_3]
                                                                              <-Map 99 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_535]
                                                                                  PartitionCols:_col0
                                                                                  Select Operator [SEL_528] (rows=144002668 width=135)
                                                                                    Output:["_col0","_col1"]
                                                                                    Filter Operator [FIL_858] (rows=144002668 width=135)
                                                                                      predicate:(ws_item_sk is not null and ws_sold_date_sk is not null)
                                                                                       Please refer to the previous TableScan [TS_138]
                                        <-Reducer 95 [SIMPLE_EDGE]
                                          SHUFFLE [RS_565]
                                            PartitionCols:_col1
                                            Merge Join Operator [MERGEJOIN_897] (rows=158402938 width=135)
                                              Conds:RS_562._col0=RS_563._col0(Inner),Output:["_col1","_col2","_col3"]
                                            <-Map 93 [SIMPLE_EDGE]
                                              SHUFFLE [RS_563]
                                                PartitionCols:_col0
                                                Select Operator [SEL_476] (rows=18262 width=1119)
                                                  Output:["_col0"]
                                                  Filter Operator [FIL_849] (rows=18262 width=1119)
                                                    predicate:((d_year = 2000) and (d_moy = 11) and d_date_sk is not null)
                                                     Please refer to the previous TableScan [TS_86]
                                            <-Map 101 [SIMPLE_EDGE]
                                              SHUFFLE [RS_562]
                                                PartitionCols:_col0
                                                Select Operator [SEL_473] (rows=144002668 width=135)
                                                  Output:["_col0","_col1","_col2","_col3"]
                                                  Filter Operator [FIL_848] (rows=144002668 width=135)
                                                    predicate:(ws_item_sk is not null and ws_sold_date_sk is not null)
                                                    TableScan [TS_471] (rows=144002668 width=135)
                                                      default@web_sales,web_sales,Tbl:COMPLETE,Col:NONE,Output:["ws_sold_date_sk","ws_item_sk","ws_quantity","ws_list_price"]
                  <-Reducer 5 [CONTAINS]
                    Reduce Output Operator [RS_584]
                      PartitionCols:_col0, _col1, _col2, _col3, _col4
                      Group By Operator [GBY_583] (rows=2032776160 width=405)
                        Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],aggregations:["sum(_col4)","sum(_col5)"],keys:_col0, _col1, _col2, _col3, 0
                        Select Operator [SEL_192] (rows=232318249 width=385)
                          Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                          Filter Operator [FIL_191] (rows=232318249 width=385)
                            predicate:(_col5 > _col1)
                            Merge Join Operator [MERGEJOIN_906] (rows=696954748 width=385)
                              Conds:(Inner),(Inner),Output:["_col1","_col2","_col3","_col4","_col5","_col6"]
                            <-Reducer 20 [CUSTOM_SIMPLE_EDGE]
                              PARTITION_ONLY_SHUFFLE [RS_188]
                                Group By Operator [GBY_81] (rows=1 width=288)
                                  Output:["_col0"],aggregations:["avg(VALUE._col0)"]
                                <-Union 19 [CUSTOM_SIMPLE_EDGE]
                                  <-Reducer 18 [CONTAINS]
                                    Reduce Output Operator [RS_80]
                                      Group By Operator [GBY_79] (rows=1 width=288)
                                        Output:["_col0"],aggregations:["avg(_col0)"]
                                        Select Operator [SEL_77] (rows=1108786976 width=108)
                                          Output:["_col0"]
                                          Select Operator [SEL_54] (rows=633595212 width=88)
                                            Output:["_col0","_col1"]
                                            Merge Join Operator [MERGEJOIN_864] (rows=633595212 width=88)
                                              Conds:RS_51._col0=RS_52._col0(Inner),Output:["_col1","_col2"]
                                            <-Map 17 [SIMPLE_EDGE]
                                              SHUFFLE [RS_52]
                                                PartitionCols:_col0
                                                Select Operator [SEL_50] (rows=8116 width=1119)
                                                  Output:["_col0"]
                                                  Filter Operator [FIL_793] (rows=8116 width=1119)
                                                    predicate:(d_year BETWEEN 1999 AND 2001 and d_date_sk is not null)
                                                     Please refer to the previous TableScan [TS_3]
                                            <-Map 88 [SIMPLE_EDGE]
                                              SHUFFLE [RS_51]
                                                PartitionCols:_col0
                                                Select Operator [SEL_47] (rows=575995635 width=88)
                                                  Output:["_col0","_col1","_col2"]
                                                  Filter Operator [FIL_792] (rows=575995635 width=88)
                                                    predicate:ss_sold_date_sk is not null
                                                     Please refer to the previous TableScan [TS_45]
                                  <-Reducer 77 [CONTAINS]
                                    Reduce Output Operator [RS_80]
                                      Group By Operator [GBY_79] (rows=1 width=288)
                                        Output:["_col0"],aggregations:["avg(_col0)"]
                                        Select Operator [SEL_77] (rows=1108786976 width=108)
                                          Output:["_col0"]
                                          Select Operator [SEL_64] (rows=316788826 width=135)
                                            Output:["_col0","_col1"]
                                            Merge Join Operator [MERGEJOIN_865] (rows=316788826 width=135)
                                              Conds:RS_61._col0=RS_62._col0(Inner),Output:["_col1","_col2"]
                                            <-Map 76 [SIMPLE_EDGE]
                                              SHUFFLE [RS_62]
                                                PartitionCols:_col0
                                                Select Operator [SEL_60] (rows=8116 width=1119)
                                                  Output:["_col0"]
                                                  Filter Operator [FIL_795] (rows=8116 width=1119)
                                                    predicate:(d_year BETWEEN 1998 AND 2000 and d_date_sk is not null)
                                                     Please refer to the previous TableScan [TS_13]
                                            <-Map 89 [SIMPLE_EDGE]
                                              SHUFFLE [RS_61]
                                                PartitionCols:_col0
                                                Select Operator [SEL_57] (rows=287989836 width=135)
                                                  Output:["_col0","_col1","_col2"]
                                                  Filter Operator [FIL_794] (rows=287989836 width=135)
                                                    predicate:cs_sold_date_sk is not null
                                                     Please refer to the previous TableScan [TS_55]
                                  <-Reducer 85 [CONTAINS]
                                    Reduce Output Operator [RS_80]
                                      Group By Operator [GBY_79] (rows=1 width=288)
                                        Output:["_col0"],aggregations:["avg(_col0)"]
                                        Select Operator [SEL_77] (rows=1108786976 width=108)
                                          Output:["_col0"]
                                          Select Operator [SEL_76] (rows=158402938 width=135)
                                            Output:["_col0","_col1"]
                                            Merge Join Operator [MERGEJOIN_866] (rows=158402938 width=135)
                                              Conds:RS_73._col0=RS_74._col0(Inner),Output:["_col1","_col2"]
                                            <-Map 84 [SIMPLE_EDGE]
                                              SHUFFLE [RS_74]
                                                PartitionCols:_col0
                                                Select Operator [SEL_72] (rows=8116 width=1119)
                                                  Output:["_col0"]
                                                  Filter Operator [FIL_797] (rows=8116 width=1119)
                                                    predicate:(d_year BETWEEN 1998 AND 2000 and d_date_sk is not null)
                                                     Please refer to the previous TableScan [TS_25]
                                            <-Map 90 [SIMPLE_EDGE]
                                              SHUFFLE [RS_73]
                                                PartitionCols:_col0
                                                Select Operator [SEL_69] (rows=144002668 width=135)
                                                  Output:["_col0","_col1","_col2"]
                                                  Filter Operator [FIL_796] (rows=144002668 width=135)
                                                    predicate:ws_sold_date_sk is not null
                                                     Please refer to the previous TableScan [TS_67]
                            <-Reducer 29 [CUSTOM_SIMPLE_EDGE]
                              PARTITION_ONLY_SHUFFLE [RS_189]
                                Group By Operator [GBY_185] (rows=696954748 width=88)
                                  Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(VALUE._col0)","count(VALUE._col1)"],keys:KEY._col0, KEY._col1, KEY._col2
                                <-Reducer 28 [SIMPLE_EDGE]
                                  SHUFFLE [RS_184]
                                    PartitionCols:_col0, _col1, _col2
                                    Group By Operator [GBY_183] (rows=1393909496 width=88)
                                      Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(_col3)","count()"],keys:_col0, _col1, _col2
                                      Select Operator [SEL_181] (rows=1393909496 width=88)
                                        Output:["_col0","_col1","_col2","_col3"]
                                        Merge Join Operator [MERGEJOIN_875] (rows=1393909496 width=88)
                                          Conds:RS_177._col1=RS_178._col0(Inner),RS_177._col1=RS_179._col0(Inner),Output:["_col2","_col3","_col8","_col9","_col10"]
                                        <-Map 96 [SIMPLE_EDGE]
                                          SHUFFLE [RS_178]
                                            PartitionCols:_col0
                                            Select Operator [SEL_91] (rows=462000 width=1436)
                                              Output:["_col0","_col1","_col2","_col3"]
                                              Filter Operator [FIL_800] (rows=462000 width=1436)
                                                predicate:i_item_sk is not null
                                                 Please refer to the previous TableScan [TS_89]
                                        <-Reducer 27 [SIMPLE_EDGE]
                                          SHUFFLE [RS_179]
                                            PartitionCols:_col0
                                            Group By Operator [GBY_172] (rows=254100 width=1436)
                                              Output:["_col0"],keys:KEY._col0
                                            <-Reducer 26 [SIMPLE_EDGE]
                                              SHUFFLE [RS_171]
                                                PartitionCols:_col0
                                                Group By Operator [GBY_170] (rows=508200 width=1436)
                                                  Output:["_col0"],keys:_col0
                                                  Merge Join Operator [MERGEJOIN_874] (rows=508200 width=1436)
                                                    Conds:RS_166._col1, _col2, _col3=RS_167._col0, _col1, _col2(Inner),Output:["_col0"]
                                                  <-Map 96 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_166]
                                                      PartitionCols:_col1, _col2, _col3
                                                      Select Operator [SEL_94] (rows=462000 width=1436)
                                                        Output:["_col0","_col1","_col2","_col3"]
                                                        Filter Operator [FIL_801] (rows=462000 width=1436)
                                                          predicate:(i_brand_id is not null and i_class_id is not null and i_category_id is not null and i_item_sk is not null)
                                                           Please refer to the previous TableScan [TS_89]
                                                  <-Reducer 25 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_167]
                                                      PartitionCols:_col0, _col1, _col2
                                                      Select Operator [SEL_165] (rows=1 width=108)
                                                        Output:["_col0","_col1","_col2"]
                                                        Filter Operator [FIL_164] (rows=1 width=108)
                                                          predicate:(_col3 = 3)
                                                          Group By Operator [GBY_163] (rows=304916424 width=108)
                                                            Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                          <-Union 24 [SIMPLE_EDGE]
                                                            <-Reducer 23 [CONTAINS]
                                                              Reduce Output Operator [RS_162]
                                                                PartitionCols:_col0, _col1, _col2
                                                                Group By Operator [GBY_161] (rows=609832849 width=108)
                                                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                  Group By Operator [GBY_114] (rows=348477374 width=88)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                  <-Reducer 22 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_113]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                      Group By Operator [GBY_112] (rows=696954748 width=88)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count(1)"],keys:_col0, _col1, _col2
                                                                        Select Operator [SEL_110] (rows=696954748 width=88)
                                                                          Output:["_col0","_col1","_col2"]
                                                                          Merge Join Operator [MERGEJOIN_869] (rows=696954748 width=88)
                                                                            Conds:RS_107._col1=RS_108._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                          <-Map 96 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_108]
                                                                              PartitionCols:_col0
                                                                              Select Operator [SEL_103] (rows=462000 width=1436)
                                                                                Output:["_col0","_col1","_col2","_col3"]
                                                                                Filter Operator [FIL_804] (rows=462000 width=1436)
                                                                                  predicate:(i_item_sk is not null and i_brand_id is not null and i_class_id is not null and i_category_id is not null)
                                                                                   Please refer to the previous TableScan [TS_89]
                                                                          <-Reducer 21 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_107]
                                                                              PartitionCols:_col1
                                                                              Merge Join Operator [MERGEJOIN_868] (rows=633595212 width=88)
                                                                                Conds:RS_104._col0=RS_105._col0(Inner),Output:["_col1"]
                                                                              <-Map 17 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_105]
                                                                                  PartitionCols:_col0
                                                                                  Select Operator [SEL_100] (rows=8116 width=1119)
                                                                                    Output:["_col0"]
                                                                                    Filter Operator [FIL_803] (rows=8116 width=1119)
                                                                                      predicate:(d_year BETWEEN 1999 AND 2001 and d_date_sk is not null)
                                                                                       Please refer to the previous TableScan [TS_3]
                                                                              <-Map 97 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_104]
                                                                                  PartitionCols:_col0
                                                                                  Select Operator [SEL_97] (rows=575995635 width=88)
                                                                                    Output:["_col0","_col1"]
                                                                                    Filter Operator [FIL_802] (rows=575995635 width=88)
                                                                                      predicate:(ss_item_sk is not null and ss_sold_date_sk is not null)
                                                                                       Please refer to the previous TableScan [TS_95]
                                                            <-Reducer 32 [CONTAINS]
                                                              Reduce Output Operator [RS_162]
                                                                PartitionCols:_col0, _col1, _col2
                                                                Group By Operator [GBY_161] (rows=609832849 width=108)
                                                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                  Group By Operator [GBY_135] (rows=174233858 width=135)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                  <-Reducer 31 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_134]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                      Group By Operator [GBY_133] (rows=348467716 width=135)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count(1)"],keys:_col0, _col1, _col2
                                                                        Select Operator [SEL_131] (rows=348467716 width=135)
                                                                          Output:["_col0","_col1","_col2"]
                                                                          Merge Join Operator [MERGEJOIN_871] (rows=348467716 width=135)
                                                                            Conds:RS_128._col1=RS_129._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                          <-Map 96 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_129]
                                                                              PartitionCols:_col0
                                                                              Select Operator [SEL_124] (rows=462000 width=1436)
                                                                                Output:["_col0","_col1","_col2","_col3"]
                                                                                Filter Operator [FIL_807] (rows=462000 width=1436)
                                                                                  predicate:(i_item_sk is not null and i_brand_id is not null and i_class_id is not null and i_category_id is not null)
                                                                                   Please refer to the previous TableScan [TS_89]
                                                                          <-Reducer 30 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_128]
                                                                              PartitionCols:_col1
                                                                              Merge Join Operator [MERGEJOIN_870] (rows=316788826 width=135)
                                                                                Conds:RS_125._col0=RS_126._col0(Inner),Output:["_col1"]
                                                                              <-Map 17 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_126]
                                                                                  PartitionCols:_col0
                                                                                  Select Operator [SEL_121] (rows=8116 width=1119)
                                                                                    Output:["_col0"]
                                                                                    Filter Operator [FIL_806] (rows=8116 width=1119)
                                                                                      predicate:(d_year BETWEEN 1999 AND 2001 and d_date_sk is not null)
                                                                                       Please refer to the previous TableScan [TS_3]
                                                                              <-Map 98 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_125]
                                                                                  PartitionCols:_col0
                                                                                  Select Operator [SEL_118] (rows=287989836 width=135)
                                                                                    Output:["_col0","_col1"]
                                                                                    Filter Operator [FIL_805] (rows=287989836 width=135)
                                                                                      predicate:(cs_item_sk is not null and cs_sold_date_sk is not null)
                                                                                       Please refer to the previous TableScan [TS_116]
                                                            <-Reducer 35 [CONTAINS]
                                                              Reduce Output Operator [RS_162]
                                                                PartitionCols:_col0, _col1, _col2
                                                                Group By Operator [GBY_161] (rows=609832849 width=108)
                                                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                  Group By Operator [GBY_157] (rows=87121617 width=135)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                  <-Reducer 34 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_156]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                      Group By Operator [GBY_155] (rows=174243235 width=135)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count(1)"],keys:_col0, _col1, _col2
                                                                        Select Operator [SEL_153] (rows=174243235 width=135)
                                                                          Output:["_col0","_col1","_col2"]
                                                                          Merge Join Operator [MERGEJOIN_873] (rows=174243235 width=135)
                                                                            Conds:RS_150._col1=RS_151._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                          <-Map 96 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_151]
                                                                              PartitionCols:_col0
                                                                              Select Operator [SEL_146] (rows=462000 width=1436)
                                                                                Output:["_col0","_col1","_col2","_col3"]
                                                                                Filter Operator [FIL_810] (rows=462000 width=1436)
                                                                                  predicate:(i_item_sk is not null and i_brand_id is not null and i_class_id is not null and i_category_id is not null)
                                                                                   Please refer to the previous TableScan [TS_89]
                                                                          <-Reducer 33 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_150]
                                                                              PartitionCols:_col1
                                                                              Merge Join Operator [MERGEJOIN_872] (rows=158402938 width=135)
                                                                                Conds:RS_147._col0=RS_148._col0(Inner),Output:["_col1"]
                                                                              <-Map 17 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_148]
                                                                                  PartitionCols:_col0
                                                                                  Select Operator [SEL_143] (rows=8116 width=1119)
                                                                                    Output:["_col0"]
                                                                                    Filter Operator [FIL_809] (rows=8116 width=1119)
                                                                                      predicate:(d_year BETWEEN 1999 AND 2001 and d_date_sk is not null)
                                                                                       Please refer to the previous TableScan [TS_3]
                                                                              <-Map 99 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_147]
                                                                                  PartitionCols:_col0
                                                                                  Select Operator [SEL_140] (rows=144002668 width=135)
                                                                                    Output:["_col0","_col1"]
                                                                                    Filter Operator [FIL_808] (rows=144002668 width=135)
                                                                                      predicate:(ws_item_sk is not null and ws_sold_date_sk is not null)
                                                                                       Please refer to the previous TableScan [TS_138]
                                        <-Reducer 92 [SIMPLE_EDGE]
                                          SHUFFLE [RS_177]
                                            PartitionCols:_col1
                                            Merge Join Operator [MERGEJOIN_867] (rows=633595212 width=88)
                                              Conds:RS_174._col0=RS_175._col0(Inner),Output:["_col1","_col2","_col3"]
                                            <-Map 93 [SIMPLE_EDGE]
                                              SHUFFLE [RS_175]
                                                PartitionCols:_col0
                                                Select Operator [SEL_88] (rows=18262 width=1119)
                                                  Output:["_col0"]
                                                  Filter Operator [FIL_799] (rows=18262 width=1119)
                                                    predicate:((d_year = 2000) and (d_moy = 11) and d_date_sk is not null)
                                                     Please refer to the previous TableScan [TS_86]
                                            <-Map 91 [SIMPLE_EDGE]
                                              SHUFFLE [RS_174]
                                                PartitionCols:_col0
                                                Select Operator [SEL_85] (rows=575995635 width=88)
                                                  Output:["_col0","_col1","_col2","_col3"]
                                                  Filter Operator [FIL_798] (rows=575995635 width=88)
                                                    predicate:(ss_item_sk is not null and ss_sold_date_sk is not null)
                                                    TableScan [TS_83] (rows=575995635 width=88)
                                                      default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_item_sk","ss_quantity","ss_list_price"]
                            <-Reducer 4 [CUSTOM_SIMPLE_EDGE]
                              PARTITION_ONLY_SHUFFLE [RS_187]
                                Select Operator [SEL_44] (rows=1 width=8)
                                  Filter Operator [FIL_43] (rows=1 width=8)
                                    predicate:(sq_count_check(_col0) <= 1)
                                    Group By Operator [GBY_41] (rows=1 width=8)
                                      Output:["_col0"],aggregations:["count()"]
                                      Select Operator [SEL_36] (rows=1 width=8)
                                        Group By Operator [GBY_35] (rows=1 width=8)
                                          Output:["_col0"],aggregations:["count(VALUE._col0)"]
                                        <-Union 3 [CUSTOM_SIMPLE_EDGE]
                                          <-Reducer 2 [CONTAINS]
                                            Reduce Output Operator [RS_34]
                                              Group By Operator [GBY_33] (rows=1 width=8)
                                                Output:["_col0"],aggregations:["count(_col0)"]
                                                Select Operator [SEL_32] (rows=1108786976 width=108)
                                                  Output:["_col0"]
                                                  Select Operator [SEL_9] (rows=633595212 width=88)
                                                    Output:["_col0"]
                                                    Merge Join Operator [MERGEJOIN_861] (rows=633595212 width=88)
                                                      Conds:RS_6._col0=RS_7._col0(Inner),Output:["_col1"]
                                                    <-Map 17 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_7]
                                                        PartitionCols:_col0
                                                        Select Operator [SEL_5] (rows=8116 width=1119)
                                                          Output:["_col0"]
                                                          Filter Operator [FIL_787] (rows=8116 width=1119)
                                                            predicate:(d_year BETWEEN 1999 AND 2001 and d_date_sk is not null)
                                                             Please refer to the previous TableScan [TS_3]
                                                    <-Map 1 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_6]
                                                        PartitionCols:_col0
                                                        Select Operator [SEL_2] (rows=575995635 width=88)
                                                          Output:["_col0","_col1"]
                                                          Filter Operator [FIL_786] (rows=575995635 width=88)
                                                            predicate:ss_sold_date_sk is not null
                                                             Please refer to the previous TableScan [TS_0]
                                          <-Reducer 73 [CONTAINS]
                                            Reduce Output Operator [RS_34]
                                              Group By Operator [GBY_33] (rows=1 width=8)
                                                Output:["_col0"],aggregations:["count(_col0)"]
                                                Select Operator [SEL_32] (rows=1108786976 width=108)
                                                  Output:["_col0"]
                                                  Select Operator [SEL_19] (rows=316788826 width=135)
                                                    Output:["_col0"]
                                                    Merge Join Operator [MERGEJOIN_862] (rows=316788826 width=135)
                                                      Conds:RS_16._col0=RS_17._col0(Inner),Output:["_col1"]
                                                    <-Map 76 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_17]
                                                        PartitionCols:_col0
                                                        Select Operator [SEL_15] (rows=8116 width=1119)
                                                          Output:["_col0"]
                                                          Filter Operator [FIL_789] (rows=8116 width=1119)
                                                            predicate:(d_year BETWEEN 1998 AND 2000 and d_date_sk is not null)
                                                             Please refer to the previous TableScan [TS_13]
                                                    <-Map 72 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_16]
                                                        PartitionCols:_col0
                                                        Select Operator [SEL_12] (rows=287989836 width=135)
                                                          Output:["_col0","_col1"]
                                                          Filter Operator [FIL_788] (rows=287989836 width=135)
                                                            predicate:cs_sold_date_sk is not null
                                                             Please refer to the previous TableScan [TS_10]
                                          <-Reducer 81 [CONTAINS]
                                            Reduce Output Operator [RS_34]
                                              Group By Operator [GBY_33] (rows=1 width=8)
                                                Output:["_col0"],aggregations:["count(_col0)"]
                                                Select Operator [SEL_32] (rows=1108786976 width=108)
                                                  Output:["_col0"]
                                                  Select Operator [SEL_31] (rows=158402938 width=135)
                                                    Output:["_col0"]
                                                    Merge Join Operator [MERGEJOIN_863] (rows=158402938 width=135)
                                                      Conds:RS_28._col0=RS_29._col0(Inner),Output:["_col1"]
                                                    <-Map 84 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_29]
                                                        PartitionCols:_col0
                                                        Select Operator [SEL_27] (rows=8116 width=1119)
                                                          Output:["_col0"]
                                                          Filter Operator [FIL_791] (rows=8116 width=1119)
                                                            predicate:(d_year BETWEEN 1998 AND 2000 and d_date_sk is not null)
                                                             Please refer to the previous TableScan [TS_25]
                                                    <-Map 80 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_28]
                                                        PartitionCols:_col0
                                                        Select Operator [SEL_24] (rows=144002668 width=135)
                                                          Output:["_col0","_col1"]
                                                          Filter Operator [FIL_790] (rows=144002668 width=135)
                                                            predicate:ws_sold_date_sk is not null
                                                             Please refer to the previous TableScan [TS_22]

