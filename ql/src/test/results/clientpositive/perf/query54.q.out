Warning: Shuffle Join MERGEJOIN[189][tables = [$hdt$_4, $hdt$_5]] in Stage 'Reducer 25' is a cross product
Warning: Shuffle Join MERGEJOIN[191][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 6' is a cross product
Warning: Shuffle Join MERGEJOIN[192][tables = [$hdt$_0, $hdt$_1, $hdt$_2]] in Stage 'Reducer 7' is a cross product
Warning: Shuffle Join MERGEJOIN[193][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 8' is a cross product
PREHOOK: query: explain
with my_customers as (
 select distinct c_customer_sk
        , c_current_addr_sk
 from   
        ( select cs_sold_date_sk sold_date_sk,
                 cs_bill_customer_sk customer_sk,
                 cs_item_sk item_sk
          from   catalog_sales
          union all
          select ws_sold_date_sk sold_date_sk,
                 ws_bill_customer_sk customer_sk,
                 ws_item_sk item_sk
          from   web_sales
         ) cs_or_ws_sales,
         item,
         date_dim,
         customer
 where   sold_date_sk = d_date_sk
         and item_sk = i_item_sk
         and i_category = 'Jewelry'
         and i_class = 'consignment'
         and c_customer_sk = cs_or_ws_sales.customer_sk
         and d_moy = 3
         and d_year = 1999
 )
 , my_revenue as (
 select c_customer_sk,
        sum(ss_ext_sales_price) as revenue
 from   my_customers,
        store_sales,
        customer_address,
        store,
        date_dim
 where  c_current_addr_sk = ca_address_sk
        and ca_county = s_county
        and ca_state = s_state
        and ss_sold_date_sk = d_date_sk
        and c_customer_sk = ss_customer_sk
        and d_month_seq between (select distinct d_month_seq+1
                                 from   date_dim where d_year = 1999 and d_moy = 3)
                           and  (select distinct d_month_seq+3
                                 from   date_dim where d_year = 1999 and d_moy = 3)
 group by c_customer_sk
 )
 , segments as
 (select cast((revenue/50) as int) as segment
  from   my_revenue
 )
  select  segment, count(*) as num_customers, segment*50 as segment_base
 from segments
 group by segment
 order by segment, num_customers
 limit 100
PREHOOK: type: QUERY
POSTHOOK: query: explain
with my_customers as (
 select distinct c_customer_sk
        , c_current_addr_sk
 from   
        ( select cs_sold_date_sk sold_date_sk,
                 cs_bill_customer_sk customer_sk,
                 cs_item_sk item_sk
          from   catalog_sales
          union all
          select ws_sold_date_sk sold_date_sk,
                 ws_bill_customer_sk customer_sk,
                 ws_item_sk item_sk
          from   web_sales
         ) cs_or_ws_sales,
         item,
         date_dim,
         customer
 where   sold_date_sk = d_date_sk
         and item_sk = i_item_sk
         and i_category = 'Jewelry'
         and i_class = 'consignment'
         and c_customer_sk = cs_or_ws_sales.customer_sk
         and d_moy = 3
         and d_year = 1999
 )
 , my_revenue as (
 select c_customer_sk,
        sum(ss_ext_sales_price) as revenue
 from   my_customers,
        store_sales,
        customer_address,
        store,
        date_dim
 where  c_current_addr_sk = ca_address_sk
        and ca_county = s_county
        and ca_state = s_state
        and ss_sold_date_sk = d_date_sk
        and c_customer_sk = ss_customer_sk
        and d_month_seq between (select distinct d_month_seq+1
                                 from   date_dim where d_year = 1999 and d_moy = 3)
                           and  (select distinct d_month_seq+3
                                 from   date_dim where d_year = 1999 and d_moy = 3)
 group by c_customer_sk
 )
 , segments as
 (select cast((revenue/50) as int) as segment
  from   my_revenue
 )
  select  segment, count(*) as num_customers, segment*50 as segment_base
 from segments
 group by segment
 order by segment, num_customers
 limit 100
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Map 13 <- Union 14 (CONTAINS)
Map 19 <- Union 14 (CONTAINS)
Reducer 10 <- Reducer 9 (SIMPLE_EDGE)
Reducer 11 <- Reducer 10 (SIMPLE_EDGE)
Reducer 15 <- Map 20 (SIMPLE_EDGE), Union 14 (SIMPLE_EDGE)
Reducer 16 <- Map 21 (SIMPLE_EDGE), Reducer 15 (SIMPLE_EDGE)
Reducer 17 <- Map 22 (SIMPLE_EDGE), Reducer 16 (SIMPLE_EDGE)
Reducer 18 <- Reducer 17 (SIMPLE_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 12 (SIMPLE_EDGE)
Reducer 25 <- Map 24 (CUSTOM_SIMPLE_EDGE), Reducer 28 (CUSTOM_SIMPLE_EDGE)
Reducer 27 <- Map 26 (SIMPLE_EDGE)
Reducer 28 <- Reducer 27 (CUSTOM_SIMPLE_EDGE)
Reducer 29 <- Map 26 (SIMPLE_EDGE)
Reducer 3 <- Reducer 18 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 30 <- Map 26 (SIMPLE_EDGE)
Reducer 31 <- Reducer 30 (CUSTOM_SIMPLE_EDGE)
Reducer 32 <- Map 26 (SIMPLE_EDGE)
Reducer 4 <- Map 23 (SIMPLE_EDGE), Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Reducer 25 (SIMPLE_EDGE), Reducer 4 (SIMPLE_EDGE)
Reducer 6 <- Reducer 29 (CUSTOM_SIMPLE_EDGE), Reducer 5 (CUSTOM_SIMPLE_EDGE)
Reducer 7 <- Reducer 31 (CUSTOM_SIMPLE_EDGE), Reducer 6 (CUSTOM_SIMPLE_EDGE)
Reducer 8 <- Reducer 32 (CUSTOM_SIMPLE_EDGE), Reducer 7 (CUSTOM_SIMPLE_EDGE)
Reducer 9 <- Reducer 8 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 11
      File Output Operator [FS_130]
        Limit [LIM_129] (rows=100 width=158)
          Number of rows:100
          Select Operator [SEL_128] (rows=1614130953450400 width=158)
            Output:["_col0","_col1","_col2"]
          <-Reducer 10 [SIMPLE_EDGE]
            SHUFFLE [RS_127]
              Select Operator [SEL_126] (rows=1614130953450400 width=158)
                Output:["_col0","_col1","_col2"]
                Group By Operator [GBY_125] (rows=1614130953450400 width=158)
                  Output:["_col0","_col1"],aggregations:["count(VALUE._col0)"],keys:KEY._col0
                <-Reducer 9 [SIMPLE_EDGE]
                  SHUFFLE [RS_124]
                    PartitionCols:_col0
                    Group By Operator [GBY_123] (rows=3228261906900801 width=158)
                      Output:["_col0","_col1"],aggregations:["count()"],keys:_col0
                      Select Operator [SEL_121] (rows=3228261906900801 width=158)
                        Output:["_col0"]
                        Group By Operator [GBY_120] (rows=3228261906900801 width=158)
                          Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0
                        <-Reducer 8 [SIMPLE_EDGE]
                          SHUFFLE [RS_119]
                            PartitionCols:_col0
                            Group By Operator [GBY_118] (rows=6456523813801603 width=158)
                              Output:["_col0","_col1"],aggregations:["sum(_col1)"],keys:_col0
                              Select Operator [SEL_117] (rows=6456523813801603 width=158)
                                Output:["_col0","_col1"]
                                Filter Operator [FIL_116] (rows=6456523813801603 width=158)
                                  predicate:_col2 BETWEEN _col3 AND _col4
                                  Merge Join Operator [MERGEJOIN_193] (rows=58108714324214428 width=158)
                                    Conds:(Left Outer),Output:["_col0","_col1","_col2","_col3","_col4"]
                                  <-Reducer 32 [CUSTOM_SIMPLE_EDGE]
                                    PARTITION_ONLY_SHUFFLE [RS_114]
                                      Group By Operator [GBY_111] (rows=9131 width=1119)
                                        Output:["_col0"],keys:KEY._col0
                                      <-Map 26 [SIMPLE_EDGE]
                                        SHUFFLE [RS_110]
                                          PartitionCols:_col0
                                          Group By Operator [GBY_109] (rows=18262 width=1119)
                                            Output:["_col0"],keys:_col0
                                            Select Operator [SEL_107] (rows=18262 width=1119)
                                              Output:["_col0"]
                                              Filter Operator [FIL_182] (rows=18262 width=1119)
                                                predicate:((d_year = 1999) and (d_moy = 3))
                                                TableScan [TS_43] (rows=73049 width=1119)
                                                  default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_month_seq","d_year","d_moy"]
                                  <-Reducer 7 [CUSTOM_SIMPLE_EDGE]
                                    PARTITION_ONLY_SHUFFLE [RS_113]
                                      Merge Join Operator [MERGEJOIN_192] (rows=6363893803988 width=1217)
                                        Conds:(Inner),Output:["_col0","_col1","_col2","_col3"]
                                      <-Reducer 31 [CUSTOM_SIMPLE_EDGE]
                                        PARTITION_ONLY_SHUFFLE [RS_102]
                                          Select Operator [SEL_97] (rows=1 width=8)
                                            Filter Operator [FIL_96] (rows=1 width=8)
                                              predicate:(sq_count_check(_col0) <= 1)
                                              Group By Operator [GBY_94] (rows=1 width=8)
                                                Output:["_col0"],aggregations:["count(VALUE._col0)"]
                                              <-Reducer 30 [CUSTOM_SIMPLE_EDGE]
                                                PARTITION_ONLY_SHUFFLE [RS_93]
                                                  Group By Operator [GBY_92] (rows=1 width=8)
                                                    Output:["_col0"],aggregations:["count()"]
                                                    Select Operator [SEL_90] (rows=9131 width=1119)
                                                      Group By Operator [GBY_89] (rows=9131 width=1119)
                                                        Output:["_col0"],keys:KEY._col0
                                                      <-Map 26 [SIMPLE_EDGE]
                                                        SHUFFLE [RS_88]
                                                          PartitionCols:_col0
                                                          Group By Operator [GBY_87] (rows=18262 width=1119)
                                                            Output:["_col0"],keys:_col0
                                                            Select Operator [SEL_85] (rows=18262 width=1119)
                                                              Output:["_col0"]
                                                              Filter Operator [FIL_181] (rows=18262 width=1119)
                                                                predicate:((d_year = 1999) and (d_moy = 3))
                                                                 Please refer to the previous TableScan [TS_43]
                                      <-Reducer 6 [CUSTOM_SIMPLE_EDGE]
                                        PARTITION_ONLY_SHUFFLE [RS_101]
                                          Merge Join Operator [MERGEJOIN_191] (rows=6363893803988 width=1208)
                                            Conds:(Left Outer),Output:["_col0","_col1","_col2","_col3"]
                                          <-Reducer 29 [CUSTOM_SIMPLE_EDGE]
                                            PARTITION_ONLY_SHUFFLE [RS_99]
                                              Group By Operator [GBY_81] (rows=9131 width=1119)
                                                Output:["_col0"],keys:KEY._col0
                                              <-Map 26 [SIMPLE_EDGE]
                                                SHUFFLE [RS_80]
                                                  PartitionCols:_col0
                                                  Group By Operator [GBY_79] (rows=18262 width=1119)
                                                    Output:["_col0"],keys:_col0
                                                    Select Operator [SEL_77] (rows=18262 width=1119)
                                                      Output:["_col0"]
                                                      Filter Operator [FIL_180] (rows=18262 width=1119)
                                                        predicate:((d_year = 1999) and (d_moy = 3))
                                                         Please refer to the previous TableScan [TS_43]
                                          <-Reducer 5 [CUSTOM_SIMPLE_EDGE]
                                            PARTITION_ONLY_SHUFFLE [RS_98]
                                              Select Operator [SEL_74] (rows=696954748 width=88)
                                                Output:["_col0","_col1","_col2"]
                                                Merge Join Operator [MERGEJOIN_190] (rows=696954748 width=88)
                                                  Conds:RS_71._col7=RS_72._col0(Inner),Output:["_col5","_col9","_col11"]
                                                <-Reducer 25 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_72]
                                                    PartitionCols:_col0
                                                    Merge Join Operator [MERGEJOIN_189] (rows=73049 width=1128)
                                                      Conds:(Inner),Output:["_col0","_col1"]
                                                    <-Map 24 [CUSTOM_SIMPLE_EDGE]
                                                      PARTITION_ONLY_SHUFFLE [RS_58]
                                                        Select Operator [SEL_42] (rows=73049 width=1119)
                                                          Output:["_col0","_col1"]
                                                          Filter Operator [FIL_178] (rows=73049 width=1119)
                                                            predicate:d_date_sk is not null
                                                            TableScan [TS_40] (rows=73049 width=1119)
                                                              default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_month_seq"]
                                                    <-Reducer 28 [CUSTOM_SIMPLE_EDGE]
                                                      PARTITION_ONLY_SHUFFLE [RS_59]
                                                        Select Operator [SEL_57] (rows=1 width=8)
                                                          Filter Operator [FIL_56] (rows=1 width=8)
                                                            predicate:(sq_count_check(_col0) <= 1)
                                                            Group By Operator [GBY_54] (rows=1 width=8)
                                                              Output:["_col0"],aggregations:["count(VALUE._col0)"]
                                                            <-Reducer 27 [CUSTOM_SIMPLE_EDGE]
                                                              PARTITION_ONLY_SHUFFLE [RS_53]
                                                                Group By Operator [GBY_52] (rows=1 width=8)
                                                                  Output:["_col0"],aggregations:["count()"]
                                                                  Select Operator [SEL_50] (rows=9131 width=1119)
                                                                    Group By Operator [GBY_49] (rows=9131 width=1119)
                                                                      Output:["_col0"],keys:KEY._col0
                                                                    <-Map 26 [SIMPLE_EDGE]
                                                                      SHUFFLE [RS_48]
                                                                        PartitionCols:_col0
                                                                        Group By Operator [GBY_47] (rows=18262 width=1119)
                                                                          Output:["_col0"],keys:_col0
                                                                          Select Operator [SEL_45] (rows=18262 width=1119)
                                                                            Output:["_col0"]
                                                                            Filter Operator [FIL_179] (rows=18262 width=1119)
                                                                              predicate:((d_year = 1999) and (d_moy = 3))
                                                                               Please refer to the previous TableScan [TS_43]
                                                <-Reducer 4 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_71]
                                                    PartitionCols:_col7
                                                    Merge Join Operator [MERGEJOIN_188] (rows=633595212 width=88)
                                                      Conds:RS_68._col5=RS_69._col1(Inner),Output:["_col5","_col7","_col9"]
                                                    <-Map 23 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_69]
                                                        PartitionCols:_col1
                                                        Select Operator [SEL_39] (rows=575995635 width=88)
                                                          Output:["_col0","_col1","_col2"]
                                                          Filter Operator [FIL_177] (rows=575995635 width=88)
                                                            predicate:(ss_customer_sk is not null and ss_sold_date_sk is not null)
                                                            TableScan [TS_37] (rows=575995635 width=88)
                                                              default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_customer_sk","ss_ext_sales_price"]
                                                    <-Reducer 3 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_68]
                                                        PartitionCols:_col5
                                                        Merge Join Operator [MERGEJOIN_187] (rows=316240138 width=135)
                                                          Conds:RS_65._col0=RS_66._col1(Inner),Output:["_col5"]
                                                        <-Reducer 18 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_66]
                                                            PartitionCols:_col1
                                                            Select Operator [SEL_36] (rows=287491029 width=135)
                                                              Output:["_col0","_col1"]
                                                              Group By Operator [GBY_35] (rows=287491029 width=135)
                                                                Output:["_col0","_col1"],keys:KEY._col0, KEY._col1
                                                              <-Reducer 17 [SIMPLE_EDGE]
                                                                SHUFFLE [RS_34]
                                                                  PartitionCols:_col0, _col1
                                                                  Group By Operator [GBY_33] (rows=574982058 width=135)
                                                                    Output:["_col0","_col1"],keys:_col10, _col9
                                                                    Merge Join Operator [MERGEJOIN_186] (rows=574982058 width=135)
                                                                      Conds:RS_29._col1=RS_30._col0(Inner),Output:["_col9","_col10"]
                                                                    <-Map 22 [SIMPLE_EDGE]
                                                                      SHUFFLE [RS_30]
                                                                        PartitionCols:_col0
                                                                        Select Operator [SEL_22] (rows=80000000 width=860)
                                                                          Output:["_col0","_col1"]
                                                                          Filter Operator [FIL_176] (rows=80000000 width=860)
                                                                            predicate:(c_customer_sk is not null and c_current_addr_sk is not null)
                                                                            TableScan [TS_20] (rows=80000000 width=860)
                                                                              default@customer,customer,Tbl:COMPLETE,Col:NONE,Output:["c_customer_sk","c_current_addr_sk"]
                                                                    <-Reducer 16 [SIMPLE_EDGE]
                                                                      SHUFFLE [RS_29]
                                                                        PartitionCols:_col1
                                                                        Merge Join Operator [MERGEJOIN_185] (rows=522710951 width=135)
                                                                          Conds:RS_26._col2=RS_27._col0(Inner),Output:["_col1"]
                                                                        <-Map 21 [SIMPLE_EDGE]
                                                                          SHUFFLE [RS_27]
                                                                            PartitionCols:_col0
                                                                            Select Operator [SEL_19] (rows=115500 width=1436)
                                                                              Output:["_col0"]
                                                                              Filter Operator [FIL_175] (rows=115500 width=1436)
                                                                                predicate:((i_category = 'Jewelry') and (i_class = 'consignment') and i_item_sk is not null)
                                                                                TableScan [TS_17] (rows=462000 width=1436)
                                                                                  default@item,item,Tbl:COMPLETE,Col:NONE,Output:["i_item_sk","i_class","i_category"]
                                                                        <-Reducer 15 [SIMPLE_EDGE]
                                                                          SHUFFLE [RS_26]
                                                                            PartitionCols:_col2
                                                                            Merge Join Operator [MERGEJOIN_184] (rows=475191764 width=135)
                                                                              Conds:Union 14._col0=RS_24._col0(Inner),Output:["_col1","_col2"]
                                                                            <-Map 20 [SIMPLE_EDGE]
                                                                              SHUFFLE [RS_24]
                                                                                PartitionCols:_col0
                                                                                Select Operator [SEL_16] (rows=18262 width=1119)
                                                                                  Output:["_col0"]
                                                                                  Filter Operator [FIL_174] (rows=18262 width=1119)
                                                                                    predicate:((d_moy = 3) and (d_year = 1999) and d_date_sk is not null)
                                                                                    TableScan [TS_14] (rows=73049 width=1119)
                                                                                      default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year","d_moy"]
                                                                            <-Union 14 [SIMPLE_EDGE]
                                                                              <-Map 13 [CONTAINS]
                                                                                Reduce Output Operator [RS_23]
                                                                                  PartitionCols:_col0
                                                                                  Select Operator [SEL_8] (rows=287989836 width=135)
                                                                                    Output:["_col0","_col1","_col2"]
                                                                                    Filter Operator [FIL_172] (rows=287989836 width=135)
                                                                                      predicate:(cs_item_sk is not null and cs_sold_date_sk is not null and cs_bill_customer_sk is not null)
                                                                                      TableScan [TS_6] (rows=287989836 width=135)
                                                                                        Output:["cs_sold_date_sk","cs_bill_customer_sk","cs_item_sk"]
                                                                              <-Map 19 [CONTAINS]
                                                                                Reduce Output Operator [RS_23]
                                                                                  PartitionCols:_col0
                                                                                  Select Operator [SEL_11] (rows=144002668 width=135)
                                                                                    Output:["_col0","_col1","_col2"]
                                                                                    Filter Operator [FIL_173] (rows=144002668 width=135)
                                                                                      predicate:(ws_item_sk is not null and ws_sold_date_sk is not null and ws_bill_customer_sk is not null)
                                                                                      TableScan [TS_9] (rows=144002668 width=135)
                                                                                        Output:["ws_sold_date_sk","ws_item_sk","ws_bill_customer_sk"]
                                                        <-Reducer 2 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_65]
                                                            PartitionCols:_col0
                                                            Merge Join Operator [MERGEJOIN_183] (rows=44000000 width=1014)
                                                              Conds:RS_62._col1, _col2=RS_63._col0, _col1(Inner),Output:["_col0"]
                                                            <-Map 1 [SIMPLE_EDGE]
                                                              SHUFFLE [RS_62]
                                                                PartitionCols:_col1, _col2
                                                                Select Operator [SEL_2] (rows=40000000 width=1014)
                                                                  Output:["_col0","_col1","_col2"]
                                                                  Filter Operator [FIL_170] (rows=40000000 width=1014)
                                                                    predicate:(ca_address_sk is not null and ca_county is not null and ca_state is not null)
                                                                    TableScan [TS_0] (rows=40000000 width=1014)
                                                                      default@customer_address,customer_address,Tbl:COMPLETE,Col:NONE,Output:["ca_address_sk","ca_county","ca_state"]
                                                            <-Map 12 [SIMPLE_EDGE]
                                                              SHUFFLE [RS_63]
                                                                PartitionCols:_col0, _col1
                                                                Select Operator [SEL_5] (rows=1704 width=1910)
                                                                  Output:["_col0","_col1"]
                                                                  Filter Operator [FIL_171] (rows=1704 width=1910)
                                                                    predicate:(s_county is not null and s_state is not null)
                                                                    TableScan [TS_3] (rows=1704 width=1910)
                                                                      default@store,store,Tbl:COMPLETE,Col:NONE,Output:["s_county","s_state"]

