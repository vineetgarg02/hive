Warning: Shuffle Join MERGEJOIN[376][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 27' is a cross product
Warning: Shuffle Join MERGEJOIN[377][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 28' is a cross product
Warning: Shuffle Join MERGEJOIN[373][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 23' is a cross product
Warning: Shuffle Join MERGEJOIN[374][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 24' is a cross product
PREHOOK: query: explain
with frequent_ss_items as 
 (select substr(i_item_desc,1,30) itemdesc,i_item_sk item_sk,d_date solddate,count(*) cnt
  from store_sales
      ,date_dim 
      ,item
  where ss_sold_date_sk = d_date_sk
    and ss_item_sk = i_item_sk 
    and d_year in (1999,1999+1,1999+2,1999+3)
  group by substr(i_item_desc,1,30),i_item_sk,d_date
  having count(*) >4),
 max_store_sales as
 (select max(csales) tpcds_cmax 
  from (select c_customer_sk,sum(ss_quantity*ss_sales_price) csales
        from store_sales
            ,customer
            ,date_dim 
        where ss_customer_sk = c_customer_sk
         and ss_sold_date_sk = d_date_sk
         and d_year in (1999,1999+1,1999+2,1999+3) 
        group by c_customer_sk) x),
 best_ss_customer as
 (select c_customer_sk,sum(ss_quantity*ss_sales_price) ssales
  from store_sales
      ,customer
  where ss_customer_sk = c_customer_sk
  group by c_customer_sk
  having sum(ss_quantity*ss_sales_price) > (95/100.0) * (select
  *
from
 max_store_sales))
  select  sum(sales)
 from ((select cs_quantity*cs_list_price sales
       from catalog_sales
           ,date_dim 
       where d_year = 1999 
         and d_moy = 1 
         and cs_sold_date_sk = d_date_sk 
         and cs_item_sk in (select item_sk from frequent_ss_items)
         and cs_bill_customer_sk in (select c_customer_sk from best_ss_customer))
      union all
      (select ws_quantity*ws_list_price sales
       from web_sales 
           ,date_dim 
       where d_year = 1999 
         and d_moy = 1 
         and ws_sold_date_sk = d_date_sk 
         and ws_item_sk in (select item_sk from frequent_ss_items)
         and ws_bill_customer_sk in (select c_customer_sk from best_ss_customer))) y
 limit 100
PREHOOK: type: QUERY
POSTHOOK: query: explain
with frequent_ss_items as 
 (select substr(i_item_desc,1,30) itemdesc,i_item_sk item_sk,d_date solddate,count(*) cnt
  from store_sales
      ,date_dim 
      ,item
  where ss_sold_date_sk = d_date_sk
    and ss_item_sk = i_item_sk 
    and d_year in (1999,1999+1,1999+2,1999+3)
  group by substr(i_item_desc,1,30),i_item_sk,d_date
  having count(*) >4),
 max_store_sales as
 (select max(csales) tpcds_cmax 
  from (select c_customer_sk,sum(ss_quantity*ss_sales_price) csales
        from store_sales
            ,customer
            ,date_dim 
        where ss_customer_sk = c_customer_sk
         and ss_sold_date_sk = d_date_sk
         and d_year in (1999,1999+1,1999+2,1999+3) 
        group by c_customer_sk) x),
 best_ss_customer as
 (select c_customer_sk,sum(ss_quantity*ss_sales_price) ssales
  from store_sales
      ,customer
  where ss_customer_sk = c_customer_sk
  group by c_customer_sk
  having sum(ss_quantity*ss_sales_price) > (95/100.0) * (select
  *
from
 max_store_sales))
  select  sum(sales)
 from ((select cs_quantity*cs_list_price sales
       from catalog_sales
           ,date_dim 
       where d_year = 1999 
         and d_moy = 1 
         and cs_sold_date_sk = d_date_sk 
         and cs_item_sk in (select item_sk from frequent_ss_items)
         and cs_bill_customer_sk in (select c_customer_sk from best_ss_customer))
      union all
      (select ws_quantity*ws_list_price sales
       from web_sales 
           ,date_dim 
       where d_year = 1999 
         and d_moy = 1 
         and ws_sold_date_sk = d_date_sk 
         and ws_item_sk in (select item_sk from frequent_ss_items)
         and ws_bill_customer_sk in (select c_customer_sk from best_ss_customer))) y
 limit 100
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 10 <- Reducer 28 (SIMPLE_EDGE), Reducer 9 (SIMPLE_EDGE), Union 5 (CONTAINS)
Reducer 12 <- Map 11 (SIMPLE_EDGE), Map 18 (SIMPLE_EDGE)
Reducer 13 <- Map 19 (SIMPLE_EDGE), Reducer 12 (SIMPLE_EDGE)
Reducer 14 <- Reducer 13 (SIMPLE_EDGE)
Reducer 15 <- Map 11 (SIMPLE_EDGE), Map 18 (SIMPLE_EDGE)
Reducer 16 <- Map 19 (SIMPLE_EDGE), Reducer 15 (SIMPLE_EDGE)
Reducer 17 <- Reducer 16 (SIMPLE_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 7 (SIMPLE_EDGE)
Reducer 21 <- Map 20 (SIMPLE_EDGE), Map 29 (SIMPLE_EDGE)
Reducer 22 <- Reducer 21 (SIMPLE_EDGE)
Reducer 23 <- Reducer 22 (CUSTOM_SIMPLE_EDGE), Reducer 32 (CUSTOM_SIMPLE_EDGE)
Reducer 24 <- Reducer 23 (CUSTOM_SIMPLE_EDGE), Reducer 35 (CUSTOM_SIMPLE_EDGE)
Reducer 25 <- Map 20 (SIMPLE_EDGE), Map 29 (SIMPLE_EDGE)
Reducer 26 <- Reducer 25 (SIMPLE_EDGE)
Reducer 27 <- Reducer 26 (CUSTOM_SIMPLE_EDGE), Reducer 38 (CUSTOM_SIMPLE_EDGE)
Reducer 28 <- Reducer 27 (CUSTOM_SIMPLE_EDGE), Reducer 41 (CUSTOM_SIMPLE_EDGE)
Reducer 3 <- Reducer 14 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 30 <- Map 29 (SIMPLE_EDGE), Reducer 43 (SIMPLE_EDGE)
Reducer 31 <- Reducer 30 (SIMPLE_EDGE)
Reducer 32 <- Reducer 31 (CUSTOM_SIMPLE_EDGE)
Reducer 33 <- Map 29 (SIMPLE_EDGE), Reducer 46 (SIMPLE_EDGE)
Reducer 34 <- Reducer 33 (SIMPLE_EDGE)
Reducer 35 <- Reducer 34 (CUSTOM_SIMPLE_EDGE)
Reducer 36 <- Map 29 (SIMPLE_EDGE), Reducer 44 (SIMPLE_EDGE)
Reducer 37 <- Reducer 36 (SIMPLE_EDGE)
Reducer 38 <- Reducer 37 (CUSTOM_SIMPLE_EDGE)
Reducer 39 <- Map 29 (SIMPLE_EDGE), Reducer 47 (SIMPLE_EDGE)
Reducer 4 <- Reducer 24 (SIMPLE_EDGE), Reducer 3 (SIMPLE_EDGE), Union 5 (CONTAINS)
Reducer 40 <- Reducer 39 (SIMPLE_EDGE)
Reducer 41 <- Reducer 40 (CUSTOM_SIMPLE_EDGE)
Reducer 43 <- Map 42 (SIMPLE_EDGE), Map 45 (SIMPLE_EDGE)
Reducer 44 <- Map 42 (SIMPLE_EDGE), Map 45 (SIMPLE_EDGE)
Reducer 46 <- Map 45 (SIMPLE_EDGE), Map 48 (SIMPLE_EDGE)
Reducer 47 <- Map 45 (SIMPLE_EDGE), Map 48 (SIMPLE_EDGE)
Reducer 6 <- Union 5 (CUSTOM_SIMPLE_EDGE)
Reducer 8 <- Map 49 (SIMPLE_EDGE), Map 7 (SIMPLE_EDGE)
Reducer 9 <- Reducer 17 (SIMPLE_EDGE), Reducer 8 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 6
      File Output Operator [FS_252]
        Limit [LIM_251] (rows=1 width=112)
          Number of rows:100
          Group By Operator [GBY_249] (rows=1 width=112)
            Output:["_col0"],aggregations:["sum(VALUE._col0)"]
          <-Union 5 [CUSTOM_SIMPLE_EDGE]
            <-Reducer 10 [CONTAINS]
              Reduce Output Operator [RS_248]
                Group By Operator [GBY_247] (rows=1 width=112)
                  Output:["_col0"],aggregations:["sum(_col0)"]
                  Select Operator [SEL_243] (rows=191667562 width=135)
                    Output:["_col0"]
                    Merge Join Operator [MERGEJOIN_378] (rows=191667562 width=135)
                      Conds:RS_240._col2=RS_241._col0(Inner),Output:["_col3","_col4"]
                    <-Reducer 28 [SIMPLE_EDGE]
                      SHUFFLE [RS_241]
                        PartitionCols:_col0
                        Select Operator [SEL_233] (rows=105599202 width=322)
                          Output:["_col0"]
                          Filter Operator [FIL_232] (rows=105599202 width=322)
                            predicate:(_col1 > (0.95 * _col2))
                            Merge Join Operator [MERGEJOIN_377] (rows=316797606 width=322)
                              Conds:(Inner),Output:["_col0","_col1","_col2"]
                            <-Reducer 27 [CUSTOM_SIMPLE_EDGE]
                              PARTITION_ONLY_SHUFFLE [RS_229]
                                Merge Join Operator [MERGEJOIN_376] (rows=316797606 width=97)
                                  Conds:(Inner),Output:["_col0","_col1"]
                                <-Reducer 26 [CUSTOM_SIMPLE_EDGE]
                                  PARTITION_ONLY_SHUFFLE [RS_199]
                                    Group By Operator [GBY_168] (rows=316797606 width=88)
                                      Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0
                                    <-Reducer 25 [SIMPLE_EDGE]
                                      SHUFFLE [RS_167]
                                        PartitionCols:_col0
                                        Group By Operator [GBY_166] (rows=633595212 width=88)
                                          Output:["_col0","_col1"],aggregations:["sum(_col1)"],keys:_col0
                                          Select Operator [SEL_164] (rows=633595212 width=88)
                                            Output:["_col0","_col1"]
                                            Merge Join Operator [MERGEJOIN_366] (rows=633595212 width=88)
                                              Conds:RS_161._col0=RS_162._col0(Inner),Output:["_col1","_col2","_col3"]
                                            <-Map 29 [SIMPLE_EDGE]
                                              SHUFFLE [RS_162]
                                                PartitionCols:_col0
                                                Select Operator [SEL_38] (rows=80000000 width=860)
                                                  Output:["_col0"]
                                                  Filter Operator [FIL_333] (rows=80000000 width=860)
                                                    predicate:c_customer_sk is not null
                                                    TableScan [TS_36] (rows=80000000 width=860)
                                                      default@customer,customer,Tbl:COMPLETE,Col:NONE,Output:["c_customer_sk"]
                                            <-Map 20 [SIMPLE_EDGE]
                                              SHUFFLE [RS_161]
                                                PartitionCols:_col0
                                                Select Operator [SEL_35] (rows=575995635 width=88)
                                                  Output:["_col0","_col1","_col2"]
                                                  Filter Operator [FIL_332] (rows=575995635 width=88)
                                                    predicate:ss_customer_sk is not null
                                                    TableScan [TS_33] (rows=575995635 width=88)
                                                      default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_customer_sk","ss_quantity","ss_sales_price"]
                                <-Reducer 38 [CUSTOM_SIMPLE_EDGE]
                                  PARTITION_ONLY_SHUFFLE [RS_200]
                                    Select Operator [SEL_198] (rows=1 width=8)
                                      Filter Operator [FIL_197] (rows=1 width=8)
                                        predicate:(sq_count_check(_col0) <= 1)
                                        Group By Operator [GBY_195] (rows=1 width=8)
                                          Output:["_col0"],aggregations:["count(VALUE._col0)"]
                                        <-Reducer 37 [CUSTOM_SIMPLE_EDGE]
                                          PARTITION_ONLY_SHUFFLE [RS_194]
                                            Group By Operator [GBY_193] (rows=1 width=8)
                                              Output:["_col0"],aggregations:["count()"]
                                              Select Operator [SEL_190] (rows=348477374 width=88)
                                                Group By Operator [GBY_189] (rows=348477374 width=88)
                                                  Output:["_col0"],keys:KEY._col0
                                                <-Reducer 36 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_188]
                                                    PartitionCols:_col0
                                                    Group By Operator [GBY_187] (rows=696954748 width=88)
                                                      Output:["_col0"],keys:_col0
                                                      Select Operator [SEL_185] (rows=696954748 width=88)
                                                        Output:["_col0"]
                                                        Merge Join Operator [MERGEJOIN_368] (rows=696954748 width=88)
                                                          Conds:RS_182._col1=RS_183._col0(Inner),Output:["_col6"]
                                                        <-Map 29 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_183]
                                                            PartitionCols:_col0
                                                             Please refer to the previous Select Operator [SEL_38]
                                                        <-Reducer 44 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_182]
                                                            PartitionCols:_col1
                                                            Merge Join Operator [MERGEJOIN_367] (rows=633595212 width=88)
                                                              Conds:RS_179._col0=RS_180._col0(Inner),Output:["_col1"]
                                                            <-Map 45 [SIMPLE_EDGE]
                                                              SHUFFLE [RS_180]
                                                                PartitionCols:_col0
                                                                Select Operator [SEL_53] (rows=36525 width=1119)
                                                                  Output:["_col0"]
                                                                  Filter Operator [FIL_335] (rows=36525 width=1119)
                                                                    predicate:((d_year) IN (1999, 2000, 2001, 2002) and d_date_sk is not null)
                                                                    TableScan [TS_51] (rows=73049 width=1119)
                                                                      default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year"]
                                                            <-Map 42 [SIMPLE_EDGE]
                                                              SHUFFLE [RS_179]
                                                                PartitionCols:_col0
                                                                Select Operator [SEL_50] (rows=575995635 width=88)
                                                                  Output:["_col0","_col1"]
                                                                  Filter Operator [FIL_334] (rows=575995635 width=88)
                                                                    predicate:(ss_customer_sk is not null and ss_sold_date_sk is not null)
                                                                    TableScan [TS_48] (rows=575995635 width=88)
                                                                      default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_customer_sk"]
                            <-Reducer 41 [CUSTOM_SIMPLE_EDGE]
                              PARTITION_ONLY_SHUFFLE [RS_230]
                                Group By Operator [GBY_227] (rows=1 width=224)
                                  Output:["_col0"],aggregations:["max(VALUE._col0)"]
                                <-Reducer 40 [CUSTOM_SIMPLE_EDGE]
                                  PARTITION_ONLY_SHUFFLE [RS_226]
                                    Group By Operator [GBY_225] (rows=1 width=224)
                                      Output:["_col0"],aggregations:["max(_col1)"]
                                      Select Operator [SEL_223] (rows=348477374 width=88)
                                        Output:["_col1"]
                                        Group By Operator [GBY_222] (rows=348477374 width=88)
                                          Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0
                                        <-Reducer 39 [SIMPLE_EDGE]
                                          SHUFFLE [RS_221]
                                            PartitionCols:_col0
                                            Group By Operator [GBY_220] (rows=696954748 width=88)
                                              Output:["_col0","_col1"],aggregations:["sum(_col1)"],keys:_col0
                                              Select Operator [SEL_218] (rows=696954748 width=88)
                                                Output:["_col0","_col1"]
                                                Merge Join Operator [MERGEJOIN_370] (rows=696954748 width=88)
                                                  Conds:RS_215._col1=RS_216._col0(Inner),Output:["_col2","_col3","_col6"]
                                                <-Map 29 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_216]
                                                    PartitionCols:_col0
                                                     Please refer to the previous Select Operator [SEL_38]
                                                <-Reducer 47 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_215]
                                                    PartitionCols:_col1
                                                    Merge Join Operator [MERGEJOIN_369] (rows=633595212 width=88)
                                                      Conds:RS_212._col0=RS_213._col0(Inner),Output:["_col1","_col2","_col3"]
                                                    <-Map 45 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_213]
                                                        PartitionCols:_col0
                                                         Please refer to the previous Select Operator [SEL_53]
                                                    <-Map 48 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_212]
                                                        PartitionCols:_col0
                                                        Select Operator [SEL_83] (rows=575995635 width=88)
                                                          Output:["_col0","_col1","_col2","_col3"]
                                                          Filter Operator [FIL_337] (rows=575995635 width=88)
                                                            predicate:(ss_customer_sk is not null and ss_sold_date_sk is not null)
                                                            TableScan [TS_81] (rows=575995635 width=88)
                                                              default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_customer_sk","ss_quantity","ss_sales_price"]
                    <-Reducer 9 [SIMPLE_EDGE]
                      SHUFFLE [RS_240]
                        PartitionCols:_col2
                        Merge Join Operator [MERGEJOIN_372] (rows=174243235 width=135)
                          Conds:RS_237._col1=RS_238._col0(Inner),Output:["_col2","_col3","_col4"]
                        <-Reducer 17 [SIMPLE_EDGE]
                          SHUFFLE [RS_238]
                            PartitionCols:_col0
                            Group By Operator [GBY_153] (rows=58079562 width=88)
                              Output:["_col0"],keys:_col1
                              Select Operator [SEL_149] (rows=116159124 width=88)
                                Output:["_col1"]
                                Filter Operator [FIL_148] (rows=116159124 width=88)
                                  predicate:(_col3 > 4)
                                  Select Operator [SEL_354] (rows=348477374 width=88)
                                    Output:["_col0","_col3"]
                                    Group By Operator [GBY_147] (rows=348477374 width=88)
                                      Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                    <-Reducer 16 [SIMPLE_EDGE]
                                      SHUFFLE [RS_146]
                                        PartitionCols:_col0
                                        Group By Operator [GBY_145] (rows=696954748 width=88)
                                          Output:["_col0","_col1","_col2","_col3"],aggregations:["count()"],keys:_col1, _col0, _col2
                                          Select Operator [SEL_143] (rows=696954748 width=88)
                                            Output:["_col0","_col1","_col2"]
                                            Merge Join Operator [MERGEJOIN_365] (rows=696954748 width=88)
                                              Conds:RS_140._col1=RS_141._col0(Inner),Output:["_col3","_col5","_col6"]
                                            <-Map 19 [SIMPLE_EDGE]
                                              SHUFFLE [RS_141]
                                                PartitionCols:_col0
                                                Select Operator [SEL_14] (rows=462000 width=1436)
                                                  Output:["_col0","_col1"]
                                                  Filter Operator [FIL_331] (rows=462000 width=1436)
                                                    predicate:i_item_sk is not null
                                                    TableScan [TS_12] (rows=462000 width=1436)
                                                      default@item,item,Tbl:COMPLETE,Col:NONE,Output:["i_item_sk","i_item_desc"]
                                            <-Reducer 15 [SIMPLE_EDGE]
                                              SHUFFLE [RS_140]
                                                PartitionCols:_col1
                                                Merge Join Operator [MERGEJOIN_364] (rows=633595212 width=88)
                                                  Conds:RS_137._col0=RS_138._col0(Inner),Output:["_col1","_col3"]
                                                <-Map 11 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_137]
                                                    PartitionCols:_col0
                                                    Select Operator [SEL_8] (rows=575995635 width=88)
                                                      Output:["_col0","_col1"]
                                                      Filter Operator [FIL_329] (rows=575995635 width=88)
                                                        predicate:(ss_sold_date_sk is not null and ss_item_sk is not null)
                                                        TableScan [TS_6] (rows=575995635 width=88)
                                                          default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_item_sk"]
                                                <-Map 18 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_138]
                                                    PartitionCols:_col0
                                                    Select Operator [SEL_11] (rows=36525 width=1119)
                                                      Output:["_col0","_col1"]
                                                      Filter Operator [FIL_330] (rows=36525 width=1119)
                                                        predicate:((d_year) IN (1999, 2000, 2001, 2002) and d_date_sk is not null)
                                                        TableScan [TS_9] (rows=73049 width=1119)
                                                          default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_date","d_year"]
                        <-Reducer 8 [SIMPLE_EDGE]
                          SHUFFLE [RS_237]
                            PartitionCols:_col1
                            Merge Join Operator [MERGEJOIN_363] (rows=158402938 width=135)
                              Conds:RS_234._col0=RS_235._col0(Inner),Output:["_col1","_col2","_col3","_col4"]
                            <-Map 7 [SIMPLE_EDGE]
                              SHUFFLE [RS_235]
                                PartitionCols:_col0
                                Select Operator [SEL_5] (rows=18262 width=1119)
                                  Output:["_col0"]
                                  Filter Operator [FIL_328] (rows=18262 width=1119)
                                    predicate:((d_year = 1999) and (d_moy = 1) and d_date_sk is not null)
                                    TableScan [TS_3] (rows=73049 width=1119)
                                      default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year","d_moy"]
                            <-Map 49 [SIMPLE_EDGE]
                              SHUFFLE [RS_234]
                                PartitionCols:_col0
                                Select Operator [SEL_124] (rows=144002668 width=135)
                                  Output:["_col0","_col1","_col2","_col3","_col4"]
                                  Filter Operator [FIL_340] (rows=144002668 width=135)
                                    predicate:(ws_item_sk is not null and ws_bill_customer_sk is not null and ws_sold_date_sk is not null)
                                    TableScan [TS_122] (rows=144002668 width=135)
                                      default@web_sales,web_sales,Tbl:COMPLETE,Col:NONE,Output:["ws_sold_date_sk","ws_item_sk","ws_bill_customer_sk","ws_quantity","ws_list_price"]
            <-Reducer 4 [CONTAINS]
              Reduce Output Operator [RS_248]
                Group By Operator [GBY_247] (rows=1 width=112)
                  Output:["_col0"],aggregations:["sum(_col0)"]
                  Select Operator [SEL_121] (rows=383314495 width=135)
                    Output:["_col0"]
                    Merge Join Operator [MERGEJOIN_375] (rows=383314495 width=135)
                      Conds:RS_118._col1=RS_119._col0(Inner),Output:["_col3","_col4"]
                    <-Reducer 24 [SIMPLE_EDGE]
                      SHUFFLE [RS_119]
                        PartitionCols:_col0
                        Select Operator [SEL_111] (rows=105599202 width=322)
                          Output:["_col0"]
                          Filter Operator [FIL_110] (rows=105599202 width=322)
                            predicate:(_col1 > (0.95 * _col2))
                            Merge Join Operator [MERGEJOIN_374] (rows=316797606 width=322)
                              Conds:(Inner),Output:["_col0","_col1","_col2"]
                            <-Reducer 23 [CUSTOM_SIMPLE_EDGE]
                              PARTITION_ONLY_SHUFFLE [RS_107]
                                Merge Join Operator [MERGEJOIN_373] (rows=316797606 width=97)
                                  Conds:(Inner),Output:["_col0","_col1"]
                                <-Reducer 22 [CUSTOM_SIMPLE_EDGE]
                                  PARTITION_ONLY_SHUFFLE [RS_77]
                                    Group By Operator [GBY_46] (rows=316797606 width=88)
                                      Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0
                                    <-Reducer 21 [SIMPLE_EDGE]
                                      SHUFFLE [RS_45]
                                        PartitionCols:_col0
                                        Group By Operator [GBY_44] (rows=633595212 width=88)
                                          Output:["_col0","_col1"],aggregations:["sum(_col1)"],keys:_col0
                                          Select Operator [SEL_42] (rows=633595212 width=88)
                                            Output:["_col0","_col1"]
                                            Merge Join Operator [MERGEJOIN_358] (rows=633595212 width=88)
                                              Conds:RS_39._col0=RS_40._col0(Inner),Output:["_col1","_col2","_col3"]
                                            <-Map 29 [SIMPLE_EDGE]
                                              SHUFFLE [RS_40]
                                                PartitionCols:_col0
                                                 Please refer to the previous Select Operator [SEL_38]
                                            <-Map 20 [SIMPLE_EDGE]
                                              SHUFFLE [RS_39]
                                                PartitionCols:_col0
                                                 Please refer to the previous Select Operator [SEL_35]
                                <-Reducer 32 [CUSTOM_SIMPLE_EDGE]
                                  PARTITION_ONLY_SHUFFLE [RS_78]
                                    Select Operator [SEL_76] (rows=1 width=8)
                                      Filter Operator [FIL_75] (rows=1 width=8)
                                        predicate:(sq_count_check(_col0) <= 1)
                                        Group By Operator [GBY_73] (rows=1 width=8)
                                          Output:["_col0"],aggregations:["count(VALUE._col0)"]
                                        <-Reducer 31 [CUSTOM_SIMPLE_EDGE]
                                          PARTITION_ONLY_SHUFFLE [RS_72]
                                            Group By Operator [GBY_71] (rows=1 width=8)
                                              Output:["_col0"],aggregations:["count()"]
                                              Select Operator [SEL_68] (rows=348477374 width=88)
                                                Group By Operator [GBY_67] (rows=348477374 width=88)
                                                  Output:["_col0"],keys:KEY._col0
                                                <-Reducer 30 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_66]
                                                    PartitionCols:_col0
                                                    Group By Operator [GBY_65] (rows=696954748 width=88)
                                                      Output:["_col0"],keys:_col0
                                                      Select Operator [SEL_63] (rows=696954748 width=88)
                                                        Output:["_col0"]
                                                        Merge Join Operator [MERGEJOIN_360] (rows=696954748 width=88)
                                                          Conds:RS_60._col1=RS_61._col0(Inner),Output:["_col6"]
                                                        <-Map 29 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_61]
                                                            PartitionCols:_col0
                                                             Please refer to the previous Select Operator [SEL_38]
                                                        <-Reducer 43 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_60]
                                                            PartitionCols:_col1
                                                            Merge Join Operator [MERGEJOIN_359] (rows=633595212 width=88)
                                                              Conds:RS_57._col0=RS_58._col0(Inner),Output:["_col1"]
                                                            <-Map 45 [SIMPLE_EDGE]
                                                              SHUFFLE [RS_58]
                                                                PartitionCols:_col0
                                                                 Please refer to the previous Select Operator [SEL_53]
                                                            <-Map 42 [SIMPLE_EDGE]
                                                              SHUFFLE [RS_57]
                                                                PartitionCols:_col0
                                                                 Please refer to the previous Select Operator [SEL_50]
                            <-Reducer 35 [CUSTOM_SIMPLE_EDGE]
                              PARTITION_ONLY_SHUFFLE [RS_108]
                                Group By Operator [GBY_105] (rows=1 width=224)
                                  Output:["_col0"],aggregations:["max(VALUE._col0)"]
                                <-Reducer 34 [CUSTOM_SIMPLE_EDGE]
                                  PARTITION_ONLY_SHUFFLE [RS_104]
                                    Group By Operator [GBY_103] (rows=1 width=224)
                                      Output:["_col0"],aggregations:["max(_col1)"]
                                      Select Operator [SEL_101] (rows=348477374 width=88)
                                        Output:["_col1"]
                                        Group By Operator [GBY_100] (rows=348477374 width=88)
                                          Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0
                                        <-Reducer 33 [SIMPLE_EDGE]
                                          SHUFFLE [RS_99]
                                            PartitionCols:_col0
                                            Group By Operator [GBY_98] (rows=696954748 width=88)
                                              Output:["_col0","_col1"],aggregations:["sum(_col1)"],keys:_col0
                                              Select Operator [SEL_96] (rows=696954748 width=88)
                                                Output:["_col0","_col1"]
                                                Merge Join Operator [MERGEJOIN_362] (rows=696954748 width=88)
                                                  Conds:RS_93._col1=RS_94._col0(Inner),Output:["_col2","_col3","_col6"]
                                                <-Map 29 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_94]
                                                    PartitionCols:_col0
                                                     Please refer to the previous Select Operator [SEL_38]
                                                <-Reducer 46 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_93]
                                                    PartitionCols:_col1
                                                    Merge Join Operator [MERGEJOIN_361] (rows=633595212 width=88)
                                                      Conds:RS_90._col0=RS_91._col0(Inner),Output:["_col1","_col2","_col3"]
                                                    <-Map 45 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_91]
                                                        PartitionCols:_col0
                                                         Please refer to the previous Select Operator [SEL_53]
                                                    <-Map 48 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_90]
                                                        PartitionCols:_col0
                                                         Please refer to the previous Select Operator [SEL_83]
                    <-Reducer 3 [SIMPLE_EDGE]
                      SHUFFLE [RS_118]
                        PartitionCols:_col1
                        Merge Join Operator [MERGEJOIN_371] (rows=348467716 width=135)
                          Conds:RS_115._col2=RS_116._col0(Inner),Output:["_col1","_col3","_col4"]
                        <-Reducer 14 [SIMPLE_EDGE]
                          SHUFFLE [RS_116]
                            PartitionCols:_col0
                            Group By Operator [GBY_31] (rows=58079562 width=88)
                              Output:["_col0"],keys:_col1
                              Select Operator [SEL_27] (rows=116159124 width=88)
                                Output:["_col1"]
                                Filter Operator [FIL_26] (rows=116159124 width=88)
                                  predicate:(_col3 > 4)
                                  Select Operator [SEL_353] (rows=348477374 width=88)
                                    Output:["_col0","_col3"]
                                    Group By Operator [GBY_25] (rows=348477374 width=88)
                                      Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                    <-Reducer 13 [SIMPLE_EDGE]
                                      SHUFFLE [RS_24]
                                        PartitionCols:_col0
                                        Group By Operator [GBY_23] (rows=696954748 width=88)
                                          Output:["_col0","_col1","_col2","_col3"],aggregations:["count()"],keys:_col1, _col0, _col2
                                          Select Operator [SEL_21] (rows=696954748 width=88)
                                            Output:["_col0","_col1","_col2"]
                                            Merge Join Operator [MERGEJOIN_357] (rows=696954748 width=88)
                                              Conds:RS_18._col1=RS_19._col0(Inner),Output:["_col3","_col5","_col6"]
                                            <-Map 19 [SIMPLE_EDGE]
                                              SHUFFLE [RS_19]
                                                PartitionCols:_col0
                                                 Please refer to the previous Select Operator [SEL_14]
                                            <-Reducer 12 [SIMPLE_EDGE]
                                              SHUFFLE [RS_18]
                                                PartitionCols:_col1
                                                Merge Join Operator [MERGEJOIN_356] (rows=633595212 width=88)
                                                  Conds:RS_15._col0=RS_16._col0(Inner),Output:["_col1","_col3"]
                                                <-Map 11 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_15]
                                                    PartitionCols:_col0
                                                     Please refer to the previous Select Operator [SEL_8]
                                                <-Map 18 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_16]
                                                    PartitionCols:_col0
                                                     Please refer to the previous Select Operator [SEL_11]
                        <-Reducer 2 [SIMPLE_EDGE]
                          SHUFFLE [RS_115]
                            PartitionCols:_col2
                            Merge Join Operator [MERGEJOIN_355] (rows=316788826 width=135)
                              Conds:RS_112._col0=RS_113._col0(Inner),Output:["_col1","_col2","_col3","_col4"]
                            <-Map 7 [SIMPLE_EDGE]
                              SHUFFLE [RS_113]
                                PartitionCols:_col0
                                 Please refer to the previous Select Operator [SEL_5]
                            <-Map 1 [SIMPLE_EDGE]
                              SHUFFLE [RS_112]
                                PartitionCols:_col0
                                Select Operator [SEL_2] (rows=287989836 width=135)
                                  Output:["_col0","_col1","_col2","_col3","_col4"]
                                  Filter Operator [FIL_327] (rows=287989836 width=135)
                                    predicate:(cs_item_sk is not null and cs_bill_customer_sk is not null and cs_sold_date_sk is not null)
                                    TableScan [TS_0] (rows=287989836 width=135)
                                      default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:NONE,Output:["cs_sold_date_sk","cs_bill_customer_sk","cs_item_sk","cs_quantity","cs_list_price"]

