Warning: Shuffle Join MERGEJOIN[899][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 5' is a cross product
Warning: Shuffle Join MERGEJOIN[902][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 6' is a cross product
Warning: Shuffle Join MERGEJOIN[900][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 14' is a cross product
Warning: Shuffle Join MERGEJOIN[903][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 15' is a cross product
Warning: Shuffle Join MERGEJOIN[901][tables = [$hdt$_1, $hdt$_2]] in Stage 'Reducer 19' is a cross product
Warning: Shuffle Join MERGEJOIN[904][tables = [$hdt$_1, $hdt$_2]] in Stage 'Reducer 20' is a cross product
PREHOOK: query: explain
with  cross_items as
 (select i_item_sk ss_item_sk
 from item,
 (select iss.i_brand_id brand_id
     ,iss.i_class_id class_id
     ,iss.i_category_id category_id
 from store_sales
     ,item iss
     ,date_dim d1
 where ss_item_sk = iss.i_item_sk
   and ss_sold_date_sk = d1.d_date_sk
   and d1.d_year between 1999 AND 1999 + 2
 intersect 
 select ics.i_brand_id
     ,ics.i_class_id
     ,ics.i_category_id
 from catalog_sales
     ,item ics
     ,date_dim d2
 where cs_item_sk = ics.i_item_sk
   and cs_sold_date_sk = d2.d_date_sk
   and d2.d_year between 1999 AND 1999 + 2
 intersect
 select iws.i_brand_id
     ,iws.i_class_id
     ,iws.i_category_id
 from web_sales
     ,item iws
     ,date_dim d3
 where ws_item_sk = iws.i_item_sk
   and ws_sold_date_sk = d3.d_date_sk
   and d3.d_year between 1999 AND 1999 + 2) x
 where i_brand_id = brand_id
      and i_class_id = class_id
      and i_category_id = category_id
),
 avg_sales as
 (select avg(quantity*list_price) average_sales
  from (select ss_quantity quantity
             ,ss_list_price list_price
       from store_sales
           ,date_dim
       where ss_sold_date_sk = d_date_sk
         and d_year between 1999 and 2001 
       union all 
       select cs_quantity quantity 
             ,cs_list_price list_price
       from catalog_sales
           ,date_dim
       where cs_sold_date_sk = d_date_sk
         and d_year between 1998 and 1998 + 2 
       union all
       select ws_quantity quantity
             ,ws_list_price list_price
       from web_sales
           ,date_dim
       where ws_sold_date_sk = d_date_sk
         and d_year between 1998 and 1998 + 2) x)
  select  channel, i_brand_id,i_class_id,i_category_id,sum(sales), sum(number_sales)
 from(
       select 'store' channel, i_brand_id,i_class_id
             ,i_category_id,sum(ss_quantity*ss_list_price) sales
             , count(*) number_sales
       from store_sales
           ,item
           ,date_dim
       where ss_item_sk in (select ss_item_sk from cross_items)
         and ss_item_sk = i_item_sk
         and ss_sold_date_sk = d_date_sk
         and d_year = 1998+2 
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(ss_quantity*ss_list_price) > (select average_sales from avg_sales)
       union all
       select 'catalog' channel, i_brand_id,i_class_id,i_category_id, sum(cs_quantity*cs_list_price) sales, count(*) number_sales
       from catalog_sales
           ,item
           ,date_dim
       where cs_item_sk in (select ss_item_sk from cross_items)
         and cs_item_sk = i_item_sk
         and cs_sold_date_sk = d_date_sk
         and d_year = 1998+2 
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(cs_quantity*cs_list_price) > (select average_sales from avg_sales)
       union all
       select 'web' channel, i_brand_id,i_class_id,i_category_id, sum(ws_quantity*ws_list_price) sales , count(*) number_sales
       from web_sales
           ,item
           ,date_dim
       where ws_item_sk in (select ss_item_sk from cross_items)
         and ws_item_sk = i_item_sk
         and ws_sold_date_sk = d_date_sk
         and d_year = 1998+2
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(ws_quantity*ws_list_price) > (select average_sales from avg_sales)
 ) y
 group by rollup (channel, i_brand_id,i_class_id,i_category_id)
 order by channel,i_brand_id,i_class_id,i_category_id
 limit 100
PREHOOK: type: QUERY
POSTHOOK: query: explain
with  cross_items as
 (select i_item_sk ss_item_sk
 from item,
 (select iss.i_brand_id brand_id
     ,iss.i_class_id class_id
     ,iss.i_category_id category_id
 from store_sales
     ,item iss
     ,date_dim d1
 where ss_item_sk = iss.i_item_sk
   and ss_sold_date_sk = d1.d_date_sk
   and d1.d_year between 1999 AND 1999 + 2
 intersect 
 select ics.i_brand_id
     ,ics.i_class_id
     ,ics.i_category_id
 from catalog_sales
     ,item ics
     ,date_dim d2
 where cs_item_sk = ics.i_item_sk
   and cs_sold_date_sk = d2.d_date_sk
   and d2.d_year between 1999 AND 1999 + 2
 intersect
 select iws.i_brand_id
     ,iws.i_class_id
     ,iws.i_category_id
 from web_sales
     ,item iws
     ,date_dim d3
 where ws_item_sk = iws.i_item_sk
   and ws_sold_date_sk = d3.d_date_sk
   and d3.d_year between 1999 AND 1999 + 2) x
 where i_brand_id = brand_id
      and i_class_id = class_id
      and i_category_id = category_id
),
 avg_sales as
 (select avg(quantity*list_price) average_sales
  from (select ss_quantity quantity
             ,ss_list_price list_price
       from store_sales
           ,date_dim
       where ss_sold_date_sk = d_date_sk
         and d_year between 1999 and 2001 
       union all 
       select cs_quantity quantity 
             ,cs_list_price list_price
       from catalog_sales
           ,date_dim
       where cs_sold_date_sk = d_date_sk
         and d_year between 1998 and 1998 + 2 
       union all
       select ws_quantity quantity
             ,ws_list_price list_price
       from web_sales
           ,date_dim
       where ws_sold_date_sk = d_date_sk
         and d_year between 1998 and 1998 + 2) x)
  select  channel, i_brand_id,i_class_id,i_category_id,sum(sales), sum(number_sales)
 from(
       select 'store' channel, i_brand_id,i_class_id
             ,i_category_id,sum(ss_quantity*ss_list_price) sales
             , count(*) number_sales
       from store_sales
           ,item
           ,date_dim
       where ss_item_sk in (select ss_item_sk from cross_items)
         and ss_item_sk = i_item_sk
         and ss_sold_date_sk = d_date_sk
         and d_year = 1998+2 
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(ss_quantity*ss_list_price) > (select average_sales from avg_sales)
       union all
       select 'catalog' channel, i_brand_id,i_class_id,i_category_id, sum(cs_quantity*cs_list_price) sales, count(*) number_sales
       from catalog_sales
           ,item
           ,date_dim
       where cs_item_sk in (select ss_item_sk from cross_items)
         and cs_item_sk = i_item_sk
         and cs_sold_date_sk = d_date_sk
         and d_year = 1998+2 
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(cs_quantity*cs_list_price) > (select average_sales from avg_sales)
       union all
       select 'web' channel, i_brand_id,i_class_id,i_category_id, sum(ws_quantity*ws_list_price) sales , count(*) number_sales
       from web_sales
           ,item
           ,date_dim
       where ws_item_sk in (select ss_item_sk from cross_items)
         and ws_item_sk = i_item_sk
         and ws_sold_date_sk = d_date_sk
         and d_year = 1998+2
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(ws_quantity*ws_list_price) > (select average_sales from avg_sales)
 ) y
 group by rollup (channel, i_brand_id,i_class_id,i_category_id)
 order by channel,i_brand_id,i_class_id,i_category_id
 limit 100
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 11 <- Map 10 (SIMPLE_EDGE), Map 103 (SIMPLE_EDGE)
Reducer 12 <- Map 21 (SIMPLE_EDGE), Reducer 11 (SIMPLE_EDGE), Reducer 33 (SIMPLE_EDGE)
Reducer 13 <- Reducer 12 (SIMPLE_EDGE)
Reducer 14 <- Reducer 13 (CUSTOM_SIMPLE_EDGE), Reducer 69 (CUSTOM_SIMPLE_EDGE)
Reducer 15 <- Reducer 14 (CUSTOM_SIMPLE_EDGE), Reducer 72 (CUSTOM_SIMPLE_EDGE), Union 7 (CONTAINS)
Reducer 16 <- Map 10 (SIMPLE_EDGE), Map 104 (SIMPLE_EDGE)
Reducer 17 <- Map 21 (SIMPLE_EDGE), Reducer 16 (SIMPLE_EDGE), Reducer 43 (SIMPLE_EDGE)
Reducer 18 <- Reducer 17 (SIMPLE_EDGE)
Reducer 19 <- Reducer 18 (CUSTOM_SIMPLE_EDGE), Reducer 77 (CUSTOM_SIMPLE_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 10 (SIMPLE_EDGE)
Reducer 20 <- Reducer 19 (CUSTOM_SIMPLE_EDGE), Reducer 80 (CUSTOM_SIMPLE_EDGE), Union 7 (CONTAINS)
Reducer 22 <- Map 21 (SIMPLE_EDGE), Reducer 27 (SIMPLE_EDGE)
Reducer 23 <- Reducer 22 (SIMPLE_EDGE)
Reducer 24 <- Map 21 (SIMPLE_EDGE), Reducer 53 (SIMPLE_EDGE)
Reducer 25 <- Reducer 24 (SIMPLE_EDGE), Union 26 (CONTAINS)
Reducer 27 <- Union 26 (SIMPLE_EDGE)
Reducer 28 <- Map 21 (SIMPLE_EDGE), Reducer 57 (SIMPLE_EDGE)
Reducer 29 <- Reducer 28 (SIMPLE_EDGE), Union 26 (CONTAINS)
Reducer 3 <- Map 21 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE), Reducer 23 (SIMPLE_EDGE)
Reducer 30 <- Map 21 (SIMPLE_EDGE), Reducer 58 (SIMPLE_EDGE)
Reducer 31 <- Reducer 30 (SIMPLE_EDGE), Union 26 (CONTAINS)
Reducer 32 <- Map 21 (SIMPLE_EDGE), Reducer 37 (SIMPLE_EDGE)
Reducer 33 <- Reducer 32 (SIMPLE_EDGE)
Reducer 34 <- Map 21 (SIMPLE_EDGE), Reducer 54 (SIMPLE_EDGE)
Reducer 35 <- Reducer 34 (SIMPLE_EDGE), Union 36 (CONTAINS)
Reducer 37 <- Union 36 (SIMPLE_EDGE)
Reducer 38 <- Map 21 (SIMPLE_EDGE), Reducer 65 (SIMPLE_EDGE)
Reducer 39 <- Reducer 38 (SIMPLE_EDGE), Union 36 (CONTAINS)
Reducer 4 <- Reducer 3 (SIMPLE_EDGE)
Reducer 40 <- Map 21 (SIMPLE_EDGE), Reducer 66 (SIMPLE_EDGE)
Reducer 41 <- Reducer 40 (SIMPLE_EDGE), Union 36 (CONTAINS)
Reducer 42 <- Map 21 (SIMPLE_EDGE), Reducer 47 (SIMPLE_EDGE)
Reducer 43 <- Reducer 42 (SIMPLE_EDGE)
Reducer 44 <- Map 21 (SIMPLE_EDGE), Reducer 55 (SIMPLE_EDGE)
Reducer 45 <- Reducer 44 (SIMPLE_EDGE), Union 46 (CONTAINS)
Reducer 47 <- Union 46 (SIMPLE_EDGE)
Reducer 48 <- Map 21 (SIMPLE_EDGE), Reducer 73 (SIMPLE_EDGE)
Reducer 49 <- Reducer 48 (SIMPLE_EDGE), Union 46 (CONTAINS)
Reducer 5 <- Reducer 4 (CUSTOM_SIMPLE_EDGE), Reducer 61 (CUSTOM_SIMPLE_EDGE)
Reducer 50 <- Map 21 (SIMPLE_EDGE), Reducer 74 (SIMPLE_EDGE)
Reducer 51 <- Reducer 50 (SIMPLE_EDGE), Union 46 (CONTAINS)
Reducer 53 <- Map 52 (SIMPLE_EDGE), Map 56 (SIMPLE_EDGE)
Reducer 54 <- Map 52 (SIMPLE_EDGE), Map 56 (SIMPLE_EDGE)
Reducer 55 <- Map 52 (SIMPLE_EDGE), Map 56 (SIMPLE_EDGE)
Reducer 57 <- Map 56 (SIMPLE_EDGE), Map 81 (SIMPLE_EDGE)
Reducer 58 <- Map 56 (SIMPLE_EDGE), Map 82 (SIMPLE_EDGE)
Reducer 59 <- Map 56 (SIMPLE_EDGE), Map 83 (SIMPLE_EDGE), Union 60 (CONTAINS)
Reducer 6 <- Reducer 5 (CUSTOM_SIMPLE_EDGE), Reducer 64 (CUSTOM_SIMPLE_EDGE), Union 7 (CONTAINS)
Reducer 61 <- Union 60 (CUSTOM_SIMPLE_EDGE)
Reducer 62 <- Map 100 (SIMPLE_EDGE), Map 56 (SIMPLE_EDGE), Union 63 (CONTAINS)
Reducer 64 <- Union 63 (CUSTOM_SIMPLE_EDGE)
Reducer 65 <- Map 56 (SIMPLE_EDGE), Map 81 (SIMPLE_EDGE)
Reducer 66 <- Map 56 (SIMPLE_EDGE), Map 82 (SIMPLE_EDGE)
Reducer 67 <- Map 56 (SIMPLE_EDGE), Map 83 (SIMPLE_EDGE), Union 68 (CONTAINS)
Reducer 69 <- Union 68 (CUSTOM_SIMPLE_EDGE)
Reducer 70 <- Map 100 (SIMPLE_EDGE), Map 56 (SIMPLE_EDGE), Union 71 (CONTAINS)
Reducer 72 <- Union 71 (CUSTOM_SIMPLE_EDGE)
Reducer 73 <- Map 56 (SIMPLE_EDGE), Map 81 (SIMPLE_EDGE)
Reducer 74 <- Map 56 (SIMPLE_EDGE), Map 82 (SIMPLE_EDGE)
Reducer 75 <- Map 56 (SIMPLE_EDGE), Map 83 (SIMPLE_EDGE), Union 76 (CONTAINS)
Reducer 77 <- Union 76 (CUSTOM_SIMPLE_EDGE)
Reducer 78 <- Map 100 (SIMPLE_EDGE), Map 56 (SIMPLE_EDGE), Union 79 (CONTAINS)
Reducer 8 <- Union 7 (SIMPLE_EDGE)
Reducer 80 <- Union 79 (CUSTOM_SIMPLE_EDGE)
Reducer 85 <- Map 84 (SIMPLE_EDGE), Map 88 (SIMPLE_EDGE), Union 60 (CONTAINS)
Reducer 86 <- Map 84 (SIMPLE_EDGE), Map 88 (SIMPLE_EDGE), Union 68 (CONTAINS)
Reducer 87 <- Map 84 (SIMPLE_EDGE), Map 88 (SIMPLE_EDGE), Union 76 (CONTAINS)
Reducer 89 <- Map 101 (SIMPLE_EDGE), Map 88 (SIMPLE_EDGE), Union 63 (CONTAINS)
Reducer 9 <- Reducer 8 (SIMPLE_EDGE)
Reducer 90 <- Map 101 (SIMPLE_EDGE), Map 88 (SIMPLE_EDGE), Union 71 (CONTAINS)
Reducer 91 <- Map 101 (SIMPLE_EDGE), Map 88 (SIMPLE_EDGE), Union 79 (CONTAINS)
Reducer 93 <- Map 92 (SIMPLE_EDGE), Map 96 (SIMPLE_EDGE), Union 60 (CONTAINS)
Reducer 94 <- Map 92 (SIMPLE_EDGE), Map 96 (SIMPLE_EDGE), Union 68 (CONTAINS)
Reducer 95 <- Map 92 (SIMPLE_EDGE), Map 96 (SIMPLE_EDGE), Union 76 (CONTAINS)
Reducer 97 <- Map 102 (SIMPLE_EDGE), Map 96 (SIMPLE_EDGE), Union 63 (CONTAINS)
Reducer 98 <- Map 102 (SIMPLE_EDGE), Map 96 (SIMPLE_EDGE), Union 71 (CONTAINS)
Reducer 99 <- Map 102 (SIMPLE_EDGE), Map 96 (SIMPLE_EDGE), Union 79 (CONTAINS)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 9
      File Output Operator [FS_583]
        Limit [LIM_582] (rows=100 width=406)
          Number of rows:100
          Select Operator [SEL_581] (rows=1016388080 width=406)
            Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
          <-Reducer 8 [SIMPLE_EDGE]
            SHUFFLE [RS_580]
              Select Operator [SEL_579] (rows=1016388080 width=406)
                Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                Group By Operator [GBY_578] (rows=1016388080 width=406)
                  Output:["_col0","_col1","_col2","_col3","_col5","_col6"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3, KEY._col4
                <-Union 7 [SIMPLE_EDGE]
                  <-Reducer 15 [CONTAINS]
                    Reduce Output Operator [RS_577]
                      PartitionCols:_col0, _col1, _col2, _col3, _col4
                      Group By Operator [GBY_576] (rows=2032776160 width=406)
                        Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],aggregations:["sum(_col4)","sum(_col5)"],keys:_col0, _col1, _col2, _col3, 0
                        Select Operator [SEL_381] (rows=116155905 width=433)
                          Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                          Filter Operator [FIL_380] (rows=116155905 width=433)
                            predicate:(_col3 > _col5)
                            Merge Join Operator [MERGEJOIN_903] (rows=348467716 width=433)
                              Conds:(Inner),Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                            <-Reducer 14 [CUSTOM_SIMPLE_EDGE]
                              PARTITION_ONLY_SHUFFLE [RS_377]
                                Merge Join Operator [MERGEJOIN_900] (rows=348467716 width=144)
                                  Conds:(Inner),Output:["_col0","_col1","_col2","_col3","_col4"]
                                <-Reducer 13 [CUSTOM_SIMPLE_EDGE]
                                  PARTITION_ONLY_SHUFFLE [RS_336]
                                    Group By Operator [GBY_290] (rows=348467716 width=135)
                                      Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(VALUE._col0)","count(VALUE._col1)"],keys:KEY._col0, KEY._col1, KEY._col2
                                    <-Reducer 12 [SIMPLE_EDGE]
                                      SHUFFLE [RS_289]
                                        PartitionCols:_col0, _col1, _col2
                                        Group By Operator [GBY_288] (rows=696935432 width=135)
                                          Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(_col3)","count()"],keys:_col0, _col1, _col2
                                          Select Operator [SEL_286] (rows=696935432 width=135)
                                            Output:["_col0","_col1","_col2","_col3"]
                                            Merge Join Operator [MERGEJOIN_877] (rows=696935432 width=135)
                                              Conds:RS_282._col1=RS_283._col0(Inner),RS_282._col1=RS_284._col0(Inner),Output:["_col2","_col3","_col8","_col9","_col10"]
                                            <-Map 21 [SIMPLE_EDGE]
                                              SHUFFLE [RS_283]
                                                PartitionCols:_col0
                                                Select Operator [SEL_199] (rows=462000 width=1436)
                                                  Output:["_col0","_col1","_col2","_col3"]
                                                  Filter Operator [FIL_806] (rows=462000 width=1436)
                                                    predicate:i_item_sk is not null
                                                    TableScan [TS_6] (rows=462000 width=1436)
                                                      default@item,item,Tbl:COMPLETE,Col:NONE,Output:["i_item_sk","i_brand_id","i_class_id","i_category_id"]
                                            <-Reducer 11 [SIMPLE_EDGE]
                                              SHUFFLE [RS_282]
                                                PartitionCols:_col1
                                                Merge Join Operator [MERGEJOIN_869] (rows=316788826 width=135)
                                                  Conds:RS_279._col0=RS_280._col0(Inner),Output:["_col1","_col2","_col3"]
                                                <-Map 10 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_280]
                                                    PartitionCols:_col0
                                                    Select Operator [SEL_5] (rows=18262 width=1119)
                                                      Output:["_col0"]
                                                      Filter Operator [FIL_780] (rows=18262 width=1119)
                                                        predicate:((d_year = 2000) and (d_moy = 11) and d_date_sk is not null)
                                                        TableScan [TS_3] (rows=73049 width=1119)
                                                          default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year","d_moy"]
                                                <-Map 103 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_279]
                                                    PartitionCols:_col0
                                                    Select Operator [SEL_193] (rows=287989836 width=135)
                                                      Output:["_col0","_col1","_col2","_col3"]
                                                      Filter Operator [FIL_804] (rows=287989836 width=135)
                                                        predicate:(cs_item_sk is not null and cs_sold_date_sk is not null)
                                                        TableScan [TS_191] (rows=287989836 width=135)
                                                          default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:NONE,Output:["cs_sold_date_sk","cs_item_sk","cs_quantity","cs_list_price"]
                                            <-Reducer 33 [SIMPLE_EDGE]
                                              SHUFFLE [RS_284]
                                                PartitionCols:_col0
                                                Group By Operator [GBY_277] (rows=254100 width=1436)
                                                  Output:["_col0"],keys:KEY._col0
                                                <-Reducer 32 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_276]
                                                    PartitionCols:_col0
                                                    Group By Operator [GBY_275] (rows=508200 width=1436)
                                                      Output:["_col0"],keys:_col0
                                                      Merge Join Operator [MERGEJOIN_876] (rows=508200 width=1436)
                                                        Conds:RS_271._col1, _col2, _col3=RS_272._col0, _col1, _col2(Inner),Output:["_col0"]
                                                      <-Map 21 [SIMPLE_EDGE]
                                                        SHUFFLE [RS_271]
                                                          PartitionCols:_col1, _col2, _col3
                                                          Select Operator [SEL_202] (rows=462000 width=1436)
                                                            Output:["_col0","_col1","_col2","_col3"]
                                                            Filter Operator [FIL_807] (rows=462000 width=1436)
                                                              predicate:(i_brand_id is not null and i_class_id is not null and i_category_id is not null and i_item_sk is not null)
                                                               Please refer to the previous TableScan [TS_6]
                                                      <-Reducer 37 [SIMPLE_EDGE]
                                                        SHUFFLE [RS_272]
                                                          PartitionCols:_col0, _col1, _col2
                                                          Select Operator [SEL_270] (rows=1 width=108)
                                                            Output:["_col0","_col1","_col2"]
                                                            Filter Operator [FIL_269] (rows=1 width=108)
                                                              predicate:(_col3 = 3)
                                                              Group By Operator [GBY_268] (rows=304916424 width=108)
                                                                Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                              <-Union 36 [SIMPLE_EDGE]
                                                                <-Reducer 35 [CONTAINS]
                                                                  Reduce Output Operator [RS_267]
                                                                    PartitionCols:_col0, _col1, _col2
                                                                    Group By Operator [GBY_266] (rows=609832849 width=108)
                                                                      Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                      Group By Operator [GBY_221] (rows=348477374 width=88)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                      <-Reducer 34 [SIMPLE_EDGE]
                                                                        SHUFFLE [RS_220]
                                                                          PartitionCols:_col0, _col1, _col2
                                                                          Group By Operator [GBY_219] (rows=696954748 width=88)
                                                                            Output:["_col0","_col1","_col2","_col3"],aggregations:["count()"],keys:_col5, _col6, _col7
                                                                            Merge Join Operator [MERGEJOIN_871] (rows=696954748 width=88)
                                                                              Conds:RS_215._col1=RS_216._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                            <-Map 21 [SIMPLE_EDGE]
                                                                              SHUFFLE [RS_216]
                                                                                PartitionCols:_col0
                                                                                Select Operator [SEL_211] (rows=462000 width=1436)
                                                                                  Output:["_col0","_col1","_col2","_col3"]
                                                                                  Filter Operator [FIL_810] (rows=462000 width=1436)
                                                                                    predicate:(i_item_sk is not null and i_brand_id is not null and i_class_id is not null and i_category_id is not null)
                                                                                     Please refer to the previous TableScan [TS_6]
                                                                            <-Reducer 54 [SIMPLE_EDGE]
                                                                              SHUFFLE [RS_215]
                                                                                PartitionCols:_col1
                                                                                Merge Join Operator [MERGEJOIN_870] (rows=633595212 width=88)
                                                                                  Conds:RS_212._col0=RS_213._col0(Inner),Output:["_col1"]
                                                                                <-Map 56 [SIMPLE_EDGE]
                                                                                  SHUFFLE [RS_213]
                                                                                    PartitionCols:_col0
                                                                                    Select Operator [SEL_17] (rows=8116 width=1119)
                                                                                      Output:["_col0"]
                                                                                      Filter Operator [FIL_784] (rows=8116 width=1119)
                                                                                        predicate:(d_year BETWEEN 1999 AND 2001 and d_date_sk is not null)
                                                                                        TableScan [TS_15] (rows=73049 width=1119)
                                                                                          default@date_dim,d1,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year"]
                                                                                <-Map 52 [SIMPLE_EDGE]
                                                                                  SHUFFLE [RS_212]
                                                                                    PartitionCols:_col0
                                                                                    Select Operator [SEL_14] (rows=575995635 width=88)
                                                                                      Output:["_col0","_col1"]
                                                                                      Filter Operator [FIL_783] (rows=575995635 width=88)
                                                                                        predicate:(ss_item_sk is not null and ss_sold_date_sk is not null)
                                                                                        TableScan [TS_12] (rows=575995635 width=88)
                                                                                          default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_item_sk"]
                                                                <-Reducer 39 [CONTAINS]
                                                                  Reduce Output Operator [RS_267]
                                                                    PartitionCols:_col0, _col1, _col2
                                                                    Group By Operator [GBY_266] (rows=609832849 width=108)
                                                                      Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                      Group By Operator [GBY_241] (rows=174233858 width=135)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                      <-Reducer 38 [SIMPLE_EDGE]
                                                                        SHUFFLE [RS_240]
                                                                          PartitionCols:_col0, _col1, _col2
                                                                          Group By Operator [GBY_239] (rows=348467716 width=135)
                                                                            Output:["_col0","_col1","_col2","_col3"],aggregations:["count()"],keys:_col5, _col6, _col7
                                                                            Merge Join Operator [MERGEJOIN_873] (rows=348467716 width=135)
                                                                              Conds:RS_235._col1=RS_236._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                            <-Map 21 [SIMPLE_EDGE]
                                                                              SHUFFLE [RS_236]
                                                                                PartitionCols:_col0
                                                                                Select Operator [SEL_231] (rows=462000 width=1436)
                                                                                  Output:["_col0","_col1","_col2","_col3"]
                                                                                  Filter Operator [FIL_813] (rows=462000 width=1436)
                                                                                    predicate:(i_item_sk is not null and i_brand_id is not null and i_class_id is not null and i_category_id is not null)
                                                                                     Please refer to the previous TableScan [TS_6]
                                                                            <-Reducer 65 [SIMPLE_EDGE]
                                                                              SHUFFLE [RS_235]
                                                                                PartitionCols:_col1
                                                                                Merge Join Operator [MERGEJOIN_872] (rows=316788826 width=135)
                                                                                  Conds:RS_232._col0=RS_233._col0(Inner),Output:["_col1"]
                                                                                <-Map 56 [SIMPLE_EDGE]
                                                                                  SHUFFLE [RS_233]
                                                                                    PartitionCols:_col0
                                                                                     Please refer to the previous Select Operator [SEL_17]
                                                                                <-Map 81 [SIMPLE_EDGE]
                                                                                  SHUFFLE [RS_232]
                                                                                    PartitionCols:_col0
                                                                                    Select Operator [SEL_34] (rows=287989836 width=135)
                                                                                      Output:["_col0","_col1"]
                                                                                      Filter Operator [FIL_786] (rows=287989836 width=135)
                                                                                        predicate:(cs_item_sk is not null and cs_sold_date_sk is not null)
                                                                                        TableScan [TS_32] (rows=287989836 width=135)
                                                                                          default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:NONE,Output:["cs_sold_date_sk","cs_item_sk"]
                                                                <-Reducer 41 [CONTAINS]
                                                                  Reduce Output Operator [RS_267]
                                                                    PartitionCols:_col0, _col1, _col2
                                                                    Group By Operator [GBY_266] (rows=609832849 width=108)
                                                                      Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                      Group By Operator [GBY_262] (rows=87121617 width=135)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                      <-Reducer 40 [SIMPLE_EDGE]
                                                                        SHUFFLE [RS_261]
                                                                          PartitionCols:_col0, _col1, _col2
                                                                          Group By Operator [GBY_260] (rows=174243235 width=135)
                                                                            Output:["_col0","_col1","_col2","_col3"],aggregations:["count()"],keys:_col5, _col6, _col7
                                                                            Merge Join Operator [MERGEJOIN_875] (rows=174243235 width=135)
                                                                              Conds:RS_256._col1=RS_257._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                            <-Map 21 [SIMPLE_EDGE]
                                                                              SHUFFLE [RS_257]
                                                                                PartitionCols:_col0
                                                                                Select Operator [SEL_252] (rows=462000 width=1436)
                                                                                  Output:["_col0","_col1","_col2","_col3"]
                                                                                  Filter Operator [FIL_816] (rows=462000 width=1436)
                                                                                    predicate:(i_item_sk is not null and i_brand_id is not null and i_class_id is not null and i_category_id is not null)
                                                                                     Please refer to the previous TableScan [TS_6]
                                                                            <-Reducer 66 [SIMPLE_EDGE]
                                                                              SHUFFLE [RS_256]
                                                                                PartitionCols:_col1
                                                                                Merge Join Operator [MERGEJOIN_874] (rows=158402938 width=135)
                                                                                  Conds:RS_253._col0=RS_254._col0(Inner),Output:["_col1"]
                                                                                <-Map 56 [SIMPLE_EDGE]
                                                                                  SHUFFLE [RS_254]
                                                                                    PartitionCols:_col0
                                                                                     Please refer to the previous Select Operator [SEL_17]
                                                                                <-Map 82 [SIMPLE_EDGE]
                                                                                  SHUFFLE [RS_253]
                                                                                    PartitionCols:_col0
                                                                                    Select Operator [SEL_55] (rows=144002668 width=135)
                                                                                      Output:["_col0","_col1"]
                                                                                      Filter Operator [FIL_789] (rows=144002668 width=135)
                                                                                        predicate:(ws_item_sk is not null and ws_sold_date_sk is not null)
                                                                                        TableScan [TS_53] (rows=144002668 width=135)
                                                                                          default@web_sales,web_sales,Tbl:COMPLETE,Col:NONE,Output:["ws_sold_date_sk","ws_item_sk"]
                                <-Reducer 69 [CUSTOM_SIMPLE_EDGE]
                                  PARTITION_ONLY_SHUFFLE [RS_337]
                                    Select Operator [SEL_335] (rows=1 width=8)
                                      Filter Operator [FIL_334] (rows=1 width=8)
                                        predicate:(sq_count_check(_col0) <= 1)
                                        Group By Operator [GBY_332] (rows=1 width=8)
                                          Output:["_col0"],aggregations:["count()"]
                                          Select Operator [SEL_327] (rows=1 width=8)
                                            Group By Operator [GBY_326] (rows=1 width=8)
                                              Output:["_col0"],aggregations:["count(VALUE._col0)"]
                                            <-Union 68 [CUSTOM_SIMPLE_EDGE]
                                              <-Reducer 67 [CONTAINS]
                                                Reduce Output Operator [RS_325]
                                                  Group By Operator [GBY_324] (rows=1 width=8)
                                                    Output:["_col0"],aggregations:["count(_col0)"]
                                                    Select Operator [SEL_323] (rows=1108786976 width=108)
                                                      Output:["_col0"]
                                                      Select Operator [SEL_301] (rows=633595212 width=88)
                                                        Output:["_col0"]
                                                        Merge Join Operator [MERGEJOIN_878] (rows=633595212 width=88)
                                                          Conds:RS_298._col0=RS_299._col0(Inner),Output:["_col1"]
                                                        <-Map 56 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_299]
                                                            PartitionCols:_col0
                                                             Please refer to the previous Select Operator [SEL_17]
                                                        <-Map 83 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_298]
                                                            PartitionCols:_col0
                                                            Select Operator [SEL_103] (rows=575995635 width=88)
                                                              Output:["_col0","_col1"]
                                                              Filter Operator [FIL_792] (rows=575995635 width=88)
                                                                predicate:ss_sold_date_sk is not null
                                                                TableScan [TS_101] (rows=575995635 width=88)
                                                                  default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_quantity"]
                                              <-Reducer 86 [CONTAINS]
                                                Reduce Output Operator [RS_325]
                                                  Group By Operator [GBY_324] (rows=1 width=8)
                                                    Output:["_col0"],aggregations:["count(_col0)"]
                                                    Select Operator [SEL_323] (rows=1108786976 width=108)
                                                      Output:["_col0"]
                                                      Select Operator [SEL_311] (rows=316788826 width=135)
                                                        Output:["_col0"]
                                                        Merge Join Operator [MERGEJOIN_879] (rows=316788826 width=135)
                                                          Conds:RS_308._col0=RS_309._col0(Inner),Output:["_col1"]
                                                        <-Map 88 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_309]
                                                            PartitionCols:_col0
                                                            Select Operator [SEL_116] (rows=8116 width=1119)
                                                              Output:["_col0"]
                                                              Filter Operator [FIL_795] (rows=8116 width=1119)
                                                                predicate:(d_year BETWEEN 1998 AND 2000 and d_date_sk is not null)
                                                                TableScan [TS_114] (rows=73049 width=1119)
                                                                  default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year"]
                                                        <-Map 84 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_308]
                                                            PartitionCols:_col0
                                                            Select Operator [SEL_113] (rows=287989836 width=135)
                                                              Output:["_col0","_col1"]
                                                              Filter Operator [FIL_794] (rows=287989836 width=135)
                                                                predicate:cs_sold_date_sk is not null
                                                                TableScan [TS_111] (rows=287989836 width=135)
                                                                  default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:NONE,Output:["cs_sold_date_sk","cs_quantity"]
                                              <-Reducer 94 [CONTAINS]
                                                Reduce Output Operator [RS_325]
                                                  Group By Operator [GBY_324] (rows=1 width=8)
                                                    Output:["_col0"],aggregations:["count(_col0)"]
                                                    Select Operator [SEL_323] (rows=1108786976 width=108)
                                                      Output:["_col0"]
                                                      Select Operator [SEL_322] (rows=158402938 width=135)
                                                        Output:["_col0"]
                                                        Merge Join Operator [MERGEJOIN_880] (rows=158402938 width=135)
                                                          Conds:RS_319._col0=RS_320._col0(Inner),Output:["_col1"]
                                                        <-Map 96 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_320]
                                                            PartitionCols:_col0
                                                            Select Operator [SEL_127] (rows=8116 width=1119)
                                                              Output:["_col0"]
                                                              Filter Operator [FIL_797] (rows=8116 width=1119)
                                                                predicate:(d_year BETWEEN 1998 AND 2000 and d_date_sk is not null)
                                                                TableScan [TS_125] (rows=73049 width=1119)
                                                                  default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year"]
                                                        <-Map 92 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_319]
                                                            PartitionCols:_col0
                                                            Select Operator [SEL_124] (rows=144002668 width=135)
                                                              Output:["_col0","_col1"]
                                                              Filter Operator [FIL_796] (rows=144002668 width=135)
                                                                predicate:ws_sold_date_sk is not null
                                                                TableScan [TS_122] (rows=144002668 width=135)
                                                                  default@web_sales,web_sales,Tbl:COMPLETE,Col:NONE,Output:["ws_sold_date_sk","ws_quantity"]
                            <-Reducer 72 [CUSTOM_SIMPLE_EDGE]
                              PARTITION_ONLY_SHUFFLE [RS_378]
                                Group By Operator [GBY_375] (rows=1 width=288)
                                  Output:["_col0"],aggregations:["avg(VALUE._col0)"]
                                <-Union 71 [CUSTOM_SIMPLE_EDGE]
                                  <-Reducer 70 [CONTAINS]
                                    Reduce Output Operator [RS_374]
                                      Group By Operator [GBY_373] (rows=1 width=288)
                                        Output:["_col0"],aggregations:["avg(_col0)"]
                                        Select Operator [SEL_371] (rows=1108786976 width=108)
                                          Output:["_col0"]
                                          Select Operator [SEL_349] (rows=633595212 width=88)
                                            Output:["_col0","_col1"]
                                            Merge Join Operator [MERGEJOIN_881] (rows=633595212 width=88)
                                              Conds:RS_346._col0=RS_347._col0(Inner),Output:["_col1","_col2"]
                                            <-Map 56 [SIMPLE_EDGE]
                                              SHUFFLE [RS_347]
                                                PartitionCols:_col0
                                                 Please refer to the previous Select Operator [SEL_17]
                                            <-Map 100 [SIMPLE_EDGE]
                                              SHUFFLE [RS_346]
                                                PartitionCols:_col0
                                                Select Operator [SEL_151] (rows=575995635 width=88)
                                                  Output:["_col0","_col1","_col2"]
                                                  Filter Operator [FIL_798] (rows=575995635 width=88)
                                                    predicate:ss_sold_date_sk is not null
                                                    TableScan [TS_149] (rows=575995635 width=88)
                                                      default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_quantity","ss_list_price"]
                                  <-Reducer 90 [CONTAINS]
                                    Reduce Output Operator [RS_374]
                                      Group By Operator [GBY_373] (rows=1 width=288)
                                        Output:["_col0"],aggregations:["avg(_col0)"]
                                        Select Operator [SEL_371] (rows=1108786976 width=108)
                                          Output:["_col0"]
                                          Select Operator [SEL_359] (rows=316788826 width=135)
                                            Output:["_col0","_col1"]
                                            Merge Join Operator [MERGEJOIN_882] (rows=316788826 width=135)
                                              Conds:RS_356._col0=RS_357._col0(Inner),Output:["_col1","_col2"]
                                            <-Map 88 [SIMPLE_EDGE]
                                              SHUFFLE [RS_357]
                                                PartitionCols:_col0
                                                 Please refer to the previous Select Operator [SEL_116]
                                            <-Map 101 [SIMPLE_EDGE]
                                              SHUFFLE [RS_356]
                                                PartitionCols:_col0
                                                Select Operator [SEL_161] (rows=287989836 width=135)
                                                  Output:["_col0","_col1","_col2"]
                                                  Filter Operator [FIL_800] (rows=287989836 width=135)
                                                    predicate:cs_sold_date_sk is not null
                                                    TableScan [TS_159] (rows=287989836 width=135)
                                                      default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:NONE,Output:["cs_sold_date_sk","cs_quantity","cs_list_price"]
                                  <-Reducer 98 [CONTAINS]
                                    Reduce Output Operator [RS_374]
                                      Group By Operator [GBY_373] (rows=1 width=288)
                                        Output:["_col0"],aggregations:["avg(_col0)"]
                                        Select Operator [SEL_371] (rows=1108786976 width=108)
                                          Output:["_col0"]
                                          Select Operator [SEL_370] (rows=158402938 width=135)
                                            Output:["_col0","_col1"]
                                            Merge Join Operator [MERGEJOIN_883] (rows=158402938 width=135)
                                              Conds:RS_367._col0=RS_368._col0(Inner),Output:["_col1","_col2"]
                                            <-Map 96 [SIMPLE_EDGE]
                                              SHUFFLE [RS_368]
                                                PartitionCols:_col0
                                                 Please refer to the previous Select Operator [SEL_127]
                                            <-Map 102 [SIMPLE_EDGE]
                                              SHUFFLE [RS_367]
                                                PartitionCols:_col0
                                                Select Operator [SEL_172] (rows=144002668 width=135)
                                                  Output:["_col0","_col1","_col2"]
                                                  Filter Operator [FIL_802] (rows=144002668 width=135)
                                                    predicate:ws_sold_date_sk is not null
                                                    TableScan [TS_170] (rows=144002668 width=135)
                                                      default@web_sales,web_sales,Tbl:COMPLETE,Col:NONE,Output:["ws_sold_date_sk","ws_quantity","ws_list_price"]
                  <-Reducer 20 [CONTAINS]
                    Reduce Output Operator [RS_577]
                      PartitionCols:_col0, _col1, _col2, _col3, _col4
                      Group By Operator [GBY_576] (rows=2032776160 width=406)
                        Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],aggregations:["sum(_col4)","sum(_col5)"],keys:_col0, _col1, _col2, _col3, 0
                        Select Operator [SEL_573] (rows=58081078 width=433)
                          Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                          Filter Operator [FIL_572] (rows=58081078 width=433)
                            predicate:(_col3 > _col5)
                            Merge Join Operator [MERGEJOIN_904] (rows=174243235 width=433)
                              Conds:(Inner),Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                            <-Reducer 19 [CUSTOM_SIMPLE_EDGE]
                              PARTITION_ONLY_SHUFFLE [RS_569]
                                Merge Join Operator [MERGEJOIN_901] (rows=174243235 width=144)
                                  Conds:(Inner),Output:["_col0","_col1","_col2","_col3","_col4"]
                                <-Reducer 18 [CUSTOM_SIMPLE_EDGE]
                                  PARTITION_ONLY_SHUFFLE [RS_528]
                                    Group By Operator [GBY_482] (rows=174243235 width=135)
                                      Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(VALUE._col0)","count(VALUE._col1)"],keys:KEY._col0, KEY._col1, KEY._col2
                                    <-Reducer 17 [SIMPLE_EDGE]
                                      SHUFFLE [RS_481]
                                        PartitionCols:_col0, _col1, _col2
                                        Group By Operator [GBY_480] (rows=348486471 width=135)
                                          Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(_col3)","count()"],keys:_col0, _col1, _col2
                                          Select Operator [SEL_478] (rows=348486471 width=135)
                                            Output:["_col0","_col1","_col2","_col3"]
                                            Merge Join Operator [MERGEJOIN_892] (rows=348486471 width=135)
                                              Conds:RS_474._col1=RS_475._col0(Inner),RS_474._col1=RS_476._col0(Inner),Output:["_col2","_col3","_col8","_col9","_col10"]
                                            <-Map 21 [SIMPLE_EDGE]
                                              SHUFFLE [RS_475]
                                                PartitionCols:_col0
                                                Select Operator [SEL_391] (rows=462000 width=1436)
                                                  Output:["_col0","_col1","_col2","_col3"]
                                                  Filter Operator [FIL_831] (rows=462000 width=1436)
                                                    predicate:i_item_sk is not null
                                                     Please refer to the previous TableScan [TS_6]
                                            <-Reducer 16 [SIMPLE_EDGE]
                                              SHUFFLE [RS_474]
                                                PartitionCols:_col1
                                                Merge Join Operator [MERGEJOIN_884] (rows=158402938 width=135)
                                                  Conds:RS_471._col0=RS_472._col0(Inner),Output:["_col1","_col2","_col3"]
                                                <-Map 10 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_472]
                                                    PartitionCols:_col0
                                                     Please refer to the previous Select Operator [SEL_5]
                                                <-Map 104 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_471]
                                                    PartitionCols:_col0
                                                    Select Operator [SEL_385] (rows=144002668 width=135)
                                                      Output:["_col0","_col1","_col2","_col3"]
                                                      Filter Operator [FIL_829] (rows=144002668 width=135)
                                                        predicate:(ws_item_sk is not null and ws_sold_date_sk is not null)
                                                        TableScan [TS_383] (rows=144002668 width=135)
                                                          default@web_sales,web_sales,Tbl:COMPLETE,Col:NONE,Output:["ws_sold_date_sk","ws_item_sk","ws_quantity","ws_list_price"]
                                            <-Reducer 43 [SIMPLE_EDGE]
                                              SHUFFLE [RS_476]
                                                PartitionCols:_col0
                                                Group By Operator [GBY_469] (rows=254100 width=1436)
                                                  Output:["_col0"],keys:KEY._col0
                                                <-Reducer 42 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_468]
                                                    PartitionCols:_col0
                                                    Group By Operator [GBY_467] (rows=508200 width=1436)
                                                      Output:["_col0"],keys:_col0
                                                      Merge Join Operator [MERGEJOIN_891] (rows=508200 width=1436)
                                                        Conds:RS_463._col1, _col2, _col3=RS_464._col0, _col1, _col2(Inner),Output:["_col0"]
                                                      <-Map 21 [SIMPLE_EDGE]
                                                        SHUFFLE [RS_463]
                                                          PartitionCols:_col1, _col2, _col3
                                                          Select Operator [SEL_394] (rows=462000 width=1436)
                                                            Output:["_col0","_col1","_col2","_col3"]
                                                            Filter Operator [FIL_832] (rows=462000 width=1436)
                                                              predicate:(i_brand_id is not null and i_class_id is not null and i_category_id is not null and i_item_sk is not null)
                                                               Please refer to the previous TableScan [TS_6]
                                                      <-Reducer 47 [SIMPLE_EDGE]
                                                        SHUFFLE [RS_464]
                                                          PartitionCols:_col0, _col1, _col2
                                                          Select Operator [SEL_462] (rows=1 width=108)
                                                            Output:["_col0","_col1","_col2"]
                                                            Filter Operator [FIL_461] (rows=1 width=108)
                                                              predicate:(_col3 = 3)
                                                              Group By Operator [GBY_460] (rows=304916424 width=108)
                                                                Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                              <-Union 46 [SIMPLE_EDGE]
                                                                <-Reducer 45 [CONTAINS]
                                                                  Reduce Output Operator [RS_459]
                                                                    PartitionCols:_col0, _col1, _col2
                                                                    Group By Operator [GBY_458] (rows=609832849 width=108)
                                                                      Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                      Group By Operator [GBY_413] (rows=348477374 width=88)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                      <-Reducer 44 [SIMPLE_EDGE]
                                                                        SHUFFLE [RS_412]
                                                                          PartitionCols:_col0, _col1, _col2
                                                                          Group By Operator [GBY_411] (rows=696954748 width=88)
                                                                            Output:["_col0","_col1","_col2","_col3"],aggregations:["count()"],keys:_col5, _col6, _col7
                                                                            Merge Join Operator [MERGEJOIN_886] (rows=696954748 width=88)
                                                                              Conds:RS_407._col1=RS_408._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                            <-Map 21 [SIMPLE_EDGE]
                                                                              SHUFFLE [RS_408]
                                                                                PartitionCols:_col0
                                                                                Select Operator [SEL_403] (rows=462000 width=1436)
                                                                                  Output:["_col0","_col1","_col2","_col3"]
                                                                                  Filter Operator [FIL_835] (rows=462000 width=1436)
                                                                                    predicate:(i_item_sk is not null and i_brand_id is not null and i_class_id is not null and i_category_id is not null)
                                                                                     Please refer to the previous TableScan [TS_6]
                                                                            <-Reducer 55 [SIMPLE_EDGE]
                                                                              SHUFFLE [RS_407]
                                                                                PartitionCols:_col1
                                                                                Merge Join Operator [MERGEJOIN_885] (rows=633595212 width=88)
                                                                                  Conds:RS_404._col0=RS_405._col0(Inner),Output:["_col1"]
                                                                                <-Map 56 [SIMPLE_EDGE]
                                                                                  SHUFFLE [RS_405]
                                                                                    PartitionCols:_col0
                                                                                     Please refer to the previous Select Operator [SEL_17]
                                                                                <-Map 52 [SIMPLE_EDGE]
                                                                                  SHUFFLE [RS_404]
                                                                                    PartitionCols:_col0
                                                                                     Please refer to the previous Select Operator [SEL_14]
                                                                <-Reducer 49 [CONTAINS]
                                                                  Reduce Output Operator [RS_459]
                                                                    PartitionCols:_col0, _col1, _col2
                                                                    Group By Operator [GBY_458] (rows=609832849 width=108)
                                                                      Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                      Group By Operator [GBY_433] (rows=174233858 width=135)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                      <-Reducer 48 [SIMPLE_EDGE]
                                                                        SHUFFLE [RS_432]
                                                                          PartitionCols:_col0, _col1, _col2
                                                                          Group By Operator [GBY_431] (rows=348467716 width=135)
                                                                            Output:["_col0","_col1","_col2","_col3"],aggregations:["count()"],keys:_col5, _col6, _col7
                                                                            Merge Join Operator [MERGEJOIN_888] (rows=348467716 width=135)
                                                                              Conds:RS_427._col1=RS_428._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                            <-Map 21 [SIMPLE_EDGE]
                                                                              SHUFFLE [RS_428]
                                                                                PartitionCols:_col0
                                                                                Select Operator [SEL_423] (rows=462000 width=1436)
                                                                                  Output:["_col0","_col1","_col2","_col3"]
                                                                                  Filter Operator [FIL_838] (rows=462000 width=1436)
                                                                                    predicate:(i_item_sk is not null and i_brand_id is not null and i_class_id is not null and i_category_id is not null)
                                                                                     Please refer to the previous TableScan [TS_6]
                                                                            <-Reducer 73 [SIMPLE_EDGE]
                                                                              SHUFFLE [RS_427]
                                                                                PartitionCols:_col1
                                                                                Merge Join Operator [MERGEJOIN_887] (rows=316788826 width=135)
                                                                                  Conds:RS_424._col0=RS_425._col0(Inner),Output:["_col1"]
                                                                                <-Map 56 [SIMPLE_EDGE]
                                                                                  SHUFFLE [RS_425]
                                                                                    PartitionCols:_col0
                                                                                     Please refer to the previous Select Operator [SEL_17]
                                                                                <-Map 81 [SIMPLE_EDGE]
                                                                                  SHUFFLE [RS_424]
                                                                                    PartitionCols:_col0
                                                                                     Please refer to the previous Select Operator [SEL_34]
                                                                <-Reducer 51 [CONTAINS]
                                                                  Reduce Output Operator [RS_459]
                                                                    PartitionCols:_col0, _col1, _col2
                                                                    Group By Operator [GBY_458] (rows=609832849 width=108)
                                                                      Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                      Group By Operator [GBY_454] (rows=87121617 width=135)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                      <-Reducer 50 [SIMPLE_EDGE]
                                                                        SHUFFLE [RS_453]
                                                                          PartitionCols:_col0, _col1, _col2
                                                                          Group By Operator [GBY_452] (rows=174243235 width=135)
                                                                            Output:["_col0","_col1","_col2","_col3"],aggregations:["count()"],keys:_col5, _col6, _col7
                                                                            Merge Join Operator [MERGEJOIN_890] (rows=174243235 width=135)
                                                                              Conds:RS_448._col1=RS_449._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                            <-Map 21 [SIMPLE_EDGE]
                                                                              SHUFFLE [RS_449]
                                                                                PartitionCols:_col0
                                                                                Select Operator [SEL_444] (rows=462000 width=1436)
                                                                                  Output:["_col0","_col1","_col2","_col3"]
                                                                                  Filter Operator [FIL_841] (rows=462000 width=1436)
                                                                                    predicate:(i_item_sk is not null and i_brand_id is not null and i_class_id is not null and i_category_id is not null)
                                                                                     Please refer to the previous TableScan [TS_6]
                                                                            <-Reducer 74 [SIMPLE_EDGE]
                                                                              SHUFFLE [RS_448]
                                                                                PartitionCols:_col1
                                                                                Merge Join Operator [MERGEJOIN_889] (rows=158402938 width=135)
                                                                                  Conds:RS_445._col0=RS_446._col0(Inner),Output:["_col1"]
                                                                                <-Map 56 [SIMPLE_EDGE]
                                                                                  SHUFFLE [RS_446]
                                                                                    PartitionCols:_col0
                                                                                     Please refer to the previous Select Operator [SEL_17]
                                                                                <-Map 82 [SIMPLE_EDGE]
                                                                                  SHUFFLE [RS_445]
                                                                                    PartitionCols:_col0
                                                                                     Please refer to the previous Select Operator [SEL_55]
                                <-Reducer 77 [CUSTOM_SIMPLE_EDGE]
                                  PARTITION_ONLY_SHUFFLE [RS_529]
                                    Select Operator [SEL_527] (rows=1 width=8)
                                      Filter Operator [FIL_526] (rows=1 width=8)
                                        predicate:(sq_count_check(_col0) <= 1)
                                        Group By Operator [GBY_524] (rows=1 width=8)
                                          Output:["_col0"],aggregations:["count()"]
                                          Select Operator [SEL_519] (rows=1 width=8)
                                            Group By Operator [GBY_518] (rows=1 width=8)
                                              Output:["_col0"],aggregations:["count(VALUE._col0)"]
                                            <-Union 76 [CUSTOM_SIMPLE_EDGE]
                                              <-Reducer 75 [CONTAINS]
                                                Reduce Output Operator [RS_517]
                                                  Group By Operator [GBY_516] (rows=1 width=8)
                                                    Output:["_col0"],aggregations:["count(_col0)"]
                                                    Select Operator [SEL_515] (rows=1108786976 width=108)
                                                      Output:["_col0"]
                                                      Select Operator [SEL_493] (rows=633595212 width=88)
                                                        Output:["_col0"]
                                                        Merge Join Operator [MERGEJOIN_893] (rows=633595212 width=88)
                                                          Conds:RS_490._col0=RS_491._col0(Inner),Output:["_col1"]
                                                        <-Map 56 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_491]
                                                            PartitionCols:_col0
                                                             Please refer to the previous Select Operator [SEL_17]
                                                        <-Map 83 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_490]
                                                            PartitionCols:_col0
                                                             Please refer to the previous Select Operator [SEL_103]
                                              <-Reducer 87 [CONTAINS]
                                                Reduce Output Operator [RS_517]
                                                  Group By Operator [GBY_516] (rows=1 width=8)
                                                    Output:["_col0"],aggregations:["count(_col0)"]
                                                    Select Operator [SEL_515] (rows=1108786976 width=108)
                                                      Output:["_col0"]
                                                      Select Operator [SEL_503] (rows=316788826 width=135)
                                                        Output:["_col0"]
                                                        Merge Join Operator [MERGEJOIN_894] (rows=316788826 width=135)
                                                          Conds:RS_500._col0=RS_501._col0(Inner),Output:["_col1"]
                                                        <-Map 88 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_501]
                                                            PartitionCols:_col0
                                                             Please refer to the previous Select Operator [SEL_116]
                                                        <-Map 84 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_500]
                                                            PartitionCols:_col0
                                                             Please refer to the previous Select Operator [SEL_113]
                                              <-Reducer 95 [CONTAINS]
                                                Reduce Output Operator [RS_517]
                                                  Group By Operator [GBY_516] (rows=1 width=8)
                                                    Output:["_col0"],aggregations:["count(_col0)"]
                                                    Select Operator [SEL_515] (rows=1108786976 width=108)
                                                      Output:["_col0"]
                                                      Select Operator [SEL_514] (rows=158402938 width=135)
                                                        Output:["_col0"]
                                                        Merge Join Operator [MERGEJOIN_895] (rows=158402938 width=135)
                                                          Conds:RS_511._col0=RS_512._col0(Inner),Output:["_col1"]
                                                        <-Map 96 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_512]
                                                            PartitionCols:_col0
                                                             Please refer to the previous Select Operator [SEL_127]
                                                        <-Map 92 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_511]
                                                            PartitionCols:_col0
                                                             Please refer to the previous Select Operator [SEL_124]
                            <-Reducer 80 [CUSTOM_SIMPLE_EDGE]
                              PARTITION_ONLY_SHUFFLE [RS_570]
                                Group By Operator [GBY_567] (rows=1 width=288)
                                  Output:["_col0"],aggregations:["avg(VALUE._col0)"]
                                <-Union 79 [CUSTOM_SIMPLE_EDGE]
                                  <-Reducer 78 [CONTAINS]
                                    Reduce Output Operator [RS_566]
                                      Group By Operator [GBY_565] (rows=1 width=288)
                                        Output:["_col0"],aggregations:["avg(_col0)"]
                                        Select Operator [SEL_563] (rows=1108786976 width=108)
                                          Output:["_col0"]
                                          Select Operator [SEL_541] (rows=633595212 width=88)
                                            Output:["_col0","_col1"]
                                            Merge Join Operator [MERGEJOIN_896] (rows=633595212 width=88)
                                              Conds:RS_538._col0=RS_539._col0(Inner),Output:["_col1","_col2"]
                                            <-Map 56 [SIMPLE_EDGE]
                                              SHUFFLE [RS_539]
                                                PartitionCols:_col0
                                                 Please refer to the previous Select Operator [SEL_17]
                                            <-Map 100 [SIMPLE_EDGE]
                                              SHUFFLE [RS_538]
                                                PartitionCols:_col0
                                                 Please refer to the previous Select Operator [SEL_151]
                                  <-Reducer 91 [CONTAINS]
                                    Reduce Output Operator [RS_566]
                                      Group By Operator [GBY_565] (rows=1 width=288)
                                        Output:["_col0"],aggregations:["avg(_col0)"]
                                        Select Operator [SEL_563] (rows=1108786976 width=108)
                                          Output:["_col0"]
                                          Select Operator [SEL_551] (rows=316788826 width=135)
                                            Output:["_col0","_col1"]
                                            Merge Join Operator [MERGEJOIN_897] (rows=316788826 width=135)
                                              Conds:RS_548._col0=RS_549._col0(Inner),Output:["_col1","_col2"]
                                            <-Map 88 [SIMPLE_EDGE]
                                              SHUFFLE [RS_549]
                                                PartitionCols:_col0
                                                 Please refer to the previous Select Operator [SEL_116]
                                            <-Map 101 [SIMPLE_EDGE]
                                              SHUFFLE [RS_548]
                                                PartitionCols:_col0
                                                 Please refer to the previous Select Operator [SEL_161]
                                  <-Reducer 99 [CONTAINS]
                                    Reduce Output Operator [RS_566]
                                      Group By Operator [GBY_565] (rows=1 width=288)
                                        Output:["_col0"],aggregations:["avg(_col0)"]
                                        Select Operator [SEL_563] (rows=1108786976 width=108)
                                          Output:["_col0"]
                                          Select Operator [SEL_562] (rows=158402938 width=135)
                                            Output:["_col0","_col1"]
                                            Merge Join Operator [MERGEJOIN_898] (rows=158402938 width=135)
                                              Conds:RS_559._col0=RS_560._col0(Inner),Output:["_col1","_col2"]
                                            <-Map 96 [SIMPLE_EDGE]
                                              SHUFFLE [RS_560]
                                                PartitionCols:_col0
                                                 Please refer to the previous Select Operator [SEL_127]
                                            <-Map 102 [SIMPLE_EDGE]
                                              SHUFFLE [RS_559]
                                                PartitionCols:_col0
                                                 Please refer to the previous Select Operator [SEL_172]
                  <-Reducer 6 [CONTAINS]
                    Reduce Output Operator [RS_577]
                      PartitionCols:_col0, _col1, _col2, _col3, _col4
                      Group By Operator [GBY_576] (rows=2032776160 width=406)
                        Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],aggregations:["sum(_col4)","sum(_col5)"],keys:_col0, _col1, _col2, _col3, 0
                        Select Operator [SEL_190] (rows=232318249 width=386)
                          Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                          Filter Operator [FIL_189] (rows=232318249 width=386)
                            predicate:(_col3 > _col5)
                            Merge Join Operator [MERGEJOIN_902] (rows=696954748 width=386)
                              Conds:(Inner),Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                            <-Reducer 5 [CUSTOM_SIMPLE_EDGE]
                              PARTITION_ONLY_SHUFFLE [RS_186]
                                Merge Join Operator [MERGEJOIN_899] (rows=696954748 width=97)
                                  Conds:(Inner),Output:["_col0","_col1","_col2","_col3","_col4"]
                                <-Reducer 4 [CUSTOM_SIMPLE_EDGE]
                                  PARTITION_ONLY_SHUFFLE [RS_145]
                                    Group By Operator [GBY_99] (rows=696954748 width=88)
                                      Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(VALUE._col0)","count(VALUE._col1)"],keys:KEY._col0, KEY._col1, KEY._col2
                                    <-Reducer 3 [SIMPLE_EDGE]
                                      SHUFFLE [RS_98]
                                        PartitionCols:_col0, _col1, _col2
                                        Group By Operator [GBY_97] (rows=1393909496 width=88)
                                          Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(_col3)","count()"],keys:_col0, _col1, _col2
                                          Select Operator [SEL_95] (rows=1393909496 width=88)
                                            Output:["_col0","_col1","_col2","_col3"]
                                            Merge Join Operator [MERGEJOIN_862] (rows=1393909496 width=88)
                                              Conds:RS_91._col1=RS_92._col0(Inner),RS_91._col1=RS_93._col0(Inner),Output:["_col2","_col3","_col8","_col9","_col10"]
                                            <-Map 21 [SIMPLE_EDGE]
                                              SHUFFLE [RS_92]
                                                PartitionCols:_col0
                                                Select Operator [SEL_8] (rows=462000 width=1436)
                                                  Output:["_col0","_col1","_col2","_col3"]
                                                  Filter Operator [FIL_781] (rows=462000 width=1436)
                                                    predicate:i_item_sk is not null
                                                     Please refer to the previous TableScan [TS_6]
                                            <-Reducer 2 [SIMPLE_EDGE]
                                              SHUFFLE [RS_91]
                                                PartitionCols:_col1
                                                Merge Join Operator [MERGEJOIN_854] (rows=633595212 width=88)
                                                  Conds:RS_88._col0=RS_89._col0(Inner),Output:["_col1","_col2","_col3"]
                                                <-Map 10 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_89]
                                                    PartitionCols:_col0
                                                     Please refer to the previous Select Operator [SEL_5]
                                                <-Map 1 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_88]
                                                    PartitionCols:_col0
                                                    Select Operator [SEL_2] (rows=575995635 width=88)
                                                      Output:["_col0","_col1","_col2","_col3"]
                                                      Filter Operator [FIL_779] (rows=575995635 width=88)
                                                        predicate:(ss_item_sk is not null and ss_sold_date_sk is not null)
                                                        TableScan [TS_0] (rows=575995635 width=88)
                                                          default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_item_sk","ss_quantity","ss_list_price"]
                                            <-Reducer 23 [SIMPLE_EDGE]
                                              SHUFFLE [RS_93]
                                                PartitionCols:_col0
                                                Group By Operator [GBY_86] (rows=254100 width=1436)
                                                  Output:["_col0"],keys:KEY._col0
                                                <-Reducer 22 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_85]
                                                    PartitionCols:_col0
                                                    Group By Operator [GBY_84] (rows=508200 width=1436)
                                                      Output:["_col0"],keys:_col0
                                                      Merge Join Operator [MERGEJOIN_861] (rows=508200 width=1436)
                                                        Conds:RS_80._col1, _col2, _col3=RS_81._col0, _col1, _col2(Inner),Output:["_col0"]
                                                      <-Map 21 [SIMPLE_EDGE]
                                                        SHUFFLE [RS_80]
                                                          PartitionCols:_col1, _col2, _col3
                                                          Select Operator [SEL_11] (rows=462000 width=1436)
                                                            Output:["_col0","_col1","_col2","_col3"]
                                                            Filter Operator [FIL_782] (rows=462000 width=1436)
                                                              predicate:(i_brand_id is not null and i_class_id is not null and i_category_id is not null and i_item_sk is not null)
                                                               Please refer to the previous TableScan [TS_6]
                                                      <-Reducer 27 [SIMPLE_EDGE]
                                                        SHUFFLE [RS_81]
                                                          PartitionCols:_col0, _col1, _col2
                                                          Select Operator [SEL_79] (rows=1 width=108)
                                                            Output:["_col0","_col1","_col2"]
                                                            Filter Operator [FIL_78] (rows=1 width=108)
                                                              predicate:(_col3 = 3)
                                                              Group By Operator [GBY_77] (rows=304916424 width=108)
                                                                Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                              <-Union 26 [SIMPLE_EDGE]
                                                                <-Reducer 25 [CONTAINS]
                                                                  Reduce Output Operator [RS_76]
                                                                    PartitionCols:_col0, _col1, _col2
                                                                    Group By Operator [GBY_75] (rows=609832849 width=108)
                                                                      Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                      Group By Operator [GBY_30] (rows=348477374 width=88)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                      <-Reducer 24 [SIMPLE_EDGE]
                                                                        SHUFFLE [RS_29]
                                                                          PartitionCols:_col0, _col1, _col2
                                                                          Group By Operator [GBY_28] (rows=696954748 width=88)
                                                                            Output:["_col0","_col1","_col2","_col3"],aggregations:["count()"],keys:_col5, _col6, _col7
                                                                            Merge Join Operator [MERGEJOIN_856] (rows=696954748 width=88)
                                                                              Conds:RS_24._col1=RS_25._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                            <-Map 21 [SIMPLE_EDGE]
                                                                              SHUFFLE [RS_25]
                                                                                PartitionCols:_col0
                                                                                Select Operator [SEL_20] (rows=462000 width=1436)
                                                                                  Output:["_col0","_col1","_col2","_col3"]
                                                                                  Filter Operator [FIL_785] (rows=462000 width=1436)
                                                                                    predicate:(i_item_sk is not null and i_brand_id is not null and i_class_id is not null and i_category_id is not null)
                                                                                     Please refer to the previous TableScan [TS_6]
                                                                            <-Reducer 53 [SIMPLE_EDGE]
                                                                              SHUFFLE [RS_24]
                                                                                PartitionCols:_col1
                                                                                Merge Join Operator [MERGEJOIN_855] (rows=633595212 width=88)
                                                                                  Conds:RS_21._col0=RS_22._col0(Inner),Output:["_col1"]
                                                                                <-Map 56 [SIMPLE_EDGE]
                                                                                  SHUFFLE [RS_22]
                                                                                    PartitionCols:_col0
                                                                                     Please refer to the previous Select Operator [SEL_17]
                                                                                <-Map 52 [SIMPLE_EDGE]
                                                                                  SHUFFLE [RS_21]
                                                                                    PartitionCols:_col0
                                                                                     Please refer to the previous Select Operator [SEL_14]
                                                                <-Reducer 29 [CONTAINS]
                                                                  Reduce Output Operator [RS_76]
                                                                    PartitionCols:_col0, _col1, _col2
                                                                    Group By Operator [GBY_75] (rows=609832849 width=108)
                                                                      Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                      Group By Operator [GBY_50] (rows=174233858 width=135)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                      <-Reducer 28 [SIMPLE_EDGE]
                                                                        SHUFFLE [RS_49]
                                                                          PartitionCols:_col0, _col1, _col2
                                                                          Group By Operator [GBY_48] (rows=348467716 width=135)
                                                                            Output:["_col0","_col1","_col2","_col3"],aggregations:["count()"],keys:_col5, _col6, _col7
                                                                            Merge Join Operator [MERGEJOIN_858] (rows=348467716 width=135)
                                                                              Conds:RS_44._col1=RS_45._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                            <-Map 21 [SIMPLE_EDGE]
                                                                              SHUFFLE [RS_45]
                                                                                PartitionCols:_col0
                                                                                Select Operator [SEL_40] (rows=462000 width=1436)
                                                                                  Output:["_col0","_col1","_col2","_col3"]
                                                                                  Filter Operator [FIL_788] (rows=462000 width=1436)
                                                                                    predicate:(i_item_sk is not null and i_brand_id is not null and i_class_id is not null and i_category_id is not null)
                                                                                     Please refer to the previous TableScan [TS_6]
                                                                            <-Reducer 57 [SIMPLE_EDGE]
                                                                              SHUFFLE [RS_44]
                                                                                PartitionCols:_col1
                                                                                Merge Join Operator [MERGEJOIN_857] (rows=316788826 width=135)
                                                                                  Conds:RS_41._col0=RS_42._col0(Inner),Output:["_col1"]
                                                                                <-Map 56 [SIMPLE_EDGE]
                                                                                  SHUFFLE [RS_42]
                                                                                    PartitionCols:_col0
                                                                                     Please refer to the previous Select Operator [SEL_17]
                                                                                <-Map 81 [SIMPLE_EDGE]
                                                                                  SHUFFLE [RS_41]
                                                                                    PartitionCols:_col0
                                                                                     Please refer to the previous Select Operator [SEL_34]
                                                                <-Reducer 31 [CONTAINS]
                                                                  Reduce Output Operator [RS_76]
                                                                    PartitionCols:_col0, _col1, _col2
                                                                    Group By Operator [GBY_75] (rows=609832849 width=108)
                                                                      Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                      Group By Operator [GBY_71] (rows=87121617 width=135)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                      <-Reducer 30 [SIMPLE_EDGE]
                                                                        SHUFFLE [RS_70]
                                                                          PartitionCols:_col0, _col1, _col2
                                                                          Group By Operator [GBY_69] (rows=174243235 width=135)
                                                                            Output:["_col0","_col1","_col2","_col3"],aggregations:["count()"],keys:_col5, _col6, _col7
                                                                            Merge Join Operator [MERGEJOIN_860] (rows=174243235 width=135)
                                                                              Conds:RS_65._col1=RS_66._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                            <-Map 21 [SIMPLE_EDGE]
                                                                              SHUFFLE [RS_66]
                                                                                PartitionCols:_col0
                                                                                Select Operator [SEL_61] (rows=462000 width=1436)
                                                                                  Output:["_col0","_col1","_col2","_col3"]
                                                                                  Filter Operator [FIL_791] (rows=462000 width=1436)
                                                                                    predicate:(i_item_sk is not null and i_brand_id is not null and i_class_id is not null and i_category_id is not null)
                                                                                     Please refer to the previous TableScan [TS_6]
                                                                            <-Reducer 58 [SIMPLE_EDGE]
                                                                              SHUFFLE [RS_65]
                                                                                PartitionCols:_col1
                                                                                Merge Join Operator [MERGEJOIN_859] (rows=158402938 width=135)
                                                                                  Conds:RS_62._col0=RS_63._col0(Inner),Output:["_col1"]
                                                                                <-Map 56 [SIMPLE_EDGE]
                                                                                  SHUFFLE [RS_63]
                                                                                    PartitionCols:_col0
                                                                                     Please refer to the previous Select Operator [SEL_17]
                                                                                <-Map 82 [SIMPLE_EDGE]
                                                                                  SHUFFLE [RS_62]
                                                                                    PartitionCols:_col0
                                                                                     Please refer to the previous Select Operator [SEL_55]
                                <-Reducer 61 [CUSTOM_SIMPLE_EDGE]
                                  PARTITION_ONLY_SHUFFLE [RS_146]
                                    Select Operator [SEL_144] (rows=1 width=8)
                                      Filter Operator [FIL_143] (rows=1 width=8)
                                        predicate:(sq_count_check(_col0) <= 1)
                                        Group By Operator [GBY_141] (rows=1 width=8)
                                          Output:["_col0"],aggregations:["count()"]
                                          Select Operator [SEL_136] (rows=1 width=8)
                                            Group By Operator [GBY_135] (rows=1 width=8)
                                              Output:["_col0"],aggregations:["count(VALUE._col0)"]
                                            <-Union 60 [CUSTOM_SIMPLE_EDGE]
                                              <-Reducer 59 [CONTAINS]
                                                Reduce Output Operator [RS_134]
                                                  Group By Operator [GBY_133] (rows=1 width=8)
                                                    Output:["_col0"],aggregations:["count(_col0)"]
                                                    Select Operator [SEL_132] (rows=1108786976 width=108)
                                                      Output:["_col0"]
                                                      Select Operator [SEL_110] (rows=633595212 width=88)
                                                        Output:["_col0"]
                                                        Merge Join Operator [MERGEJOIN_863] (rows=633595212 width=88)
                                                          Conds:RS_107._col0=RS_108._col0(Inner),Output:["_col1"]
                                                        <-Map 56 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_108]
                                                            PartitionCols:_col0
                                                             Please refer to the previous Select Operator [SEL_17]
                                                        <-Map 83 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_107]
                                                            PartitionCols:_col0
                                                             Please refer to the previous Select Operator [SEL_103]
                                              <-Reducer 85 [CONTAINS]
                                                Reduce Output Operator [RS_134]
                                                  Group By Operator [GBY_133] (rows=1 width=8)
                                                    Output:["_col0"],aggregations:["count(_col0)"]
                                                    Select Operator [SEL_132] (rows=1108786976 width=108)
                                                      Output:["_col0"]
                                                      Select Operator [SEL_120] (rows=316788826 width=135)
                                                        Output:["_col0"]
                                                        Merge Join Operator [MERGEJOIN_864] (rows=316788826 width=135)
                                                          Conds:RS_117._col0=RS_118._col0(Inner),Output:["_col1"]
                                                        <-Map 88 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_118]
                                                            PartitionCols:_col0
                                                             Please refer to the previous Select Operator [SEL_116]
                                                        <-Map 84 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_117]
                                                            PartitionCols:_col0
                                                             Please refer to the previous Select Operator [SEL_113]
                                              <-Reducer 93 [CONTAINS]
                                                Reduce Output Operator [RS_134]
                                                  Group By Operator [GBY_133] (rows=1 width=8)
                                                    Output:["_col0"],aggregations:["count(_col0)"]
                                                    Select Operator [SEL_132] (rows=1108786976 width=108)
                                                      Output:["_col0"]
                                                      Select Operator [SEL_131] (rows=158402938 width=135)
                                                        Output:["_col0"]
                                                        Merge Join Operator [MERGEJOIN_865] (rows=158402938 width=135)
                                                          Conds:RS_128._col0=RS_129._col0(Inner),Output:["_col1"]
                                                        <-Map 96 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_129]
                                                            PartitionCols:_col0
                                                             Please refer to the previous Select Operator [SEL_127]
                                                        <-Map 92 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_128]
                                                            PartitionCols:_col0
                                                             Please refer to the previous Select Operator [SEL_124]
                            <-Reducer 64 [CUSTOM_SIMPLE_EDGE]
                              PARTITION_ONLY_SHUFFLE [RS_187]
                                Group By Operator [GBY_184] (rows=1 width=288)
                                  Output:["_col0"],aggregations:["avg(VALUE._col0)"]
                                <-Union 63 [CUSTOM_SIMPLE_EDGE]
                                  <-Reducer 62 [CONTAINS]
                                    Reduce Output Operator [RS_183]
                                      Group By Operator [GBY_182] (rows=1 width=288)
                                        Output:["_col0"],aggregations:["avg(_col0)"]
                                        Select Operator [SEL_180] (rows=1108786976 width=108)
                                          Output:["_col0"]
                                          Select Operator [SEL_158] (rows=633595212 width=88)
                                            Output:["_col0","_col1"]
                                            Merge Join Operator [MERGEJOIN_866] (rows=633595212 width=88)
                                              Conds:RS_155._col0=RS_156._col0(Inner),Output:["_col1","_col2"]
                                            <-Map 56 [SIMPLE_EDGE]
                                              SHUFFLE [RS_156]
                                                PartitionCols:_col0
                                                 Please refer to the previous Select Operator [SEL_17]
                                            <-Map 100 [SIMPLE_EDGE]
                                              SHUFFLE [RS_155]
                                                PartitionCols:_col0
                                                 Please refer to the previous Select Operator [SEL_151]
                                  <-Reducer 89 [CONTAINS]
                                    Reduce Output Operator [RS_183]
                                      Group By Operator [GBY_182] (rows=1 width=288)
                                        Output:["_col0"],aggregations:["avg(_col0)"]
                                        Select Operator [SEL_180] (rows=1108786976 width=108)
                                          Output:["_col0"]
                                          Select Operator [SEL_168] (rows=316788826 width=135)
                                            Output:["_col0","_col1"]
                                            Merge Join Operator [MERGEJOIN_867] (rows=316788826 width=135)
                                              Conds:RS_165._col0=RS_166._col0(Inner),Output:["_col1","_col2"]
                                            <-Map 88 [SIMPLE_EDGE]
                                              SHUFFLE [RS_166]
                                                PartitionCols:_col0
                                                 Please refer to the previous Select Operator [SEL_116]
                                            <-Map 101 [SIMPLE_EDGE]
                                              SHUFFLE [RS_165]
                                                PartitionCols:_col0
                                                 Please refer to the previous Select Operator [SEL_161]
                                  <-Reducer 97 [CONTAINS]
                                    Reduce Output Operator [RS_183]
                                      Group By Operator [GBY_182] (rows=1 width=288)
                                        Output:["_col0"],aggregations:["avg(_col0)"]
                                        Select Operator [SEL_180] (rows=1108786976 width=108)
                                          Output:["_col0"]
                                          Select Operator [SEL_179] (rows=158402938 width=135)
                                            Output:["_col0","_col1"]
                                            Merge Join Operator [MERGEJOIN_868] (rows=158402938 width=135)
                                              Conds:RS_176._col0=RS_177._col0(Inner),Output:["_col1","_col2"]
                                            <-Map 96 [SIMPLE_EDGE]
                                              SHUFFLE [RS_177]
                                                PartitionCols:_col0
                                                 Please refer to the previous Select Operator [SEL_127]
                                            <-Map 102 [SIMPLE_EDGE]
                                              SHUFFLE [RS_176]
                                                PartitionCols:_col0
                                                 Please refer to the previous Select Operator [SEL_172]

