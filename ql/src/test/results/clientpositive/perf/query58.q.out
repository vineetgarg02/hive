Warning: Shuffle Join MERGEJOIN[270][tables = [$hdt$_5, $hdt$_6]] in Stage 'Reducer 17' is a cross product
Warning: Shuffle Join MERGEJOIN[275][tables = [$hdt$_6, $hdt$_7]] in Stage 'Reducer 20' is a cross product
Warning: Shuffle Join MERGEJOIN[280][tables = [$hdt$_4, $hdt$_5]] in Stage 'Reducer 23' is a cross product
PREHOOK: query: explain
with ss_items as
 (select i_item_id item_id
        ,sum(ss_ext_sales_price) ss_item_rev 
 from store_sales
     ,item
     ,date_dim
 where ss_item_sk = i_item_sk
   and d_date in (select d_date
                  from date_dim
                  where d_week_seq = (select d_week_seq 
                                      from date_dim
                                      where d_date = '1998-02-19'))
   and ss_sold_date_sk   = d_date_sk
 group by i_item_id),
 cs_items as
 (select i_item_id item_id
        ,sum(cs_ext_sales_price) cs_item_rev
  from catalog_sales
      ,item
      ,date_dim
 where cs_item_sk = i_item_sk
  and  d_date in (select d_date
                  from date_dim
                  where d_week_seq = (select d_week_seq 
                                      from date_dim
                                      where d_date = '1998-02-19'))
  and  cs_sold_date_sk = d_date_sk
 group by i_item_id),
 ws_items as
 (select i_item_id item_id
        ,sum(ws_ext_sales_price) ws_item_rev
  from web_sales
      ,item
      ,date_dim
 where ws_item_sk = i_item_sk
  and  d_date in (select d_date
                  from date_dim
                  where d_week_seq =(select d_week_seq 
                                     from date_dim
                                     where d_date = '1998-02-19'))
  and ws_sold_date_sk   = d_date_sk
 group by i_item_id)
  select  ss_items.item_id
       ,ss_item_rev
       ,ss_item_rev/(ss_item_rev+cs_item_rev+ws_item_rev)/3 * 100 ss_dev
       ,cs_item_rev
       ,cs_item_rev/(ss_item_rev+cs_item_rev+ws_item_rev)/3 * 100 cs_dev
       ,ws_item_rev
       ,ws_item_rev/(ss_item_rev+cs_item_rev+ws_item_rev)/3 * 100 ws_dev
       ,(ss_item_rev+cs_item_rev+ws_item_rev)/3 average
 from ss_items,cs_items,ws_items
 where ss_items.item_id=cs_items.item_id
   and ss_items.item_id=ws_items.item_id 
   and ss_item_rev between 0.9 * cs_item_rev and 1.1 * cs_item_rev
   and ss_item_rev between 0.9 * ws_item_rev and 1.1 * ws_item_rev
   and cs_item_rev between 0.9 * ss_item_rev and 1.1 * ss_item_rev
   and cs_item_rev between 0.9 * ws_item_rev and 1.1 * ws_item_rev
   and ws_item_rev between 0.9 * ss_item_rev and 1.1 * ss_item_rev
   and ws_item_rev between 0.9 * cs_item_rev and 1.1 * cs_item_rev
 order by item_id
         ,ss_item_rev
 limit 100
PREHOOK: type: QUERY
POSTHOOK: query: explain
with ss_items as
 (select i_item_id item_id
        ,sum(ss_ext_sales_price) ss_item_rev 
 from store_sales
     ,item
     ,date_dim
 where ss_item_sk = i_item_sk
   and d_date in (select d_date
                  from date_dim
                  where d_week_seq = (select d_week_seq 
                                      from date_dim
                                      where d_date = '1998-02-19'))
   and ss_sold_date_sk   = d_date_sk
 group by i_item_id),
 cs_items as
 (select i_item_id item_id
        ,sum(cs_ext_sales_price) cs_item_rev
  from catalog_sales
      ,item
      ,date_dim
 where cs_item_sk = i_item_sk
  and  d_date in (select d_date
                  from date_dim
                  where d_week_seq = (select d_week_seq 
                                      from date_dim
                                      where d_date = '1998-02-19'))
  and  cs_sold_date_sk = d_date_sk
 group by i_item_id),
 ws_items as
 (select i_item_id item_id
        ,sum(ws_ext_sales_price) ws_item_rev
  from web_sales
      ,item
      ,date_dim
 where ws_item_sk = i_item_sk
  and  d_date in (select d_date
                  from date_dim
                  where d_week_seq =(select d_week_seq 
                                     from date_dim
                                     where d_date = '1998-02-19'))
  and ws_sold_date_sk   = d_date_sk
 group by i_item_id)
  select  ss_items.item_id
       ,ss_item_rev
       ,ss_item_rev/(ss_item_rev+cs_item_rev+ws_item_rev)/3 * 100 ss_dev
       ,cs_item_rev
       ,cs_item_rev/(ss_item_rev+cs_item_rev+ws_item_rev)/3 * 100 cs_dev
       ,ws_item_rev
       ,ws_item_rev/(ss_item_rev+cs_item_rev+ws_item_rev)/3 * 100 ws_dev
       ,(ss_item_rev+cs_item_rev+ws_item_rev)/3 average
 from ss_items,cs_items,ws_items
 where ss_items.item_id=cs_items.item_id
   and ss_items.item_id=ws_items.item_id 
   and ss_item_rev between 0.9 * cs_item_rev and 1.1 * cs_item_rev
   and ss_item_rev between 0.9 * ws_item_rev and 1.1 * ws_item_rev
   and cs_item_rev between 0.9 * ss_item_rev and 1.1 * ss_item_rev
   and cs_item_rev between 0.9 * ws_item_rev and 1.1 * ws_item_rev
   and ws_item_rev between 0.9 * ss_item_rev and 1.1 * ss_item_rev
   and ws_item_rev between 0.9 * cs_item_rev and 1.1 * cs_item_rev
 order by item_id
         ,ss_item_rev
 limit 100
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 10 <- Map 31 (SIMPLE_EDGE), Reducer 9 (SIMPLE_EDGE)
Reducer 11 <- Reducer 10 (SIMPLE_EDGE)
Reducer 12 <- Map 1 (SIMPLE_EDGE), Reducer 25 (ONE_TO_ONE_EDGE)
Reducer 13 <- Map 33 (SIMPLE_EDGE), Reducer 12 (SIMPLE_EDGE)
Reducer 14 <- Map 31 (SIMPLE_EDGE), Reducer 13 (SIMPLE_EDGE)
Reducer 15 <- Reducer 14 (SIMPLE_EDGE)
Reducer 17 <- Map 16 (CUSTOM_SIMPLE_EDGE), Reducer 27 (CUSTOM_SIMPLE_EDGE)
Reducer 18 <- Map 16 (SIMPLE_EDGE), Reducer 17 (SIMPLE_EDGE)
Reducer 19 <- Reducer 18 (SIMPLE_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Reducer 19 (ONE_TO_ONE_EDGE)
Reducer 20 <- Map 16 (CUSTOM_SIMPLE_EDGE), Reducer 28 (CUSTOM_SIMPLE_EDGE)
Reducer 21 <- Map 16 (SIMPLE_EDGE), Reducer 20 (SIMPLE_EDGE)
Reducer 22 <- Reducer 21 (SIMPLE_EDGE)
Reducer 23 <- Map 16 (CUSTOM_SIMPLE_EDGE), Reducer 29 (CUSTOM_SIMPLE_EDGE)
Reducer 24 <- Map 16 (SIMPLE_EDGE), Reducer 23 (SIMPLE_EDGE)
Reducer 25 <- Reducer 24 (SIMPLE_EDGE)
Reducer 27 <- Map 26 (CUSTOM_SIMPLE_EDGE)
Reducer 28 <- Map 26 (CUSTOM_SIMPLE_EDGE)
Reducer 29 <- Map 26 (CUSTOM_SIMPLE_EDGE)
Reducer 3 <- Map 30 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Map 31 (SIMPLE_EDGE), Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Reducer 4 (SIMPLE_EDGE)
Reducer 6 <- Reducer 11 (ONE_TO_ONE_EDGE), Reducer 15 (ONE_TO_ONE_EDGE), Reducer 5 (ONE_TO_ONE_EDGE)
Reducer 7 <- Reducer 6 (SIMPLE_EDGE)
Reducer 8 <- Map 1 (SIMPLE_EDGE), Reducer 22 (ONE_TO_ONE_EDGE)
Reducer 9 <- Map 32 (SIMPLE_EDGE), Reducer 8 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 7
      File Output Operator [FS_161]
        Limit [LIM_160] (rows=100 width=88)
          Number of rows:100
          Select Operator [SEL_159] (rows=1442 width=88)
            Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
          <-Reducer 6 [SIMPLE_EDGE]
            SHUFFLE [RS_158]
              Select Operator [SEL_157] (rows=1442 width=88)
                Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
                Filter Operator [FIL_151] (rows=1442 width=88)
                  predicate:(_col5 BETWEEN (0.9 * _col1) AND (1.1 * _col1) and _col5 BETWEEN (0.9 * _col3) AND (1.1 * _col3) and _col1 BETWEEN (0.9 * _col5) AND (1.1 * _col5) and _col3 BETWEEN (0.9 * _col5) AND (1.1 * _col5) and _col1 BETWEEN (0.9 * _col3) AND (1.1 * _col3) and _col3 BETWEEN (0.9 * _col1) AND (1.1 * _col1))
                  Merge Join Operator [MERGEJOIN_285] (rows=766650239 width=88)
                    Conds:RS_147._col0=RS_148._col0(Inner),RS_147._col0=RS_149._col0(Inner),Output:["_col0","_col1","_col3","_col5"]
                  <-Reducer 11 [ONE_TO_ONE_EDGE]
                    FORWARD [RS_148]
                      PartitionCols:_col0
                      Group By Operator [GBY_96] (rows=348477374 width=88)
                        Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0
                      <-Reducer 10 [SIMPLE_EDGE]
                        SHUFFLE [RS_95]
                          PartitionCols:_col0
                          Group By Operator [GBY_94] (rows=696954748 width=88)
                            Output:["_col0","_col1"],aggregations:["sum(_col5)"],keys:_col7
                            Merge Join Operator [MERGEJOIN_279] (rows=696954748 width=88)
                              Conds:RS_90._col4=RS_91._col0(Inner),Output:["_col5","_col7"]
                            <-Map 31 [SIMPLE_EDGE]
                              SHUFFLE [RS_91]
                                PartitionCols:_col0
                                Select Operator [SEL_34] (rows=462000 width=1436)
                                  Output:["_col0","_col1"]
                                  Filter Operator [FIL_257] (rows=462000 width=1436)
                                    predicate:(i_item_sk is not null and i_item_id is not null)
                                    TableScan [TS_32] (rows=462000 width=1436)
                                      default@item,item,Tbl:COMPLETE,Col:NONE,Output:["i_item_sk","i_item_id"]
                            <-Reducer 9 [SIMPLE_EDGE]
                              SHUFFLE [RS_90]
                                PartitionCols:_col4
                                Merge Join Operator [MERGEJOIN_278] (rows=633595212 width=88)
                                  Conds:RS_87._col0=RS_88._col0(Inner),Output:["_col4","_col5"]
                                <-Map 32 [SIMPLE_EDGE]
                                  SHUFFLE [RS_88]
                                    PartitionCols:_col0
                                    Select Operator [SEL_80] (rows=575995635 width=88)
                                      Output:["_col0","_col1","_col2"]
                                      Filter Operator [FIL_262] (rows=575995635 width=88)
                                        predicate:(ss_item_sk is not null and ss_sold_date_sk is not null)
                                        TableScan [TS_78] (rows=575995635 width=88)
                                          default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_item_sk","ss_ext_sales_price"]
                                <-Reducer 8 [SIMPLE_EDGE]
                                  SHUFFLE [RS_87]
                                    PartitionCols:_col0
                                    Merge Join Operator [MERGEJOIN_277] (rows=80353 width=1119)
                                      Conds:RS_84._col1=RS_85._col0(Inner),Output:["_col0"]
                                    <-Map 1 [SIMPLE_EDGE]
                                      SHUFFLE [RS_84]
                                        PartitionCols:_col1
                                        Select Operator [SEL_2] (rows=73049 width=1119)
                                          Output:["_col0","_col1"]
                                          Filter Operator [FIL_252] (rows=73049 width=1119)
                                            predicate:(d_date is not null and d_date_sk is not null)
                                            TableScan [TS_0] (rows=73049 width=1119)
                                              default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_date"]
                                    <-Reducer 22 [ONE_TO_ONE_EDGE]
                                      FORWARD [RS_85]
                                        PartitionCols:_col0
                                        Group By Operator [GBY_76] (rows=40176 width=1119)
                                          Output:["_col0"],keys:KEY._col0
                                        <-Reducer 21 [SIMPLE_EDGE]
                                          SHUFFLE [RS_75]
                                            PartitionCols:_col0
                                            Group By Operator [GBY_74] (rows=80353 width=1119)
                                              Output:["_col0"],keys:_col2
                                              Merge Join Operator [MERGEJOIN_276] (rows=80353 width=1119)
                                                Conds:RS_70._col0=RS_71._col1(Inner),Output:["_col2"]
                                              <-Map 16 [SIMPLE_EDGE]
                                                SHUFFLE [RS_71]
                                                  PartitionCols:_col1
                                                  Select Operator [SEL_66] (rows=73049 width=1119)
                                                    Output:["_col0","_col1"]
                                                    Filter Operator [FIL_261] (rows=73049 width=1119)
                                                      predicate:(d_week_seq is not null and d_date is not null)
                                                      TableScan [TS_3] (rows=73049 width=1119)
                                                        default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date","d_week_seq"]
                                              <-Reducer 20 [SIMPLE_EDGE]
                                                SHUFFLE [RS_70]
                                                  PartitionCols:_col0
                                                  Merge Join Operator [MERGEJOIN_275] (rows=36524 width=1128)
                                                    Conds:(Inner),Output:["_col0"]
                                                  <-Map 16 [CUSTOM_SIMPLE_EDGE]
                                                    SHUFFLE [RS_67]
                                                      Select Operator [SEL_54] (rows=36524 width=1119)
                                                        Output:["_col0"]
                                                        Filter Operator [FIL_259] (rows=36524 width=1119)
                                                          predicate:((d_date = '1998-02-19') and d_week_seq is not null)
                                                           Please refer to the previous TableScan [TS_3]
                                                  <-Reducer 28 [CUSTOM_SIMPLE_EDGE]
                                                    PARTITION_ONLY_SHUFFLE [RS_68]
                                                      Select Operator [SEL_63] (rows=1 width=8)
                                                        Filter Operator [FIL_62] (rows=1 width=8)
                                                          predicate:(sq_count_check(_col0) <= 1)
                                                          Group By Operator [GBY_60] (rows=1 width=8)
                                                            Output:["_col0"],aggregations:["count(VALUE._col0)"]
                                                          <-Map 26 [CUSTOM_SIMPLE_EDGE]
                                                            PARTITION_ONLY_SHUFFLE [RS_59]
                                                              Group By Operator [GBY_9] (rows=1 width=8)
                                                                Output:["_col0"],aggregations:["count()"]
                                                                Select Operator [SEL_8] (rows=36524 width=1119)
                                                                  Filter Operator [FIL_254] (rows=36524 width=1119)
                                                                    predicate:(d_date = '1998-02-19')
                                                                    TableScan [TS_6] (rows=73049 width=1119)
                                                                      default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date"]
                  <-Reducer 15 [ONE_TO_ONE_EDGE]
                    FORWARD [RS_149]
                      PartitionCols:_col0
                      Group By Operator [GBY_145] (rows=87121617 width=135)
                        Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0
                      <-Reducer 14 [SIMPLE_EDGE]
                        SHUFFLE [RS_144]
                          PartitionCols:_col0
                          Group By Operator [GBY_143] (rows=174243235 width=135)
                            Output:["_col0","_col1"],aggregations:["sum(_col5)"],keys:_col7
                            Merge Join Operator [MERGEJOIN_284] (rows=174243235 width=135)
                              Conds:RS_139._col4=RS_140._col0(Inner),Output:["_col5","_col7"]
                            <-Map 31 [SIMPLE_EDGE]
                              SHUFFLE [RS_140]
                                PartitionCols:_col0
                                 Please refer to the previous Select Operator [SEL_34]
                            <-Reducer 13 [SIMPLE_EDGE]
                              SHUFFLE [RS_139]
                                PartitionCols:_col4
                                Merge Join Operator [MERGEJOIN_283] (rows=158402938 width=135)
                                  Conds:RS_136._col0=RS_137._col0(Inner),Output:["_col4","_col5"]
                                <-Map 33 [SIMPLE_EDGE]
                                  SHUFFLE [RS_137]
                                    PartitionCols:_col0
                                    Select Operator [SEL_129] (rows=144002668 width=135)
                                      Output:["_col0","_col1","_col2"]
                                      Filter Operator [FIL_268] (rows=144002668 width=135)
                                        predicate:(ws_item_sk is not null and ws_sold_date_sk is not null)
                                        TableScan [TS_127] (rows=144002668 width=135)
                                          default@web_sales,web_sales,Tbl:COMPLETE,Col:NONE,Output:["ws_sold_date_sk","ws_item_sk","ws_ext_sales_price"]
                                <-Reducer 12 [SIMPLE_EDGE]
                                  SHUFFLE [RS_136]
                                    PartitionCols:_col0
                                    Merge Join Operator [MERGEJOIN_282] (rows=80353 width=1119)
                                      Conds:RS_133._col1=RS_134._col0(Inner),Output:["_col0"]
                                    <-Map 1 [SIMPLE_EDGE]
                                      SHUFFLE [RS_133]
                                        PartitionCols:_col1
                                         Please refer to the previous Select Operator [SEL_2]
                                    <-Reducer 25 [ONE_TO_ONE_EDGE]
                                      FORWARD [RS_134]
                                        PartitionCols:_col0
                                        Group By Operator [GBY_125] (rows=40176 width=1119)
                                          Output:["_col0"],keys:KEY._col0
                                        <-Reducer 24 [SIMPLE_EDGE]
                                          SHUFFLE [RS_124]
                                            PartitionCols:_col0
                                            Group By Operator [GBY_123] (rows=80353 width=1119)
                                              Output:["_col0"],keys:_col2
                                              Merge Join Operator [MERGEJOIN_281] (rows=80353 width=1119)
                                                Conds:RS_119._col0=RS_120._col1(Inner),Output:["_col2"]
                                              <-Map 16 [SIMPLE_EDGE]
                                                SHUFFLE [RS_120]
                                                  PartitionCols:_col1
                                                  Select Operator [SEL_115] (rows=73049 width=1119)
                                                    Output:["_col0","_col1"]
                                                    Filter Operator [FIL_267] (rows=73049 width=1119)
                                                      predicate:(d_week_seq is not null and d_date is not null)
                                                       Please refer to the previous TableScan [TS_3]
                                              <-Reducer 23 [SIMPLE_EDGE]
                                                SHUFFLE [RS_119]
                                                  PartitionCols:_col0
                                                  Merge Join Operator [MERGEJOIN_280] (rows=36524 width=1128)
                                                    Conds:(Inner),Output:["_col0"]
                                                  <-Map 16 [CUSTOM_SIMPLE_EDGE]
                                                    SHUFFLE [RS_116]
                                                      Select Operator [SEL_103] (rows=36524 width=1119)
                                                        Output:["_col0"]
                                                        Filter Operator [FIL_265] (rows=36524 width=1119)
                                                          predicate:((d_date = '1998-02-19') and d_week_seq is not null)
                                                           Please refer to the previous TableScan [TS_3]
                                                  <-Reducer 29 [CUSTOM_SIMPLE_EDGE]
                                                    PARTITION_ONLY_SHUFFLE [RS_117]
                                                      Select Operator [SEL_112] (rows=1 width=8)
                                                        Filter Operator [FIL_111] (rows=1 width=8)
                                                          predicate:(sq_count_check(_col0) <= 1)
                                                          Group By Operator [GBY_109] (rows=1 width=8)
                                                            Output:["_col0"],aggregations:["count(VALUE._col0)"]
                                                          <-Map 26 [CUSTOM_SIMPLE_EDGE]
                                                            PARTITION_ONLY_SHUFFLE [RS_108]
                                                               Please refer to the previous Group By Operator [GBY_9]
                  <-Reducer 5 [ONE_TO_ONE_EDGE]
                    FORWARD [RS_147]
                      PartitionCols:_col0
                      Group By Operator [GBY_47] (rows=174233858 width=135)
                        Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0
                      <-Reducer 4 [SIMPLE_EDGE]
                        SHUFFLE [RS_46]
                          PartitionCols:_col0
                          Group By Operator [GBY_45] (rows=348467716 width=135)
                            Output:["_col0","_col1"],aggregations:["sum(_col5)"],keys:_col7
                            Merge Join Operator [MERGEJOIN_274] (rows=348467716 width=135)
                              Conds:RS_41._col4=RS_42._col0(Inner),Output:["_col5","_col7"]
                            <-Map 31 [SIMPLE_EDGE]
                              SHUFFLE [RS_42]
                                PartitionCols:_col0
                                 Please refer to the previous Select Operator [SEL_34]
                            <-Reducer 3 [SIMPLE_EDGE]
                              SHUFFLE [RS_41]
                                PartitionCols:_col4
                                Merge Join Operator [MERGEJOIN_273] (rows=316788826 width=135)
                                  Conds:RS_38._col0=RS_39._col0(Inner),Output:["_col4","_col5"]
                                <-Map 30 [SIMPLE_EDGE]
                                  SHUFFLE [RS_39]
                                    PartitionCols:_col0
                                    Select Operator [SEL_31] (rows=287989836 width=135)
                                      Output:["_col0","_col1","_col2"]
                                      Filter Operator [FIL_256] (rows=287989836 width=135)
                                        predicate:(cs_item_sk is not null and cs_sold_date_sk is not null)
                                        TableScan [TS_29] (rows=287989836 width=135)
                                          default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:NONE,Output:["cs_sold_date_sk","cs_item_sk","cs_ext_sales_price"]
                                <-Reducer 2 [SIMPLE_EDGE]
                                  SHUFFLE [RS_38]
                                    PartitionCols:_col0
                                    Merge Join Operator [MERGEJOIN_272] (rows=80353 width=1119)
                                      Conds:RS_35._col1=RS_36._col0(Inner),Output:["_col0"]
                                    <-Map 1 [SIMPLE_EDGE]
                                      SHUFFLE [RS_35]
                                        PartitionCols:_col1
                                         Please refer to the previous Select Operator [SEL_2]
                                    <-Reducer 19 [ONE_TO_ONE_EDGE]
                                      FORWARD [RS_36]
                                        PartitionCols:_col0
                                        Group By Operator [GBY_27] (rows=40176 width=1119)
                                          Output:["_col0"],keys:KEY._col0
                                        <-Reducer 18 [SIMPLE_EDGE]
                                          SHUFFLE [RS_26]
                                            PartitionCols:_col0
                                            Group By Operator [GBY_25] (rows=80353 width=1119)
                                              Output:["_col0"],keys:_col2
                                              Merge Join Operator [MERGEJOIN_271] (rows=80353 width=1119)
                                                Conds:RS_21._col0=RS_22._col1(Inner),Output:["_col2"]
                                              <-Map 16 [SIMPLE_EDGE]
                                                SHUFFLE [RS_22]
                                                  PartitionCols:_col1
                                                  Select Operator [SEL_17] (rows=73049 width=1119)
                                                    Output:["_col0","_col1"]
                                                    Filter Operator [FIL_255] (rows=73049 width=1119)
                                                      predicate:(d_week_seq is not null and d_date is not null)
                                                       Please refer to the previous TableScan [TS_3]
                                              <-Reducer 17 [SIMPLE_EDGE]
                                                SHUFFLE [RS_21]
                                                  PartitionCols:_col0
                                                  Merge Join Operator [MERGEJOIN_270] (rows=36524 width=1128)
                                                    Conds:(Inner),Output:["_col0"]
                                                  <-Map 16 [CUSTOM_SIMPLE_EDGE]
                                                    SHUFFLE [RS_18]
                                                      Select Operator [SEL_5] (rows=36524 width=1119)
                                                        Output:["_col0"]
                                                        Filter Operator [FIL_253] (rows=36524 width=1119)
                                                          predicate:((d_date = '1998-02-19') and d_week_seq is not null)
                                                           Please refer to the previous TableScan [TS_3]
                                                  <-Reducer 27 [CUSTOM_SIMPLE_EDGE]
                                                    PARTITION_ONLY_SHUFFLE [RS_19]
                                                      Select Operator [SEL_14] (rows=1 width=8)
                                                        Filter Operator [FIL_13] (rows=1 width=8)
                                                          predicate:(sq_count_check(_col0) <= 1)
                                                          Group By Operator [GBY_11] (rows=1 width=8)
                                                            Output:["_col0"],aggregations:["count(VALUE._col0)"]
                                                          <-Map 26 [CUSTOM_SIMPLE_EDGE]
                                                            PARTITION_ONLY_SHUFFLE [RS_10]
                                                               Please refer to the previous Group By Operator [GBY_9]

