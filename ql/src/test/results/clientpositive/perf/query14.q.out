Warning: Shuffle Join MERGEJOIN[900][tables = [$hdt$_1, $hdt$_2, $hdt$_0]] in Stage 'Reducer 12' is a cross product
Warning: Shuffle Join MERGEJOIN[901][tables = [$hdt$_2, $hdt$_3, $hdt$_1]] in Stage 'Reducer 16' is a cross product
Warning: Shuffle Join MERGEJOIN[899][tables = [$hdt$_1, $hdt$_2, $hdt$_0]] in Stage 'Reducer 5' is a cross product
PREHOOK: query: explain
with  cross_items as
 (select i_item_sk ss_item_sk
 from item,
 (select iss.i_brand_id brand_id
     ,iss.i_class_id class_id
     ,iss.i_category_id category_id
 from store_sales
     ,item iss
     ,date_dim d1
 where ss_item_sk = iss.i_item_sk
   and ss_sold_date_sk = d1.d_date_sk
   and d1.d_year between 1999 AND 1999 + 2
 intersect 
 select ics.i_brand_id
     ,ics.i_class_id
     ,ics.i_category_id
 from catalog_sales
     ,item ics
     ,date_dim d2
 where cs_item_sk = ics.i_item_sk
   and cs_sold_date_sk = d2.d_date_sk
   and d2.d_year between 1999 AND 1999 + 2
 intersect
 select iws.i_brand_id
     ,iws.i_class_id
     ,iws.i_category_id
 from web_sales
     ,item iws
     ,date_dim d3
 where ws_item_sk = iws.i_item_sk
   and ws_sold_date_sk = d3.d_date_sk
   and d3.d_year between 1999 AND 1999 + 2) x
 where i_brand_id = brand_id
      and i_class_id = class_id
      and i_category_id = category_id
),
 avg_sales as
 (select avg(quantity*list_price) average_sales
  from (select ss_quantity quantity
             ,ss_list_price list_price
       from store_sales
           ,date_dim
       where ss_sold_date_sk = d_date_sk
         and d_year between 1999 and 2001 
       union all 
       select cs_quantity quantity 
             ,cs_list_price list_price
       from catalog_sales
           ,date_dim
       where cs_sold_date_sk = d_date_sk
         and d_year between 1998 and 1998 + 2 
       union all
       select ws_quantity quantity
             ,ws_list_price list_price
       from web_sales
           ,date_dim
       where ws_sold_date_sk = d_date_sk
         and d_year between 1998 and 1998 + 2) x)
  select  channel, i_brand_id,i_class_id,i_category_id,sum(sales), sum(number_sales)
 from(
       select 'store' channel, i_brand_id,i_class_id
             ,i_category_id,sum(ss_quantity*ss_list_price) sales
             , count(*) number_sales
       from store_sales
           ,item
           ,date_dim
       where ss_item_sk in (select ss_item_sk from cross_items)
         and ss_item_sk = i_item_sk
         and ss_sold_date_sk = d_date_sk
         and d_year = 1998+2 
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(ss_quantity*ss_list_price) > (select average_sales from avg_sales)
       union all
       select 'catalog' channel, i_brand_id,i_class_id,i_category_id, sum(cs_quantity*cs_list_price) sales, count(*) number_sales
       from catalog_sales
           ,item
           ,date_dim
       where cs_item_sk in (select ss_item_sk from cross_items)
         and cs_item_sk = i_item_sk
         and cs_sold_date_sk = d_date_sk
         and d_year = 1998+2 
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(cs_quantity*cs_list_price) > (select average_sales from avg_sales)
       union all
       select 'web' channel, i_brand_id,i_class_id,i_category_id, sum(ws_quantity*ws_list_price) sales , count(*) number_sales
       from web_sales
           ,item
           ,date_dim
       where ws_item_sk in (select ss_item_sk from cross_items)
         and ws_item_sk = i_item_sk
         and ws_sold_date_sk = d_date_sk
         and d_year = 1998+2
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(ws_quantity*ws_list_price) > (select average_sales from avg_sales)
 ) y
 group by rollup (channel, i_brand_id,i_class_id,i_category_id)
 order by channel,i_brand_id,i_class_id,i_category_id
 limit 100
PREHOOK: type: QUERY
POSTHOOK: query: explain
with  cross_items as
 (select i_item_sk ss_item_sk
 from item,
 (select iss.i_brand_id brand_id
     ,iss.i_class_id class_id
     ,iss.i_category_id category_id
 from store_sales
     ,item iss
     ,date_dim d1
 where ss_item_sk = iss.i_item_sk
   and ss_sold_date_sk = d1.d_date_sk
   and d1.d_year between 1999 AND 1999 + 2
 intersect 
 select ics.i_brand_id
     ,ics.i_class_id
     ,ics.i_category_id
 from catalog_sales
     ,item ics
     ,date_dim d2
 where cs_item_sk = ics.i_item_sk
   and cs_sold_date_sk = d2.d_date_sk
   and d2.d_year between 1999 AND 1999 + 2
 intersect
 select iws.i_brand_id
     ,iws.i_class_id
     ,iws.i_category_id
 from web_sales
     ,item iws
     ,date_dim d3
 where ws_item_sk = iws.i_item_sk
   and ws_sold_date_sk = d3.d_date_sk
   and d3.d_year between 1999 AND 1999 + 2) x
 where i_brand_id = brand_id
      and i_class_id = class_id
      and i_category_id = category_id
),
 avg_sales as
 (select avg(quantity*list_price) average_sales
  from (select ss_quantity quantity
             ,ss_list_price list_price
       from store_sales
           ,date_dim
       where ss_sold_date_sk = d_date_sk
         and d_year between 1999 and 2001 
       union all 
       select cs_quantity quantity 
             ,cs_list_price list_price
       from catalog_sales
           ,date_dim
       where cs_sold_date_sk = d_date_sk
         and d_year between 1998 and 1998 + 2 
       union all
       select ws_quantity quantity
             ,ws_list_price list_price
       from web_sales
           ,date_dim
       where ws_sold_date_sk = d_date_sk
         and d_year between 1998 and 1998 + 2) x)
  select  channel, i_brand_id,i_class_id,i_category_id,sum(sales), sum(number_sales)
 from(
       select 'store' channel, i_brand_id,i_class_id
             ,i_category_id,sum(ss_quantity*ss_list_price) sales
             , count(*) number_sales
       from store_sales
           ,item
           ,date_dim
       where ss_item_sk in (select ss_item_sk from cross_items)
         and ss_item_sk = i_item_sk
         and ss_sold_date_sk = d_date_sk
         and d_year = 1998+2 
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(ss_quantity*ss_list_price) > (select average_sales from avg_sales)
       union all
       select 'catalog' channel, i_brand_id,i_class_id,i_category_id, sum(cs_quantity*cs_list_price) sales, count(*) number_sales
       from catalog_sales
           ,item
           ,date_dim
       where cs_item_sk in (select ss_item_sk from cross_items)
         and cs_item_sk = i_item_sk
         and cs_sold_date_sk = d_date_sk
         and d_year = 1998+2 
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(cs_quantity*cs_list_price) > (select average_sales from avg_sales)
       union all
       select 'web' channel, i_brand_id,i_class_id,i_category_id, sum(ws_quantity*ws_list_price) sales , count(*) number_sales
       from web_sales
           ,item
           ,date_dim
       where ws_item_sk in (select ss_item_sk from cross_items)
         and ws_item_sk = i_item_sk
         and ws_sold_date_sk = d_date_sk
         and d_year = 1998+2
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(ws_quantity*ws_list_price) > (select average_sales from avg_sales)
 ) y
 group by rollup (channel, i_brand_id,i_class_id,i_category_id)
 order by channel,i_brand_id,i_class_id,i_category_id
 limit 100
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 11 <- Union 10 (CUSTOM_SIMPLE_EDGE)
Reducer 12 <- Reducer 11 (CUSTOM_SIMPLE_EDGE), Reducer 38 (CUSTOM_SIMPLE_EDGE), Reducer 47 (CUSTOM_SIMPLE_EDGE), Union 6 (CONTAINS)
Reducer 13 <- Map 1 (SIMPLE_EDGE), Map 17 (SIMPLE_EDGE), Union 14 (CONTAINS)
Reducer 15 <- Union 14 (CUSTOM_SIMPLE_EDGE)
Reducer 16 <- Reducer 15 (CUSTOM_SIMPLE_EDGE), Reducer 56 (CUSTOM_SIMPLE_EDGE), Reducer 65 (CUSTOM_SIMPLE_EDGE), Union 6 (CONTAINS)
Reducer 18 <- Map 17 (SIMPLE_EDGE), Map 88 (SIMPLE_EDGE), Union 19 (CONTAINS)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 17 (SIMPLE_EDGE), Union 3 (CONTAINS)
Reducer 20 <- Union 19 (CUSTOM_SIMPLE_EDGE)
Reducer 21 <- Map 17 (SIMPLE_EDGE), Map 97 (SIMPLE_EDGE)
Reducer 22 <- Map 96 (SIMPLE_EDGE), Reducer 21 (SIMPLE_EDGE)
Reducer 23 <- Reducer 22 (SIMPLE_EDGE), Union 24 (CONTAINS)
Reducer 25 <- Union 24 (SIMPLE_EDGE)
Reducer 26 <- Map 96 (SIMPLE_EDGE), Reducer 25 (SIMPLE_EDGE)
Reducer 27 <- Reducer 26 (SIMPLE_EDGE)
Reducer 28 <- Map 96 (SIMPLE_EDGE), Reducer 27 (SIMPLE_EDGE), Reducer 92 (SIMPLE_EDGE)
Reducer 29 <- Reducer 28 (SIMPLE_EDGE)
Reducer 30 <- Map 17 (SIMPLE_EDGE), Map 98 (SIMPLE_EDGE)
Reducer 31 <- Map 96 (SIMPLE_EDGE), Reducer 30 (SIMPLE_EDGE)
Reducer 32 <- Reducer 31 (SIMPLE_EDGE), Union 24 (CONTAINS)
Reducer 33 <- Map 17 (SIMPLE_EDGE), Map 99 (SIMPLE_EDGE)
Reducer 34 <- Map 96 (SIMPLE_EDGE), Reducer 33 (SIMPLE_EDGE)
Reducer 35 <- Reducer 34 (SIMPLE_EDGE), Union 24 (CONTAINS)
Reducer 36 <- Map 17 (SIMPLE_EDGE), Map 88 (SIMPLE_EDGE), Union 37 (CONTAINS)
Reducer 38 <- Union 37 (CUSTOM_SIMPLE_EDGE)
Reducer 39 <- Map 17 (SIMPLE_EDGE), Map 97 (SIMPLE_EDGE)
Reducer 4 <- Union 3 (CUSTOM_SIMPLE_EDGE)
Reducer 40 <- Map 96 (SIMPLE_EDGE), Reducer 39 (SIMPLE_EDGE)
Reducer 41 <- Reducer 40 (SIMPLE_EDGE), Union 42 (CONTAINS)
Reducer 43 <- Union 42 (SIMPLE_EDGE)
Reducer 44 <- Map 96 (SIMPLE_EDGE), Reducer 43 (SIMPLE_EDGE)
Reducer 45 <- Reducer 44 (SIMPLE_EDGE)
Reducer 46 <- Map 96 (SIMPLE_EDGE), Reducer 45 (SIMPLE_EDGE), Reducer 94 (SIMPLE_EDGE)
Reducer 47 <- Reducer 46 (SIMPLE_EDGE)
Reducer 48 <- Map 17 (SIMPLE_EDGE), Map 98 (SIMPLE_EDGE)
Reducer 49 <- Map 96 (SIMPLE_EDGE), Reducer 48 (SIMPLE_EDGE)
Reducer 5 <- Reducer 20 (CUSTOM_SIMPLE_EDGE), Reducer 29 (CUSTOM_SIMPLE_EDGE), Reducer 4 (CUSTOM_SIMPLE_EDGE), Union 6 (CONTAINS)
Reducer 50 <- Reducer 49 (SIMPLE_EDGE), Union 42 (CONTAINS)
Reducer 51 <- Map 17 (SIMPLE_EDGE), Map 99 (SIMPLE_EDGE)
Reducer 52 <- Map 96 (SIMPLE_EDGE), Reducer 51 (SIMPLE_EDGE)
Reducer 53 <- Reducer 52 (SIMPLE_EDGE), Union 42 (CONTAINS)
Reducer 54 <- Map 17 (SIMPLE_EDGE), Map 88 (SIMPLE_EDGE), Union 55 (CONTAINS)
Reducer 56 <- Union 55 (CUSTOM_SIMPLE_EDGE)
Reducer 57 <- Map 17 (SIMPLE_EDGE), Map 97 (SIMPLE_EDGE)
Reducer 58 <- Map 96 (SIMPLE_EDGE), Reducer 57 (SIMPLE_EDGE)
Reducer 59 <- Reducer 58 (SIMPLE_EDGE), Union 60 (CONTAINS)
Reducer 61 <- Union 60 (SIMPLE_EDGE)
Reducer 62 <- Map 96 (SIMPLE_EDGE), Reducer 61 (SIMPLE_EDGE)
Reducer 63 <- Reducer 62 (SIMPLE_EDGE)
Reducer 64 <- Map 96 (SIMPLE_EDGE), Reducer 63 (SIMPLE_EDGE), Reducer 95 (SIMPLE_EDGE)
Reducer 65 <- Reducer 64 (SIMPLE_EDGE)
Reducer 66 <- Map 17 (SIMPLE_EDGE), Map 98 (SIMPLE_EDGE)
Reducer 67 <- Map 96 (SIMPLE_EDGE), Reducer 66 (SIMPLE_EDGE)
Reducer 68 <- Reducer 67 (SIMPLE_EDGE), Union 60 (CONTAINS)
Reducer 69 <- Map 17 (SIMPLE_EDGE), Map 99 (SIMPLE_EDGE)
Reducer 7 <- Union 6 (SIMPLE_EDGE)
Reducer 70 <- Map 96 (SIMPLE_EDGE), Reducer 69 (SIMPLE_EDGE)
Reducer 71 <- Reducer 70 (SIMPLE_EDGE), Union 60 (CONTAINS)
Reducer 73 <- Map 72 (SIMPLE_EDGE), Map 76 (SIMPLE_EDGE), Union 3 (CONTAINS)
Reducer 74 <- Map 72 (SIMPLE_EDGE), Map 76 (SIMPLE_EDGE), Union 10 (CONTAINS)
Reducer 75 <- Map 72 (SIMPLE_EDGE), Map 76 (SIMPLE_EDGE), Union 14 (CONTAINS)
Reducer 77 <- Map 76 (SIMPLE_EDGE), Map 89 (SIMPLE_EDGE), Union 19 (CONTAINS)
Reducer 78 <- Map 76 (SIMPLE_EDGE), Map 89 (SIMPLE_EDGE), Union 37 (CONTAINS)
Reducer 79 <- Map 76 (SIMPLE_EDGE), Map 89 (SIMPLE_EDGE), Union 55 (CONTAINS)
Reducer 8 <- Reducer 7 (SIMPLE_EDGE)
Reducer 81 <- Map 80 (SIMPLE_EDGE), Map 84 (SIMPLE_EDGE), Union 3 (CONTAINS)
Reducer 82 <- Map 80 (SIMPLE_EDGE), Map 84 (SIMPLE_EDGE), Union 10 (CONTAINS)
Reducer 83 <- Map 80 (SIMPLE_EDGE), Map 84 (SIMPLE_EDGE), Union 14 (CONTAINS)
Reducer 85 <- Map 84 (SIMPLE_EDGE), Map 90 (SIMPLE_EDGE), Union 19 (CONTAINS)
Reducer 86 <- Map 84 (SIMPLE_EDGE), Map 90 (SIMPLE_EDGE), Union 37 (CONTAINS)
Reducer 87 <- Map 84 (SIMPLE_EDGE), Map 90 (SIMPLE_EDGE), Union 55 (CONTAINS)
Reducer 9 <- Map 1 (SIMPLE_EDGE), Map 17 (SIMPLE_EDGE), Union 10 (CONTAINS)
Reducer 92 <- Map 91 (SIMPLE_EDGE), Map 93 (SIMPLE_EDGE)
Reducer 94 <- Map 100 (SIMPLE_EDGE), Map 93 (SIMPLE_EDGE)
Reducer 95 <- Map 101 (SIMPLE_EDGE), Map 93 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 8
      File Output Operator [FS_583]
        Limit [LIM_582] (rows=100 width=405)
          Number of rows:100
          Select Operator [SEL_581] (rows=1016388080 width=405)
            Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
          <-Reducer 7 [SIMPLE_EDGE]
            SHUFFLE [RS_580]
              Select Operator [SEL_579] (rows=1016388080 width=405)
                Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                Group By Operator [GBY_578] (rows=1016388080 width=405)
                  Output:["_col0","_col1","_col2","_col3","_col5","_col6"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3, KEY._col4
                <-Union 6 [SIMPLE_EDGE]
                  <-Reducer 12 [CONTAINS]
                    Reduce Output Operator [RS_577]
                      PartitionCols:_col0, _col1, _col2, _col3, _col4
                      Group By Operator [GBY_576] (rows=2032776160 width=405)
                        Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],aggregations:["sum(_col4)","sum(_col5)"],keys:_col0, _col1, _col2, _col3, 0
                        Select Operator [SEL_381] (rows=116155905 width=432)
                          Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                          Filter Operator [FIL_380] (rows=116155905 width=432)
                            predicate:(_col5 > _col1)
                            Merge Join Operator [MERGEJOIN_900] (rows=348467716 width=432)
                              Conds:(Inner),(Inner),Output:["_col1","_col2","_col3","_col4","_col5","_col6"]
                            <-Reducer 11 [CUSTOM_SIMPLE_EDGE]
                              PARTITION_ONLY_SHUFFLE [RS_376]
                                Select Operator [SEL_234] (rows=1 width=8)
                                  Filter Operator [FIL_233] (rows=1 width=8)
                                    predicate:(sq_count_check(_col0) <= 1)
                                    Group By Operator [GBY_231] (rows=1 width=8)
                                      Output:["_col0"],aggregations:["count()"]
                                      Select Operator [SEL_226] (rows=1 width=8)
                                        Group By Operator [GBY_225] (rows=1 width=8)
                                          Output:["_col0"],aggregations:["count(VALUE._col0)"]
                                        <-Union 10 [CUSTOM_SIMPLE_EDGE]
                                          <-Reducer 74 [CONTAINS]
                                            Reduce Output Operator [RS_224]
                                              Group By Operator [GBY_223] (rows=1 width=8)
                                                Output:["_col0"],aggregations:["count(_col0)"]
                                                Select Operator [SEL_222] (rows=1108786976 width=108)
                                                  Output:["_col0"]
                                                  Select Operator [SEL_210] (rows=316788826 width=135)
                                                    Output:["_col0"]
                                                    Merge Join Operator [MERGEJOIN_870] (rows=316788826 width=135)
                                                      Conds:RS_207._col0=RS_208._col0(Inner),Output:["_col1"]
                                                    <-Map 76 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_208]
                                                        PartitionCols:_col0
                                                        Select Operator [SEL_206] (rows=8116 width=1119)
                                                          Output:["_col0"]
                                                          Filter Operator [FIL_807] (rows=8116 width=1119)
                                                            predicate:(d_year BETWEEN 1998 AND 2000 and d_date_sk is not null)
                                                            TableScan [TS_13] (rows=73049 width=1119)
                                                              default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year"]
                                                    <-Map 72 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_207]
                                                        PartitionCols:_col0
                                                        Select Operator [SEL_203] (rows=287989836 width=135)
                                                          Output:["_col0","_col1"]
                                                          Filter Operator [FIL_806] (rows=287989836 width=135)
                                                            predicate:cs_sold_date_sk is not null
                                                            TableScan [TS_10] (rows=287989836 width=135)
                                                              default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:NONE,Output:["cs_sold_date_sk","cs_quantity"]
                                          <-Reducer 82 [CONTAINS]
                                            Reduce Output Operator [RS_224]
                                              Group By Operator [GBY_223] (rows=1 width=8)
                                                Output:["_col0"],aggregations:["count(_col0)"]
                                                Select Operator [SEL_222] (rows=1108786976 width=108)
                                                  Output:["_col0"]
                                                  Select Operator [SEL_221] (rows=158402938 width=135)
                                                    Output:["_col0"]
                                                    Merge Join Operator [MERGEJOIN_871] (rows=158402938 width=135)
                                                      Conds:RS_218._col0=RS_219._col0(Inner),Output:["_col1"]
                                                    <-Map 84 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_219]
                                                        PartitionCols:_col0
                                                        Select Operator [SEL_217] (rows=8116 width=1119)
                                                          Output:["_col0"]
                                                          Filter Operator [FIL_809] (rows=8116 width=1119)
                                                            predicate:(d_year BETWEEN 1998 AND 2000 and d_date_sk is not null)
                                                            TableScan [TS_24] (rows=73049 width=1119)
                                                              default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year"]
                                                    <-Map 80 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_218]
                                                        PartitionCols:_col0
                                                        Select Operator [SEL_214] (rows=144002668 width=135)
                                                          Output:["_col0","_col1"]
                                                          Filter Operator [FIL_808] (rows=144002668 width=135)
                                                            predicate:ws_sold_date_sk is not null
                                                            TableScan [TS_21] (rows=144002668 width=135)
                                                              default@web_sales,web_sales,Tbl:COMPLETE,Col:NONE,Output:["ws_sold_date_sk","ws_quantity"]
                                          <-Reducer 9 [CONTAINS]
                                            Reduce Output Operator [RS_224]
                                              Group By Operator [GBY_223] (rows=1 width=8)
                                                Output:["_col0"],aggregations:["count(_col0)"]
                                                Select Operator [SEL_222] (rows=1108786976 width=108)
                                                  Output:["_col0"]
                                                  Select Operator [SEL_200] (rows=633595212 width=88)
                                                    Output:["_col0"]
                                                    Merge Join Operator [MERGEJOIN_869] (rows=633595212 width=88)
                                                      Conds:RS_197._col0=RS_198._col0(Inner),Output:["_col1"]
                                                    <-Map 17 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_198]
                                                        PartitionCols:_col0
                                                        Select Operator [SEL_196] (rows=8116 width=1119)
                                                          Output:["_col0"]
                                                          Filter Operator [FIL_805] (rows=8116 width=1119)
                                                            predicate:(d_year BETWEEN 1999 AND 2001 and d_date_sk is not null)
                                                            TableScan [TS_3] (rows=73049 width=1119)
                                                              default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year"]
                                                    <-Map 1 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_197]
                                                        PartitionCols:_col0
                                                        Select Operator [SEL_193] (rows=575995635 width=88)
                                                          Output:["_col0","_col1"]
                                                          Filter Operator [FIL_804] (rows=575995635 width=88)
                                                            predicate:ss_sold_date_sk is not null
                                                            TableScan [TS_0] (rows=575995635 width=88)
                                                              default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_quantity"]
                            <-Reducer 38 [CUSTOM_SIMPLE_EDGE]
                              PARTITION_ONLY_SHUFFLE [RS_377]
                                Group By Operator [GBY_270] (rows=1 width=288)
                                  Output:["_col0"],aggregations:["avg(VALUE._col0)"]
                                <-Union 37 [CUSTOM_SIMPLE_EDGE]
                                  <-Reducer 36 [CONTAINS]
                                    Reduce Output Operator [RS_269]
                                      Group By Operator [GBY_268] (rows=1 width=288)
                                        Output:["_col0"],aggregations:["avg(_col0)"]
                                        Select Operator [SEL_266] (rows=1108786976 width=108)
                                          Output:["_col0"]
                                          Select Operator [SEL_244] (rows=633595212 width=88)
                                            Output:["_col0","_col1"]
                                            Merge Join Operator [MERGEJOIN_872] (rows=633595212 width=88)
                                              Conds:RS_241._col0=RS_242._col0(Inner),Output:["_col1","_col2"]
                                            <-Map 17 [SIMPLE_EDGE]
                                              SHUFFLE [RS_242]
                                                PartitionCols:_col0
                                                Select Operator [SEL_240] (rows=8116 width=1119)
                                                  Output:["_col0"]
                                                  Filter Operator [FIL_811] (rows=8116 width=1119)
                                                    predicate:(d_year BETWEEN 1999 AND 2001 and d_date_sk is not null)
                                                     Please refer to the previous TableScan [TS_3]
                                            <-Map 88 [SIMPLE_EDGE]
                                              SHUFFLE [RS_241]
                                                PartitionCols:_col0
                                                Select Operator [SEL_237] (rows=575995635 width=88)
                                                  Output:["_col0","_col1","_col2"]
                                                  Filter Operator [FIL_810] (rows=575995635 width=88)
                                                    predicate:ss_sold_date_sk is not null
                                                    TableScan [TS_44] (rows=575995635 width=88)
                                                      default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_quantity","ss_list_price"]
                                  <-Reducer 78 [CONTAINS]
                                    Reduce Output Operator [RS_269]
                                      Group By Operator [GBY_268] (rows=1 width=288)
                                        Output:["_col0"],aggregations:["avg(_col0)"]
                                        Select Operator [SEL_266] (rows=1108786976 width=108)
                                          Output:["_col0"]
                                          Select Operator [SEL_254] (rows=316788826 width=135)
                                            Output:["_col0","_col1"]
                                            Merge Join Operator [MERGEJOIN_873] (rows=316788826 width=135)
                                              Conds:RS_251._col0=RS_252._col0(Inner),Output:["_col1","_col2"]
                                            <-Map 76 [SIMPLE_EDGE]
                                              SHUFFLE [RS_252]
                                                PartitionCols:_col0
                                                Select Operator [SEL_250] (rows=8116 width=1119)
                                                  Output:["_col0"]
                                                  Filter Operator [FIL_813] (rows=8116 width=1119)
                                                    predicate:(d_year BETWEEN 1998 AND 2000 and d_date_sk is not null)
                                                     Please refer to the previous TableScan [TS_13]
                                            <-Map 89 [SIMPLE_EDGE]
                                              SHUFFLE [RS_251]
                                                PartitionCols:_col0
                                                Select Operator [SEL_247] (rows=287989836 width=135)
                                                  Output:["_col0","_col1","_col2"]
                                                  Filter Operator [FIL_812] (rows=287989836 width=135)
                                                    predicate:cs_sold_date_sk is not null
                                                    TableScan [TS_54] (rows=287989836 width=135)
                                                      default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:NONE,Output:["cs_sold_date_sk","cs_quantity","cs_list_price"]
                                  <-Reducer 86 [CONTAINS]
                                    Reduce Output Operator [RS_269]
                                      Group By Operator [GBY_268] (rows=1 width=288)
                                        Output:["_col0"],aggregations:["avg(_col0)"]
                                        Select Operator [SEL_266] (rows=1108786976 width=108)
                                          Output:["_col0"]
                                          Select Operator [SEL_265] (rows=158402938 width=135)
                                            Output:["_col0","_col1"]
                                            Merge Join Operator [MERGEJOIN_874] (rows=158402938 width=135)
                                              Conds:RS_262._col0=RS_263._col0(Inner),Output:["_col1","_col2"]
                                            <-Map 84 [SIMPLE_EDGE]
                                              SHUFFLE [RS_263]
                                                PartitionCols:_col0
                                                Select Operator [SEL_261] (rows=8116 width=1119)
                                                  Output:["_col0"]
                                                  Filter Operator [FIL_815] (rows=8116 width=1119)
                                                    predicate:(d_year BETWEEN 1998 AND 2000 and d_date_sk is not null)
                                                     Please refer to the previous TableScan [TS_24]
                                            <-Map 90 [SIMPLE_EDGE]
                                              SHUFFLE [RS_262]
                                                PartitionCols:_col0
                                                Select Operator [SEL_258] (rows=144002668 width=135)
                                                  Output:["_col0","_col1","_col2"]
                                                  Filter Operator [FIL_814] (rows=144002668 width=135)
                                                    predicate:ws_sold_date_sk is not null
                                                    TableScan [TS_65] (rows=144002668 width=135)
                                                      default@web_sales,web_sales,Tbl:COMPLETE,Col:NONE,Output:["ws_sold_date_sk","ws_quantity","ws_list_price"]
                            <-Reducer 47 [CUSTOM_SIMPLE_EDGE]
                              PARTITION_ONLY_SHUFFLE [RS_378]
                                Group By Operator [GBY_374] (rows=348467716 width=135)
                                  Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(VALUE._col0)","count(VALUE._col1)"],keys:KEY._col0, KEY._col1, KEY._col2
                                <-Reducer 46 [SIMPLE_EDGE]
                                  SHUFFLE [RS_373]
                                    PartitionCols:_col0, _col1, _col2
                                    Group By Operator [GBY_372] (rows=696935432 width=135)
                                      Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(_col3)","count()"],keys:_col0, _col1, _col2
                                      Select Operator [SEL_370] (rows=696935432 width=135)
                                        Output:["_col0","_col1","_col2","_col3"]
                                        Merge Join Operator [MERGEJOIN_883] (rows=696935432 width=135)
                                          Conds:RS_366._col1=RS_367._col0(Inner),RS_366._col1=RS_368._col0(Inner),Output:["_col2","_col3","_col8","_col9","_col10"]
                                        <-Map 96 [SIMPLE_EDGE]
                                          SHUFFLE [RS_367]
                                            PartitionCols:_col0
                                            Select Operator [SEL_280] (rows=462000 width=1436)
                                              Output:["_col0","_col1","_col2","_col3"]
                                              Filter Operator [FIL_818] (rows=462000 width=1436)
                                                predicate:i_item_sk is not null
                                                TableScan [TS_87] (rows=462000 width=1436)
                                                  default@item,item,Tbl:COMPLETE,Col:NONE,Output:["i_item_sk","i_brand_id","i_class_id","i_category_id"]
                                        <-Reducer 45 [SIMPLE_EDGE]
                                          SHUFFLE [RS_368]
                                            PartitionCols:_col0
                                            Group By Operator [GBY_361] (rows=254100 width=1436)
                                              Output:["_col0"],keys:KEY._col0
                                            <-Reducer 44 [SIMPLE_EDGE]
                                              SHUFFLE [RS_360]
                                                PartitionCols:_col0
                                                Group By Operator [GBY_359] (rows=508200 width=1436)
                                                  Output:["_col0"],keys:_col0
                                                  Merge Join Operator [MERGEJOIN_882] (rows=508200 width=1436)
                                                    Conds:RS_355._col1, _col2, _col3=RS_356._col0, _col1, _col2(Inner),Output:["_col0"]
                                                  <-Map 96 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_355]
                                                      PartitionCols:_col1, _col2, _col3
                                                      Select Operator [SEL_283] (rows=462000 width=1436)
                                                        Output:["_col0","_col1","_col2","_col3"]
                                                        Filter Operator [FIL_819] (rows=462000 width=1436)
                                                          predicate:(i_brand_id is not null and i_class_id is not null and i_category_id is not null and i_item_sk is not null)
                                                           Please refer to the previous TableScan [TS_87]
                                                  <-Reducer 43 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_356]
                                                      PartitionCols:_col0, _col1, _col2
                                                      Select Operator [SEL_354] (rows=1 width=108)
                                                        Output:["_col0","_col1","_col2"]
                                                        Filter Operator [FIL_353] (rows=1 width=108)
                                                          predicate:(_col3 = 3)
                                                          Group By Operator [GBY_352] (rows=304916424 width=108)
                                                            Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                          <-Union 42 [SIMPLE_EDGE]
                                                            <-Reducer 41 [CONTAINS]
                                                              Reduce Output Operator [RS_351]
                                                                PartitionCols:_col0, _col1, _col2
                                                                Group By Operator [GBY_350] (rows=609832849 width=108)
                                                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                  Group By Operator [GBY_303] (rows=348477374 width=88)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                  <-Reducer 40 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_302]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                      Group By Operator [GBY_301] (rows=696954748 width=88)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count(1)"],keys:_col0, _col1, _col2
                                                                        Select Operator [SEL_299] (rows=696954748 width=88)
                                                                          Output:["_col0","_col1","_col2"]
                                                                          Merge Join Operator [MERGEJOIN_877] (rows=696954748 width=88)
                                                                            Conds:RS_296._col1=RS_297._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                          <-Map 96 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_297]
                                                                              PartitionCols:_col0
                                                                              Select Operator [SEL_292] (rows=462000 width=1436)
                                                                                Output:["_col0","_col1","_col2","_col3"]
                                                                                Filter Operator [FIL_822] (rows=462000 width=1436)
                                                                                  predicate:(i_item_sk is not null and i_brand_id is not null and i_class_id is not null and i_category_id is not null)
                                                                                   Please refer to the previous TableScan [TS_87]
                                                                          <-Reducer 39 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_296]
                                                                              PartitionCols:_col1
                                                                              Merge Join Operator [MERGEJOIN_876] (rows=633595212 width=88)
                                                                                Conds:RS_293._col0=RS_294._col0(Inner),Output:["_col1"]
                                                                              <-Map 17 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_294]
                                                                                  PartitionCols:_col0
                                                                                  Select Operator [SEL_289] (rows=8116 width=1119)
                                                                                    Output:["_col0"]
                                                                                    Filter Operator [FIL_821] (rows=8116 width=1119)
                                                                                      predicate:(d_year BETWEEN 1999 AND 2001 and d_date_sk is not null)
                                                                                       Please refer to the previous TableScan [TS_3]
                                                                              <-Map 97 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_293]
                                                                                  PartitionCols:_col0
                                                                                  Select Operator [SEL_286] (rows=575995635 width=88)
                                                                                    Output:["_col0","_col1"]
                                                                                    Filter Operator [FIL_820] (rows=575995635 width=88)
                                                                                      predicate:(ss_item_sk is not null and ss_sold_date_sk is not null)
                                                                                      TableScan [TS_93] (rows=575995635 width=88)
                                                                                        default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_item_sk"]
                                                            <-Reducer 50 [CONTAINS]
                                                              Reduce Output Operator [RS_351]
                                                                PartitionCols:_col0, _col1, _col2
                                                                Group By Operator [GBY_350] (rows=609832849 width=108)
                                                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                  Group By Operator [GBY_324] (rows=174233858 width=135)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                  <-Reducer 49 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_323]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                      Group By Operator [GBY_322] (rows=348467716 width=135)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count(1)"],keys:_col0, _col1, _col2
                                                                        Select Operator [SEL_320] (rows=348467716 width=135)
                                                                          Output:["_col0","_col1","_col2"]
                                                                          Merge Join Operator [MERGEJOIN_879] (rows=348467716 width=135)
                                                                            Conds:RS_317._col1=RS_318._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                          <-Map 96 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_318]
                                                                              PartitionCols:_col0
                                                                              Select Operator [SEL_313] (rows=462000 width=1436)
                                                                                Output:["_col0","_col1","_col2","_col3"]
                                                                                Filter Operator [FIL_825] (rows=462000 width=1436)
                                                                                  predicate:(i_item_sk is not null and i_brand_id is not null and i_class_id is not null and i_category_id is not null)
                                                                                   Please refer to the previous TableScan [TS_87]
                                                                          <-Reducer 48 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_317]
                                                                              PartitionCols:_col1
                                                                              Merge Join Operator [MERGEJOIN_878] (rows=316788826 width=135)
                                                                                Conds:RS_314._col0=RS_315._col0(Inner),Output:["_col1"]
                                                                              <-Map 17 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_315]
                                                                                  PartitionCols:_col0
                                                                                  Select Operator [SEL_310] (rows=8116 width=1119)
                                                                                    Output:["_col0"]
                                                                                    Filter Operator [FIL_824] (rows=8116 width=1119)
                                                                                      predicate:(d_year BETWEEN 1999 AND 2001 and d_date_sk is not null)
                                                                                       Please refer to the previous TableScan [TS_3]
                                                                              <-Map 98 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_314]
                                                                                  PartitionCols:_col0
                                                                                  Select Operator [SEL_307] (rows=287989836 width=135)
                                                                                    Output:["_col0","_col1"]
                                                                                    Filter Operator [FIL_823] (rows=287989836 width=135)
                                                                                      predicate:(cs_item_sk is not null and cs_sold_date_sk is not null)
                                                                                      TableScan [TS_114] (rows=287989836 width=135)
                                                                                        default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:NONE,Output:["cs_sold_date_sk","cs_item_sk"]
                                                            <-Reducer 53 [CONTAINS]
                                                              Reduce Output Operator [RS_351]
                                                                PartitionCols:_col0, _col1, _col2
                                                                Group By Operator [GBY_350] (rows=609832849 width=108)
                                                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                  Group By Operator [GBY_346] (rows=87121617 width=135)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                  <-Reducer 52 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_345]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                      Group By Operator [GBY_344] (rows=174243235 width=135)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count(1)"],keys:_col0, _col1, _col2
                                                                        Select Operator [SEL_342] (rows=174243235 width=135)
                                                                          Output:["_col0","_col1","_col2"]
                                                                          Merge Join Operator [MERGEJOIN_881] (rows=174243235 width=135)
                                                                            Conds:RS_339._col1=RS_340._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                          <-Map 96 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_340]
                                                                              PartitionCols:_col0
                                                                              Select Operator [SEL_335] (rows=462000 width=1436)
                                                                                Output:["_col0","_col1","_col2","_col3"]
                                                                                Filter Operator [FIL_828] (rows=462000 width=1436)
                                                                                  predicate:(i_item_sk is not null and i_brand_id is not null and i_class_id is not null and i_category_id is not null)
                                                                                   Please refer to the previous TableScan [TS_87]
                                                                          <-Reducer 51 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_339]
                                                                              PartitionCols:_col1
                                                                              Merge Join Operator [MERGEJOIN_880] (rows=158402938 width=135)
                                                                                Conds:RS_336._col0=RS_337._col0(Inner),Output:["_col1"]
                                                                              <-Map 17 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_337]
                                                                                  PartitionCols:_col0
                                                                                  Select Operator [SEL_332] (rows=8116 width=1119)
                                                                                    Output:["_col0"]
                                                                                    Filter Operator [FIL_827] (rows=8116 width=1119)
                                                                                      predicate:(d_year BETWEEN 1999 AND 2001 and d_date_sk is not null)
                                                                                       Please refer to the previous TableScan [TS_3]
                                                                              <-Map 99 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_336]
                                                                                  PartitionCols:_col0
                                                                                  Select Operator [SEL_329] (rows=144002668 width=135)
                                                                                    Output:["_col0","_col1"]
                                                                                    Filter Operator [FIL_826] (rows=144002668 width=135)
                                                                                      predicate:(ws_item_sk is not null and ws_sold_date_sk is not null)
                                                                                      TableScan [TS_136] (rows=144002668 width=135)
                                                                                        default@web_sales,web_sales,Tbl:COMPLETE,Col:NONE,Output:["ws_sold_date_sk","ws_item_sk"]
                                        <-Reducer 94 [SIMPLE_EDGE]
                                          SHUFFLE [RS_366]
                                            PartitionCols:_col1
                                            Merge Join Operator [MERGEJOIN_875] (rows=316788826 width=135)
                                              Conds:RS_363._col0=RS_364._col0(Inner),Output:["_col1","_col2","_col3"]
                                            <-Map 93 [SIMPLE_EDGE]
                                              SHUFFLE [RS_364]
                                                PartitionCols:_col0
                                                Select Operator [SEL_277] (rows=18262 width=1119)
                                                  Output:["_col0"]
                                                  Filter Operator [FIL_817] (rows=18262 width=1119)
                                                    predicate:((d_year = 2000) and (d_moy = 11) and d_date_sk is not null)
                                                    TableScan [TS_84] (rows=73049 width=1119)
                                                      default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year","d_moy"]
                                            <-Map 100 [SIMPLE_EDGE]
                                              SHUFFLE [RS_363]
                                                PartitionCols:_col0
                                                Select Operator [SEL_274] (rows=287989836 width=135)
                                                  Output:["_col0","_col1","_col2","_col3"]
                                                  Filter Operator [FIL_816] (rows=287989836 width=135)
                                                    predicate:(cs_item_sk is not null and cs_sold_date_sk is not null)
                                                    TableScan [TS_272] (rows=287989836 width=135)
                                                      default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:NONE,Output:["cs_sold_date_sk","cs_item_sk","cs_quantity","cs_list_price"]
                  <-Reducer 16 [CONTAINS]
                    Reduce Output Operator [RS_577]
                      PartitionCols:_col0, _col1, _col2, _col3, _col4
                      Group By Operator [GBY_576] (rows=2032776160 width=405)
                        Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],aggregations:["sum(_col4)","sum(_col5)"],keys:_col0, _col1, _col2, _col3, 0
                        Select Operator [SEL_573] (rows=58081078 width=432)
                          Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                          Filter Operator [FIL_572] (rows=58081078 width=432)
                            predicate:(_col5 > _col1)
                            Merge Join Operator [MERGEJOIN_901] (rows=174243235 width=432)
                              Conds:(Inner),(Inner),Output:["_col1","_col2","_col3","_col4","_col5","_col6"]
                            <-Reducer 15 [CUSTOM_SIMPLE_EDGE]
                              PARTITION_ONLY_SHUFFLE [RS_568]
                                Select Operator [SEL_426] (rows=1 width=8)
                                  Filter Operator [FIL_425] (rows=1 width=8)
                                    predicate:(sq_count_check(_col0) <= 1)
                                    Group By Operator [GBY_423] (rows=1 width=8)
                                      Output:["_col0"],aggregations:["count()"]
                                      Select Operator [SEL_418] (rows=1 width=8)
                                        Group By Operator [GBY_417] (rows=1 width=8)
                                          Output:["_col0"],aggregations:["count(VALUE._col0)"]
                                        <-Union 14 [CUSTOM_SIMPLE_EDGE]
                                          <-Reducer 13 [CONTAINS]
                                            Reduce Output Operator [RS_416]
                                              Group By Operator [GBY_415] (rows=1 width=8)
                                                Output:["_col0"],aggregations:["count(_col0)"]
                                                Select Operator [SEL_414] (rows=1108786976 width=108)
                                                  Output:["_col0"]
                                                  Select Operator [SEL_392] (rows=633595212 width=88)
                                                    Output:["_col0"]
                                                    Merge Join Operator [MERGEJOIN_884] (rows=633595212 width=88)
                                                      Conds:RS_389._col0=RS_390._col0(Inner),Output:["_col1"]
                                                    <-Map 17 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_390]
                                                        PartitionCols:_col0
                                                        Select Operator [SEL_388] (rows=8116 width=1119)
                                                          Output:["_col0"]
                                                          Filter Operator [FIL_830] (rows=8116 width=1119)
                                                            predicate:(d_year BETWEEN 1999 AND 2001 and d_date_sk is not null)
                                                             Please refer to the previous TableScan [TS_3]
                                                    <-Map 1 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_389]
                                                        PartitionCols:_col0
                                                        Select Operator [SEL_385] (rows=575995635 width=88)
                                                          Output:["_col0","_col1"]
                                                          Filter Operator [FIL_829] (rows=575995635 width=88)
                                                            predicate:ss_sold_date_sk is not null
                                                             Please refer to the previous TableScan [TS_0]
                                          <-Reducer 75 [CONTAINS]
                                            Reduce Output Operator [RS_416]
                                              Group By Operator [GBY_415] (rows=1 width=8)
                                                Output:["_col0"],aggregations:["count(_col0)"]
                                                Select Operator [SEL_414] (rows=1108786976 width=108)
                                                  Output:["_col0"]
                                                  Select Operator [SEL_402] (rows=316788826 width=135)
                                                    Output:["_col0"]
                                                    Merge Join Operator [MERGEJOIN_885] (rows=316788826 width=135)
                                                      Conds:RS_399._col0=RS_400._col0(Inner),Output:["_col1"]
                                                    <-Map 76 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_400]
                                                        PartitionCols:_col0
                                                        Select Operator [SEL_398] (rows=8116 width=1119)
                                                          Output:["_col0"]
                                                          Filter Operator [FIL_832] (rows=8116 width=1119)
                                                            predicate:(d_year BETWEEN 1998 AND 2000 and d_date_sk is not null)
                                                             Please refer to the previous TableScan [TS_13]
                                                    <-Map 72 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_399]
                                                        PartitionCols:_col0
                                                        Select Operator [SEL_395] (rows=287989836 width=135)
                                                          Output:["_col0","_col1"]
                                                          Filter Operator [FIL_831] (rows=287989836 width=135)
                                                            predicate:cs_sold_date_sk is not null
                                                             Please refer to the previous TableScan [TS_10]
                                          <-Reducer 83 [CONTAINS]
                                            Reduce Output Operator [RS_416]
                                              Group By Operator [GBY_415] (rows=1 width=8)
                                                Output:["_col0"],aggregations:["count(_col0)"]
                                                Select Operator [SEL_414] (rows=1108786976 width=108)
                                                  Output:["_col0"]
                                                  Select Operator [SEL_413] (rows=158402938 width=135)
                                                    Output:["_col0"]
                                                    Merge Join Operator [MERGEJOIN_886] (rows=158402938 width=135)
                                                      Conds:RS_410._col0=RS_411._col0(Inner),Output:["_col1"]
                                                    <-Map 84 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_411]
                                                        PartitionCols:_col0
                                                        Select Operator [SEL_409] (rows=8116 width=1119)
                                                          Output:["_col0"]
                                                          Filter Operator [FIL_834] (rows=8116 width=1119)
                                                            predicate:(d_year BETWEEN 1998 AND 2000 and d_date_sk is not null)
                                                             Please refer to the previous TableScan [TS_24]
                                                    <-Map 80 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_410]
                                                        PartitionCols:_col0
                                                        Select Operator [SEL_406] (rows=144002668 width=135)
                                                          Output:["_col0","_col1"]
                                                          Filter Operator [FIL_833] (rows=144002668 width=135)
                                                            predicate:ws_sold_date_sk is not null
                                                             Please refer to the previous TableScan [TS_21]
                            <-Reducer 56 [CUSTOM_SIMPLE_EDGE]
                              PARTITION_ONLY_SHUFFLE [RS_569]
                                Group By Operator [GBY_462] (rows=1 width=288)
                                  Output:["_col0"],aggregations:["avg(VALUE._col0)"]
                                <-Union 55 [CUSTOM_SIMPLE_EDGE]
                                  <-Reducer 54 [CONTAINS]
                                    Reduce Output Operator [RS_461]
                                      Group By Operator [GBY_460] (rows=1 width=288)
                                        Output:["_col0"],aggregations:["avg(_col0)"]
                                        Select Operator [SEL_458] (rows=1108786976 width=108)
                                          Output:["_col0"]
                                          Select Operator [SEL_436] (rows=633595212 width=88)
                                            Output:["_col0","_col1"]
                                            Merge Join Operator [MERGEJOIN_887] (rows=633595212 width=88)
                                              Conds:RS_433._col0=RS_434._col0(Inner),Output:["_col1","_col2"]
                                            <-Map 17 [SIMPLE_EDGE]
                                              SHUFFLE [RS_434]
                                                PartitionCols:_col0
                                                Select Operator [SEL_432] (rows=8116 width=1119)
                                                  Output:["_col0"]
                                                  Filter Operator [FIL_836] (rows=8116 width=1119)
                                                    predicate:(d_year BETWEEN 1999 AND 2001 and d_date_sk is not null)
                                                     Please refer to the previous TableScan [TS_3]
                                            <-Map 88 [SIMPLE_EDGE]
                                              SHUFFLE [RS_433]
                                                PartitionCols:_col0
                                                Select Operator [SEL_429] (rows=575995635 width=88)
                                                  Output:["_col0","_col1","_col2"]
                                                  Filter Operator [FIL_835] (rows=575995635 width=88)
                                                    predicate:ss_sold_date_sk is not null
                                                     Please refer to the previous TableScan [TS_44]
                                  <-Reducer 79 [CONTAINS]
                                    Reduce Output Operator [RS_461]
                                      Group By Operator [GBY_460] (rows=1 width=288)
                                        Output:["_col0"],aggregations:["avg(_col0)"]
                                        Select Operator [SEL_458] (rows=1108786976 width=108)
                                          Output:["_col0"]
                                          Select Operator [SEL_446] (rows=316788826 width=135)
                                            Output:["_col0","_col1"]
                                            Merge Join Operator [MERGEJOIN_888] (rows=316788826 width=135)
                                              Conds:RS_443._col0=RS_444._col0(Inner),Output:["_col1","_col2"]
                                            <-Map 76 [SIMPLE_EDGE]
                                              SHUFFLE [RS_444]
                                                PartitionCols:_col0
                                                Select Operator [SEL_442] (rows=8116 width=1119)
                                                  Output:["_col0"]
                                                  Filter Operator [FIL_838] (rows=8116 width=1119)
                                                    predicate:(d_year BETWEEN 1998 AND 2000 and d_date_sk is not null)
                                                     Please refer to the previous TableScan [TS_13]
                                            <-Map 89 [SIMPLE_EDGE]
                                              SHUFFLE [RS_443]
                                                PartitionCols:_col0
                                                Select Operator [SEL_439] (rows=287989836 width=135)
                                                  Output:["_col0","_col1","_col2"]
                                                  Filter Operator [FIL_837] (rows=287989836 width=135)
                                                    predicate:cs_sold_date_sk is not null
                                                     Please refer to the previous TableScan [TS_54]
                                  <-Reducer 87 [CONTAINS]
                                    Reduce Output Operator [RS_461]
                                      Group By Operator [GBY_460] (rows=1 width=288)
                                        Output:["_col0"],aggregations:["avg(_col0)"]
                                        Select Operator [SEL_458] (rows=1108786976 width=108)
                                          Output:["_col0"]
                                          Select Operator [SEL_457] (rows=158402938 width=135)
                                            Output:["_col0","_col1"]
                                            Merge Join Operator [MERGEJOIN_889] (rows=158402938 width=135)
                                              Conds:RS_454._col0=RS_455._col0(Inner),Output:["_col1","_col2"]
                                            <-Map 84 [SIMPLE_EDGE]
                                              SHUFFLE [RS_455]
                                                PartitionCols:_col0
                                                Select Operator [SEL_453] (rows=8116 width=1119)
                                                  Output:["_col0"]
                                                  Filter Operator [FIL_840] (rows=8116 width=1119)
                                                    predicate:(d_year BETWEEN 1998 AND 2000 and d_date_sk is not null)
                                                     Please refer to the previous TableScan [TS_24]
                                            <-Map 90 [SIMPLE_EDGE]
                                              SHUFFLE [RS_454]
                                                PartitionCols:_col0
                                                Select Operator [SEL_450] (rows=144002668 width=135)
                                                  Output:["_col0","_col1","_col2"]
                                                  Filter Operator [FIL_839] (rows=144002668 width=135)
                                                    predicate:ws_sold_date_sk is not null
                                                     Please refer to the previous TableScan [TS_65]
                            <-Reducer 65 [CUSTOM_SIMPLE_EDGE]
                              PARTITION_ONLY_SHUFFLE [RS_570]
                                Group By Operator [GBY_566] (rows=174243235 width=135)
                                  Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(VALUE._col0)","count(VALUE._col1)"],keys:KEY._col0, KEY._col1, KEY._col2
                                <-Reducer 64 [SIMPLE_EDGE]
                                  SHUFFLE [RS_565]
                                    PartitionCols:_col0, _col1, _col2
                                    Group By Operator [GBY_564] (rows=348486471 width=135)
                                      Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(_col3)","count()"],keys:_col0, _col1, _col2
                                      Select Operator [SEL_562] (rows=348486471 width=135)
                                        Output:["_col0","_col1","_col2","_col3"]
                                        Merge Join Operator [MERGEJOIN_898] (rows=348486471 width=135)
                                          Conds:RS_558._col1=RS_559._col0(Inner),RS_558._col1=RS_560._col0(Inner),Output:["_col2","_col3","_col8","_col9","_col10"]
                                        <-Map 96 [SIMPLE_EDGE]
                                          SHUFFLE [RS_559]
                                            PartitionCols:_col0
                                            Select Operator [SEL_472] (rows=462000 width=1436)
                                              Output:["_col0","_col1","_col2","_col3"]
                                              Filter Operator [FIL_843] (rows=462000 width=1436)
                                                predicate:i_item_sk is not null
                                                 Please refer to the previous TableScan [TS_87]
                                        <-Reducer 63 [SIMPLE_EDGE]
                                          SHUFFLE [RS_560]
                                            PartitionCols:_col0
                                            Group By Operator [GBY_553] (rows=254100 width=1436)
                                              Output:["_col0"],keys:KEY._col0
                                            <-Reducer 62 [SIMPLE_EDGE]
                                              SHUFFLE [RS_552]
                                                PartitionCols:_col0
                                                Group By Operator [GBY_551] (rows=508200 width=1436)
                                                  Output:["_col0"],keys:_col0
                                                  Merge Join Operator [MERGEJOIN_897] (rows=508200 width=1436)
                                                    Conds:RS_547._col1, _col2, _col3=RS_548._col0, _col1, _col2(Inner),Output:["_col0"]
                                                  <-Map 96 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_547]
                                                      PartitionCols:_col1, _col2, _col3
                                                      Select Operator [SEL_475] (rows=462000 width=1436)
                                                        Output:["_col0","_col1","_col2","_col3"]
                                                        Filter Operator [FIL_844] (rows=462000 width=1436)
                                                          predicate:(i_brand_id is not null and i_class_id is not null and i_category_id is not null and i_item_sk is not null)
                                                           Please refer to the previous TableScan [TS_87]
                                                  <-Reducer 61 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_548]
                                                      PartitionCols:_col0, _col1, _col2
                                                      Select Operator [SEL_546] (rows=1 width=108)
                                                        Output:["_col0","_col1","_col2"]
                                                        Filter Operator [FIL_545] (rows=1 width=108)
                                                          predicate:(_col3 = 3)
                                                          Group By Operator [GBY_544] (rows=304916424 width=108)
                                                            Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                          <-Union 60 [SIMPLE_EDGE]
                                                            <-Reducer 59 [CONTAINS]
                                                              Reduce Output Operator [RS_543]
                                                                PartitionCols:_col0, _col1, _col2
                                                                Group By Operator [GBY_542] (rows=609832849 width=108)
                                                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                  Group By Operator [GBY_495] (rows=348477374 width=88)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                  <-Reducer 58 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_494]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                      Group By Operator [GBY_493] (rows=696954748 width=88)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count(1)"],keys:_col0, _col1, _col2
                                                                        Select Operator [SEL_491] (rows=696954748 width=88)
                                                                          Output:["_col0","_col1","_col2"]
                                                                          Merge Join Operator [MERGEJOIN_892] (rows=696954748 width=88)
                                                                            Conds:RS_488._col1=RS_489._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                          <-Map 96 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_489]
                                                                              PartitionCols:_col0
                                                                              Select Operator [SEL_484] (rows=462000 width=1436)
                                                                                Output:["_col0","_col1","_col2","_col3"]
                                                                                Filter Operator [FIL_847] (rows=462000 width=1436)
                                                                                  predicate:(i_item_sk is not null and i_brand_id is not null and i_class_id is not null and i_category_id is not null)
                                                                                   Please refer to the previous TableScan [TS_87]
                                                                          <-Reducer 57 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_488]
                                                                              PartitionCols:_col1
                                                                              Merge Join Operator [MERGEJOIN_891] (rows=633595212 width=88)
                                                                                Conds:RS_485._col0=RS_486._col0(Inner),Output:["_col1"]
                                                                              <-Map 17 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_486]
                                                                                  PartitionCols:_col0
                                                                                  Select Operator [SEL_481] (rows=8116 width=1119)
                                                                                    Output:["_col0"]
                                                                                    Filter Operator [FIL_846] (rows=8116 width=1119)
                                                                                      predicate:(d_year BETWEEN 1999 AND 2001 and d_date_sk is not null)
                                                                                       Please refer to the previous TableScan [TS_3]
                                                                              <-Map 97 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_485]
                                                                                  PartitionCols:_col0
                                                                                  Select Operator [SEL_478] (rows=575995635 width=88)
                                                                                    Output:["_col0","_col1"]
                                                                                    Filter Operator [FIL_845] (rows=575995635 width=88)
                                                                                      predicate:(ss_item_sk is not null and ss_sold_date_sk is not null)
                                                                                       Please refer to the previous TableScan [TS_93]
                                                            <-Reducer 68 [CONTAINS]
                                                              Reduce Output Operator [RS_543]
                                                                PartitionCols:_col0, _col1, _col2
                                                                Group By Operator [GBY_542] (rows=609832849 width=108)
                                                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                  Group By Operator [GBY_516] (rows=174233858 width=135)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                  <-Reducer 67 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_515]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                      Group By Operator [GBY_514] (rows=348467716 width=135)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count(1)"],keys:_col0, _col1, _col2
                                                                        Select Operator [SEL_512] (rows=348467716 width=135)
                                                                          Output:["_col0","_col1","_col2"]
                                                                          Merge Join Operator [MERGEJOIN_894] (rows=348467716 width=135)
                                                                            Conds:RS_509._col1=RS_510._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                          <-Map 96 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_510]
                                                                              PartitionCols:_col0
                                                                              Select Operator [SEL_505] (rows=462000 width=1436)
                                                                                Output:["_col0","_col1","_col2","_col3"]
                                                                                Filter Operator [FIL_850] (rows=462000 width=1436)
                                                                                  predicate:(i_item_sk is not null and i_brand_id is not null and i_class_id is not null and i_category_id is not null)
                                                                                   Please refer to the previous TableScan [TS_87]
                                                                          <-Reducer 66 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_509]
                                                                              PartitionCols:_col1
                                                                              Merge Join Operator [MERGEJOIN_893] (rows=316788826 width=135)
                                                                                Conds:RS_506._col0=RS_507._col0(Inner),Output:["_col1"]
                                                                              <-Map 17 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_507]
                                                                                  PartitionCols:_col0
                                                                                  Select Operator [SEL_502] (rows=8116 width=1119)
                                                                                    Output:["_col0"]
                                                                                    Filter Operator [FIL_849] (rows=8116 width=1119)
                                                                                      predicate:(d_year BETWEEN 1999 AND 2001 and d_date_sk is not null)
                                                                                       Please refer to the previous TableScan [TS_3]
                                                                              <-Map 98 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_506]
                                                                                  PartitionCols:_col0
                                                                                  Select Operator [SEL_499] (rows=287989836 width=135)
                                                                                    Output:["_col0","_col1"]
                                                                                    Filter Operator [FIL_848] (rows=287989836 width=135)
                                                                                      predicate:(cs_item_sk is not null and cs_sold_date_sk is not null)
                                                                                       Please refer to the previous TableScan [TS_114]
                                                            <-Reducer 71 [CONTAINS]
                                                              Reduce Output Operator [RS_543]
                                                                PartitionCols:_col0, _col1, _col2
                                                                Group By Operator [GBY_542] (rows=609832849 width=108)
                                                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                  Group By Operator [GBY_538] (rows=87121617 width=135)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                  <-Reducer 70 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_537]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                      Group By Operator [GBY_536] (rows=174243235 width=135)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count(1)"],keys:_col0, _col1, _col2
                                                                        Select Operator [SEL_534] (rows=174243235 width=135)
                                                                          Output:["_col0","_col1","_col2"]
                                                                          Merge Join Operator [MERGEJOIN_896] (rows=174243235 width=135)
                                                                            Conds:RS_531._col1=RS_532._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                          <-Map 96 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_532]
                                                                              PartitionCols:_col0
                                                                              Select Operator [SEL_527] (rows=462000 width=1436)
                                                                                Output:["_col0","_col1","_col2","_col3"]
                                                                                Filter Operator [FIL_853] (rows=462000 width=1436)
                                                                                  predicate:(i_item_sk is not null and i_brand_id is not null and i_class_id is not null and i_category_id is not null)
                                                                                   Please refer to the previous TableScan [TS_87]
                                                                          <-Reducer 69 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_531]
                                                                              PartitionCols:_col1
                                                                              Merge Join Operator [MERGEJOIN_895] (rows=158402938 width=135)
                                                                                Conds:RS_528._col0=RS_529._col0(Inner),Output:["_col1"]
                                                                              <-Map 17 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_529]
                                                                                  PartitionCols:_col0
                                                                                  Select Operator [SEL_524] (rows=8116 width=1119)
                                                                                    Output:["_col0"]
                                                                                    Filter Operator [FIL_852] (rows=8116 width=1119)
                                                                                      predicate:(d_year BETWEEN 1999 AND 2001 and d_date_sk is not null)
                                                                                       Please refer to the previous TableScan [TS_3]
                                                                              <-Map 99 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_528]
                                                                                  PartitionCols:_col0
                                                                                  Select Operator [SEL_521] (rows=144002668 width=135)
                                                                                    Output:["_col0","_col1"]
                                                                                    Filter Operator [FIL_851] (rows=144002668 width=135)
                                                                                      predicate:(ws_item_sk is not null and ws_sold_date_sk is not null)
                                                                                       Please refer to the previous TableScan [TS_136]
                                        <-Reducer 95 [SIMPLE_EDGE]
                                          SHUFFLE [RS_558]
                                            PartitionCols:_col1
                                            Merge Join Operator [MERGEJOIN_890] (rows=158402938 width=135)
                                              Conds:RS_555._col0=RS_556._col0(Inner),Output:["_col1","_col2","_col3"]
                                            <-Map 93 [SIMPLE_EDGE]
                                              SHUFFLE [RS_556]
                                                PartitionCols:_col0
                                                Select Operator [SEL_469] (rows=18262 width=1119)
                                                  Output:["_col0"]
                                                  Filter Operator [FIL_842] (rows=18262 width=1119)
                                                    predicate:((d_year = 2000) and (d_moy = 11) and d_date_sk is not null)
                                                     Please refer to the previous TableScan [TS_84]
                                            <-Map 101 [SIMPLE_EDGE]
                                              SHUFFLE [RS_555]
                                                PartitionCols:_col0
                                                Select Operator [SEL_466] (rows=144002668 width=135)
                                                  Output:["_col0","_col1","_col2","_col3"]
                                                  Filter Operator [FIL_841] (rows=144002668 width=135)
                                                    predicate:(ws_item_sk is not null and ws_sold_date_sk is not null)
                                                    TableScan [TS_464] (rows=144002668 width=135)
                                                      default@web_sales,web_sales,Tbl:COMPLETE,Col:NONE,Output:["ws_sold_date_sk","ws_item_sk","ws_quantity","ws_list_price"]
                  <-Reducer 5 [CONTAINS]
                    Reduce Output Operator [RS_577]
                      PartitionCols:_col0, _col1, _col2, _col3, _col4
                      Group By Operator [GBY_576] (rows=2032776160 width=405)
                        Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],aggregations:["sum(_col4)","sum(_col5)"],keys:_col0, _col1, _col2, _col3, 0
                        Select Operator [SEL_190] (rows=232318249 width=385)
                          Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                          Filter Operator [FIL_189] (rows=232318249 width=385)
                            predicate:(_col5 > _col1)
                            Merge Join Operator [MERGEJOIN_899] (rows=696954748 width=385)
                              Conds:(Inner),(Inner),Output:["_col1","_col2","_col3","_col4","_col5","_col6"]
                            <-Reducer 20 [CUSTOM_SIMPLE_EDGE]
                              PARTITION_ONLY_SHUFFLE [RS_186]
                                Group By Operator [GBY_79] (rows=1 width=288)
                                  Output:["_col0"],aggregations:["avg(VALUE._col0)"]
                                <-Union 19 [CUSTOM_SIMPLE_EDGE]
                                  <-Reducer 18 [CONTAINS]
                                    Reduce Output Operator [RS_78]
                                      Group By Operator [GBY_77] (rows=1 width=288)
                                        Output:["_col0"],aggregations:["avg(_col0)"]
                                        Select Operator [SEL_75] (rows=1108786976 width=108)
                                          Output:["_col0"]
                                          Select Operator [SEL_53] (rows=633595212 width=88)
                                            Output:["_col0","_col1"]
                                            Merge Join Operator [MERGEJOIN_857] (rows=633595212 width=88)
                                              Conds:RS_50._col0=RS_51._col0(Inner),Output:["_col1","_col2"]
                                            <-Map 17 [SIMPLE_EDGE]
                                              SHUFFLE [RS_51]
                                                PartitionCols:_col0
                                                Select Operator [SEL_49] (rows=8116 width=1119)
                                                  Output:["_col0"]
                                                  Filter Operator [FIL_786] (rows=8116 width=1119)
                                                    predicate:(d_year BETWEEN 1999 AND 2001 and d_date_sk is not null)
                                                     Please refer to the previous TableScan [TS_3]
                                            <-Map 88 [SIMPLE_EDGE]
                                              SHUFFLE [RS_50]
                                                PartitionCols:_col0
                                                Select Operator [SEL_46] (rows=575995635 width=88)
                                                  Output:["_col0","_col1","_col2"]
                                                  Filter Operator [FIL_785] (rows=575995635 width=88)
                                                    predicate:ss_sold_date_sk is not null
                                                     Please refer to the previous TableScan [TS_44]
                                  <-Reducer 77 [CONTAINS]
                                    Reduce Output Operator [RS_78]
                                      Group By Operator [GBY_77] (rows=1 width=288)
                                        Output:["_col0"],aggregations:["avg(_col0)"]
                                        Select Operator [SEL_75] (rows=1108786976 width=108)
                                          Output:["_col0"]
                                          Select Operator [SEL_63] (rows=316788826 width=135)
                                            Output:["_col0","_col1"]
                                            Merge Join Operator [MERGEJOIN_858] (rows=316788826 width=135)
                                              Conds:RS_60._col0=RS_61._col0(Inner),Output:["_col1","_col2"]
                                            <-Map 76 [SIMPLE_EDGE]
                                              SHUFFLE [RS_61]
                                                PartitionCols:_col0
                                                Select Operator [SEL_59] (rows=8116 width=1119)
                                                  Output:["_col0"]
                                                  Filter Operator [FIL_788] (rows=8116 width=1119)
                                                    predicate:(d_year BETWEEN 1998 AND 2000 and d_date_sk is not null)
                                                     Please refer to the previous TableScan [TS_13]
                                            <-Map 89 [SIMPLE_EDGE]
                                              SHUFFLE [RS_60]
                                                PartitionCols:_col0
                                                Select Operator [SEL_56] (rows=287989836 width=135)
                                                  Output:["_col0","_col1","_col2"]
                                                  Filter Operator [FIL_787] (rows=287989836 width=135)
                                                    predicate:cs_sold_date_sk is not null
                                                     Please refer to the previous TableScan [TS_54]
                                  <-Reducer 85 [CONTAINS]
                                    Reduce Output Operator [RS_78]
                                      Group By Operator [GBY_77] (rows=1 width=288)
                                        Output:["_col0"],aggregations:["avg(_col0)"]
                                        Select Operator [SEL_75] (rows=1108786976 width=108)
                                          Output:["_col0"]
                                          Select Operator [SEL_74] (rows=158402938 width=135)
                                            Output:["_col0","_col1"]
                                            Merge Join Operator [MERGEJOIN_859] (rows=158402938 width=135)
                                              Conds:RS_71._col0=RS_72._col0(Inner),Output:["_col1","_col2"]
                                            <-Map 84 [SIMPLE_EDGE]
                                              SHUFFLE [RS_72]
                                                PartitionCols:_col0
                                                Select Operator [SEL_70] (rows=8116 width=1119)
                                                  Output:["_col0"]
                                                  Filter Operator [FIL_790] (rows=8116 width=1119)
                                                    predicate:(d_year BETWEEN 1998 AND 2000 and d_date_sk is not null)
                                                     Please refer to the previous TableScan [TS_24]
                                            <-Map 90 [SIMPLE_EDGE]
                                              SHUFFLE [RS_71]
                                                PartitionCols:_col0
                                                Select Operator [SEL_67] (rows=144002668 width=135)
                                                  Output:["_col0","_col1","_col2"]
                                                  Filter Operator [FIL_789] (rows=144002668 width=135)
                                                    predicate:ws_sold_date_sk is not null
                                                     Please refer to the previous TableScan [TS_65]
                            <-Reducer 29 [CUSTOM_SIMPLE_EDGE]
                              PARTITION_ONLY_SHUFFLE [RS_187]
                                Group By Operator [GBY_183] (rows=696954748 width=88)
                                  Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(VALUE._col0)","count(VALUE._col1)"],keys:KEY._col0, KEY._col1, KEY._col2
                                <-Reducer 28 [SIMPLE_EDGE]
                                  SHUFFLE [RS_182]
                                    PartitionCols:_col0, _col1, _col2
                                    Group By Operator [GBY_181] (rows=1393909496 width=88)
                                      Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(_col3)","count()"],keys:_col0, _col1, _col2
                                      Select Operator [SEL_179] (rows=1393909496 width=88)
                                        Output:["_col0","_col1","_col2","_col3"]
                                        Merge Join Operator [MERGEJOIN_868] (rows=1393909496 width=88)
                                          Conds:RS_175._col1=RS_176._col0(Inner),RS_175._col1=RS_177._col0(Inner),Output:["_col2","_col3","_col8","_col9","_col10"]
                                        <-Map 96 [SIMPLE_EDGE]
                                          SHUFFLE [RS_176]
                                            PartitionCols:_col0
                                            Select Operator [SEL_89] (rows=462000 width=1436)
                                              Output:["_col0","_col1","_col2","_col3"]
                                              Filter Operator [FIL_793] (rows=462000 width=1436)
                                                predicate:i_item_sk is not null
                                                 Please refer to the previous TableScan [TS_87]
                                        <-Reducer 27 [SIMPLE_EDGE]
                                          SHUFFLE [RS_177]
                                            PartitionCols:_col0
                                            Group By Operator [GBY_170] (rows=254100 width=1436)
                                              Output:["_col0"],keys:KEY._col0
                                            <-Reducer 26 [SIMPLE_EDGE]
                                              SHUFFLE [RS_169]
                                                PartitionCols:_col0
                                                Group By Operator [GBY_168] (rows=508200 width=1436)
                                                  Output:["_col0"],keys:_col0
                                                  Merge Join Operator [MERGEJOIN_867] (rows=508200 width=1436)
                                                    Conds:RS_164._col1, _col2, _col3=RS_165._col0, _col1, _col2(Inner),Output:["_col0"]
                                                  <-Map 96 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_164]
                                                      PartitionCols:_col1, _col2, _col3
                                                      Select Operator [SEL_92] (rows=462000 width=1436)
                                                        Output:["_col0","_col1","_col2","_col3"]
                                                        Filter Operator [FIL_794] (rows=462000 width=1436)
                                                          predicate:(i_brand_id is not null and i_class_id is not null and i_category_id is not null and i_item_sk is not null)
                                                           Please refer to the previous TableScan [TS_87]
                                                  <-Reducer 25 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_165]
                                                      PartitionCols:_col0, _col1, _col2
                                                      Select Operator [SEL_163] (rows=1 width=108)
                                                        Output:["_col0","_col1","_col2"]
                                                        Filter Operator [FIL_162] (rows=1 width=108)
                                                          predicate:(_col3 = 3)
                                                          Group By Operator [GBY_161] (rows=304916424 width=108)
                                                            Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                          <-Union 24 [SIMPLE_EDGE]
                                                            <-Reducer 23 [CONTAINS]
                                                              Reduce Output Operator [RS_160]
                                                                PartitionCols:_col0, _col1, _col2
                                                                Group By Operator [GBY_159] (rows=609832849 width=108)
                                                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                  Group By Operator [GBY_112] (rows=348477374 width=88)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                  <-Reducer 22 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_111]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                      Group By Operator [GBY_110] (rows=696954748 width=88)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count(1)"],keys:_col0, _col1, _col2
                                                                        Select Operator [SEL_108] (rows=696954748 width=88)
                                                                          Output:["_col0","_col1","_col2"]
                                                                          Merge Join Operator [MERGEJOIN_862] (rows=696954748 width=88)
                                                                            Conds:RS_105._col1=RS_106._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                          <-Map 96 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_106]
                                                                              PartitionCols:_col0
                                                                              Select Operator [SEL_101] (rows=462000 width=1436)
                                                                                Output:["_col0","_col1","_col2","_col3"]
                                                                                Filter Operator [FIL_797] (rows=462000 width=1436)
                                                                                  predicate:(i_item_sk is not null and i_brand_id is not null and i_class_id is not null and i_category_id is not null)
                                                                                   Please refer to the previous TableScan [TS_87]
                                                                          <-Reducer 21 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_105]
                                                                              PartitionCols:_col1
                                                                              Merge Join Operator [MERGEJOIN_861] (rows=633595212 width=88)
                                                                                Conds:RS_102._col0=RS_103._col0(Inner),Output:["_col1"]
                                                                              <-Map 17 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_103]
                                                                                  PartitionCols:_col0
                                                                                  Select Operator [SEL_98] (rows=8116 width=1119)
                                                                                    Output:["_col0"]
                                                                                    Filter Operator [FIL_796] (rows=8116 width=1119)
                                                                                      predicate:(d_year BETWEEN 1999 AND 2001 and d_date_sk is not null)
                                                                                       Please refer to the previous TableScan [TS_3]
                                                                              <-Map 97 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_102]
                                                                                  PartitionCols:_col0
                                                                                  Select Operator [SEL_95] (rows=575995635 width=88)
                                                                                    Output:["_col0","_col1"]
                                                                                    Filter Operator [FIL_795] (rows=575995635 width=88)
                                                                                      predicate:(ss_item_sk is not null and ss_sold_date_sk is not null)
                                                                                       Please refer to the previous TableScan [TS_93]
                                                            <-Reducer 32 [CONTAINS]
                                                              Reduce Output Operator [RS_160]
                                                                PartitionCols:_col0, _col1, _col2
                                                                Group By Operator [GBY_159] (rows=609832849 width=108)
                                                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                  Group By Operator [GBY_133] (rows=174233858 width=135)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                  <-Reducer 31 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_132]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                      Group By Operator [GBY_131] (rows=348467716 width=135)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count(1)"],keys:_col0, _col1, _col2
                                                                        Select Operator [SEL_129] (rows=348467716 width=135)
                                                                          Output:["_col0","_col1","_col2"]
                                                                          Merge Join Operator [MERGEJOIN_864] (rows=348467716 width=135)
                                                                            Conds:RS_126._col1=RS_127._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                          <-Map 96 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_127]
                                                                              PartitionCols:_col0
                                                                              Select Operator [SEL_122] (rows=462000 width=1436)
                                                                                Output:["_col0","_col1","_col2","_col3"]
                                                                                Filter Operator [FIL_800] (rows=462000 width=1436)
                                                                                  predicate:(i_item_sk is not null and i_brand_id is not null and i_class_id is not null and i_category_id is not null)
                                                                                   Please refer to the previous TableScan [TS_87]
                                                                          <-Reducer 30 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_126]
                                                                              PartitionCols:_col1
                                                                              Merge Join Operator [MERGEJOIN_863] (rows=316788826 width=135)
                                                                                Conds:RS_123._col0=RS_124._col0(Inner),Output:["_col1"]
                                                                              <-Map 17 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_124]
                                                                                  PartitionCols:_col0
                                                                                  Select Operator [SEL_119] (rows=8116 width=1119)
                                                                                    Output:["_col0"]
                                                                                    Filter Operator [FIL_799] (rows=8116 width=1119)
                                                                                      predicate:(d_year BETWEEN 1999 AND 2001 and d_date_sk is not null)
                                                                                       Please refer to the previous TableScan [TS_3]
                                                                              <-Map 98 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_123]
                                                                                  PartitionCols:_col0
                                                                                  Select Operator [SEL_116] (rows=287989836 width=135)
                                                                                    Output:["_col0","_col1"]
                                                                                    Filter Operator [FIL_798] (rows=287989836 width=135)
                                                                                      predicate:(cs_item_sk is not null and cs_sold_date_sk is not null)
                                                                                       Please refer to the previous TableScan [TS_114]
                                                            <-Reducer 35 [CONTAINS]
                                                              Reduce Output Operator [RS_160]
                                                                PartitionCols:_col0, _col1, _col2
                                                                Group By Operator [GBY_159] (rows=609832849 width=108)
                                                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                  Group By Operator [GBY_155] (rows=87121617 width=135)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                  <-Reducer 34 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_154]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                      Group By Operator [GBY_153] (rows=174243235 width=135)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count(1)"],keys:_col0, _col1, _col2
                                                                        Select Operator [SEL_151] (rows=174243235 width=135)
                                                                          Output:["_col0","_col1","_col2"]
                                                                          Merge Join Operator [MERGEJOIN_866] (rows=174243235 width=135)
                                                                            Conds:RS_148._col1=RS_149._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                          <-Map 96 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_149]
                                                                              PartitionCols:_col0
                                                                              Select Operator [SEL_144] (rows=462000 width=1436)
                                                                                Output:["_col0","_col1","_col2","_col3"]
                                                                                Filter Operator [FIL_803] (rows=462000 width=1436)
                                                                                  predicate:(i_item_sk is not null and i_brand_id is not null and i_class_id is not null and i_category_id is not null)
                                                                                   Please refer to the previous TableScan [TS_87]
                                                                          <-Reducer 33 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_148]
                                                                              PartitionCols:_col1
                                                                              Merge Join Operator [MERGEJOIN_865] (rows=158402938 width=135)
                                                                                Conds:RS_145._col0=RS_146._col0(Inner),Output:["_col1"]
                                                                              <-Map 17 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_146]
                                                                                  PartitionCols:_col0
                                                                                  Select Operator [SEL_141] (rows=8116 width=1119)
                                                                                    Output:["_col0"]
                                                                                    Filter Operator [FIL_802] (rows=8116 width=1119)
                                                                                      predicate:(d_year BETWEEN 1999 AND 2001 and d_date_sk is not null)
                                                                                       Please refer to the previous TableScan [TS_3]
                                                                              <-Map 99 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_145]
                                                                                  PartitionCols:_col0
                                                                                  Select Operator [SEL_138] (rows=144002668 width=135)
                                                                                    Output:["_col0","_col1"]
                                                                                    Filter Operator [FIL_801] (rows=144002668 width=135)
                                                                                      predicate:(ws_item_sk is not null and ws_sold_date_sk is not null)
                                                                                       Please refer to the previous TableScan [TS_136]
                                        <-Reducer 92 [SIMPLE_EDGE]
                                          SHUFFLE [RS_175]
                                            PartitionCols:_col1
                                            Merge Join Operator [MERGEJOIN_860] (rows=633595212 width=88)
                                              Conds:RS_172._col0=RS_173._col0(Inner),Output:["_col1","_col2","_col3"]
                                            <-Map 93 [SIMPLE_EDGE]
                                              SHUFFLE [RS_173]
                                                PartitionCols:_col0
                                                Select Operator [SEL_86] (rows=18262 width=1119)
                                                  Output:["_col0"]
                                                  Filter Operator [FIL_792] (rows=18262 width=1119)
                                                    predicate:((d_year = 2000) and (d_moy = 11) and d_date_sk is not null)
                                                     Please refer to the previous TableScan [TS_84]
                                            <-Map 91 [SIMPLE_EDGE]
                                              SHUFFLE [RS_172]
                                                PartitionCols:_col0
                                                Select Operator [SEL_83] (rows=575995635 width=88)
                                                  Output:["_col0","_col1","_col2","_col3"]
                                                  Filter Operator [FIL_791] (rows=575995635 width=88)
                                                    predicate:(ss_item_sk is not null and ss_sold_date_sk is not null)
                                                    TableScan [TS_81] (rows=575995635 width=88)
                                                      default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_item_sk","ss_quantity","ss_list_price"]
                            <-Reducer 4 [CUSTOM_SIMPLE_EDGE]
                              PARTITION_ONLY_SHUFFLE [RS_185]
                                Select Operator [SEL_43] (rows=1 width=8)
                                  Filter Operator [FIL_42] (rows=1 width=8)
                                    predicate:(sq_count_check(_col0) <= 1)
                                    Group By Operator [GBY_40] (rows=1 width=8)
                                      Output:["_col0"],aggregations:["count()"]
                                      Select Operator [SEL_35] (rows=1 width=8)
                                        Group By Operator [GBY_34] (rows=1 width=8)
                                          Output:["_col0"],aggregations:["count(VALUE._col0)"]
                                        <-Union 3 [CUSTOM_SIMPLE_EDGE]
                                          <-Reducer 2 [CONTAINS]
                                            Reduce Output Operator [RS_33]
                                              Group By Operator [GBY_32] (rows=1 width=8)
                                                Output:["_col0"],aggregations:["count(_col0)"]
                                                Select Operator [SEL_31] (rows=1108786976 width=108)
                                                  Output:["_col0"]
                                                  Select Operator [SEL_9] (rows=633595212 width=88)
                                                    Output:["_col0"]
                                                    Merge Join Operator [MERGEJOIN_854] (rows=633595212 width=88)
                                                      Conds:RS_6._col0=RS_7._col0(Inner),Output:["_col1"]
                                                    <-Map 17 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_7]
                                                        PartitionCols:_col0
                                                        Select Operator [SEL_5] (rows=8116 width=1119)
                                                          Output:["_col0"]
                                                          Filter Operator [FIL_780] (rows=8116 width=1119)
                                                            predicate:(d_year BETWEEN 1999 AND 2001 and d_date_sk is not null)
                                                             Please refer to the previous TableScan [TS_3]
                                                    <-Map 1 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_6]
                                                        PartitionCols:_col0
                                                        Select Operator [SEL_2] (rows=575995635 width=88)
                                                          Output:["_col0","_col1"]
                                                          Filter Operator [FIL_779] (rows=575995635 width=88)
                                                            predicate:ss_sold_date_sk is not null
                                                             Please refer to the previous TableScan [TS_0]
                                          <-Reducer 73 [CONTAINS]
                                            Reduce Output Operator [RS_33]
                                              Group By Operator [GBY_32] (rows=1 width=8)
                                                Output:["_col0"],aggregations:["count(_col0)"]
                                                Select Operator [SEL_31] (rows=1108786976 width=108)
                                                  Output:["_col0"]
                                                  Select Operator [SEL_19] (rows=316788826 width=135)
                                                    Output:["_col0"]
                                                    Merge Join Operator [MERGEJOIN_855] (rows=316788826 width=135)
                                                      Conds:RS_16._col0=RS_17._col0(Inner),Output:["_col1"]
                                                    <-Map 76 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_17]
                                                        PartitionCols:_col0
                                                        Select Operator [SEL_15] (rows=8116 width=1119)
                                                          Output:["_col0"]
                                                          Filter Operator [FIL_782] (rows=8116 width=1119)
                                                            predicate:(d_year BETWEEN 1998 AND 2000 and d_date_sk is not null)
                                                             Please refer to the previous TableScan [TS_13]
                                                    <-Map 72 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_16]
                                                        PartitionCols:_col0
                                                        Select Operator [SEL_12] (rows=287989836 width=135)
                                                          Output:["_col0","_col1"]
                                                          Filter Operator [FIL_781] (rows=287989836 width=135)
                                                            predicate:cs_sold_date_sk is not null
                                                             Please refer to the previous TableScan [TS_10]
                                          <-Reducer 81 [CONTAINS]
                                            Reduce Output Operator [RS_33]
                                              Group By Operator [GBY_32] (rows=1 width=8)
                                                Output:["_col0"],aggregations:["count(_col0)"]
                                                Select Operator [SEL_31] (rows=1108786976 width=108)
                                                  Output:["_col0"]
                                                  Select Operator [SEL_30] (rows=158402938 width=135)
                                                    Output:["_col0"]
                                                    Merge Join Operator [MERGEJOIN_856] (rows=158402938 width=135)
                                                      Conds:RS_27._col0=RS_28._col0(Inner),Output:["_col1"]
                                                    <-Map 84 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_28]
                                                        PartitionCols:_col0
                                                        Select Operator [SEL_26] (rows=8116 width=1119)
                                                          Output:["_col0"]
                                                          Filter Operator [FIL_784] (rows=8116 width=1119)
                                                            predicate:(d_year BETWEEN 1998 AND 2000 and d_date_sk is not null)
                                                             Please refer to the previous TableScan [TS_24]
                                                    <-Map 80 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_27]
                                                        PartitionCols:_col0
                                                        Select Operator [SEL_23] (rows=144002668 width=135)
                                                          Output:["_col0","_col1"]
                                                          Filter Operator [FIL_783] (rows=144002668 width=135)
                                                            predicate:ws_sold_date_sk is not null
                                                             Please refer to the previous TableScan [TS_21]

