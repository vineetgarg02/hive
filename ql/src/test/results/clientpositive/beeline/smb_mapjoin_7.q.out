>>>  set hive.strict.checks.bucketing=false;
No rows affected 
>>>  
>>>  set hive.mapred.mode=nonstrict;
No rows affected 
>>>  set hive.exec.reducers.max = 1;
No rows affected 
>>>  
>>>  
>>>  CREATE TABLE smb_bucket4_1(key int, value string) CLUSTERED BY (key) SORTED BY (key) INTO 2 BUCKETS;
INFO  : Compiling commandqueryId=(!!{queryId}!!): CREATE TABLE smb_bucket4_1(key int, value string) CLUSTERED BY (key) SORTED BY (key) INTO 2 BUCKETS
INFO  : Semantic Analysis Completed
INFO  : Returning Hive schema: Schema(fieldSchemas:null, properties:null)
INFO  : Completed compiling commandqueryId=(!!{queryId}!!); Time taken: !!ELIDED!! seconds
INFO  : Executing commandqueryId=(!!{queryId}!!): CREATE TABLE smb_bucket4_1(key int, value string) CLUSTERED BY (key) SORTED BY (key) INTO 2 BUCKETS
INFO  : PREHOOK: query: CREATE TABLE smb_bucket4_1(key int, value string) CLUSTERED BY (key) SORTED BY (key) INTO 2 BUCKETS
INFO  : PREHOOK: type: CREATETABLE
INFO  : PREHOOK: Output: database:smb_mapjoin_7
INFO  : PREHOOK: Output: smb_mapjoin_7@smb_bucket4_1
INFO  : Starting task [Stage-0:DDL] in serial mode
INFO  : POSTHOOK: query: CREATE TABLE smb_bucket4_1(key int, value string) CLUSTERED BY (key) SORTED BY (key) INTO 2 BUCKETS
INFO  : POSTHOOK: type: CREATETABLE
INFO  : POSTHOOK: Output: database:smb_mapjoin_7
INFO  : POSTHOOK: Output: smb_mapjoin_7@smb_bucket4_1
INFO  : Completed executing commandqueryId=(!!{queryId}!!); Time taken: !!ELIDED!! seconds
INFO  : OK
DEBUG : Shutting down query CREATE TABLE smb_bucket4_1(key int, value string) CLUSTERED BY (key) SORTED BY (key) INTO 2 BUCKETS
No rows affected 
>>>  
>>>  
>>>  CREATE TABLE smb_bucket4_2(key int, value string) CLUSTERED BY (key) SORTED BY (key) INTO 2 BUCKETS;
INFO  : Compiling commandqueryId=(!!{queryId}!!): CREATE TABLE smb_bucket4_2(key int, value string) CLUSTERED BY (key) SORTED BY (key) INTO 2 BUCKETS
INFO  : Semantic Analysis Completed
INFO  : Returning Hive schema: Schema(fieldSchemas:null, properties:null)
INFO  : Completed compiling commandqueryId=(!!{queryId}!!); Time taken: !!ELIDED!! seconds
INFO  : Executing commandqueryId=(!!{queryId}!!): CREATE TABLE smb_bucket4_2(key int, value string) CLUSTERED BY (key) SORTED BY (key) INTO 2 BUCKETS
INFO  : PREHOOK: query: CREATE TABLE smb_bucket4_2(key int, value string) CLUSTERED BY (key) SORTED BY (key) INTO 2 BUCKETS
INFO  : PREHOOK: type: CREATETABLE
INFO  : PREHOOK: Output: database:smb_mapjoin_7
INFO  : PREHOOK: Output: smb_mapjoin_7@smb_bucket4_2
INFO  : Starting task [Stage-0:DDL] in serial mode
INFO  : POSTHOOK: query: CREATE TABLE smb_bucket4_2(key int, value string) CLUSTERED BY (key) SORTED BY (key) INTO 2 BUCKETS
INFO  : POSTHOOK: type: CREATETABLE
INFO  : POSTHOOK: Output: database:smb_mapjoin_7
INFO  : POSTHOOK: Output: smb_mapjoin_7@smb_bucket4_2
INFO  : Completed executing commandqueryId=(!!{queryId}!!); Time taken: !!ELIDED!! seconds
INFO  : OK
DEBUG : Shutting down query CREATE TABLE smb_bucket4_2(key int, value string) CLUSTERED BY (key) SORTED BY (key) INTO 2 BUCKETS
No rows affected 
>>>  
>>>  
>>>  
>>>  
>>>  create table smb_join_results(k1 int, v1 string, k2 int, v2 string);
INFO  : Compiling commandqueryId=(!!{queryId}!!): create table smb_join_results(k1 int, v1 string, k2 int, v2 string)
INFO  : Semantic Analysis Completed
INFO  : Returning Hive schema: Schema(fieldSchemas:null, properties:null)
INFO  : Completed compiling commandqueryId=(!!{queryId}!!); Time taken: !!ELIDED!! seconds
INFO  : Executing commandqueryId=(!!{queryId}!!): create table smb_join_results(k1 int, v1 string, k2 int, v2 string)
INFO  : PREHOOK: query: create table smb_join_results(k1 int, v1 string, k2 int, v2 string)
INFO  : PREHOOK: type: CREATETABLE
INFO  : PREHOOK: Output: database:smb_mapjoin_7
INFO  : PREHOOK: Output: smb_mapjoin_7@smb_join_results
INFO  : Starting task [Stage-0:DDL] in serial mode
INFO  : POSTHOOK: query: create table smb_join_results(k1 int, v1 string, k2 int, v2 string)
INFO  : POSTHOOK: type: CREATETABLE
INFO  : POSTHOOK: Output: database:smb_mapjoin_7
INFO  : POSTHOOK: Output: smb_mapjoin_7@smb_join_results
INFO  : Completed executing commandqueryId=(!!{queryId}!!); Time taken: !!ELIDED!! seconds
INFO  : OK
DEBUG : Shutting down query create table smb_join_results(k1 int, v1 string, k2 int, v2 string)
No rows affected 
>>>  create table smb_join_results_empty_bigtable(k1 int, v1 string, k2 int, v2 string);
INFO  : Compiling commandqueryId=(!!{queryId}!!): create table smb_join_results_empty_bigtable(k1 int, v1 string, k2 int, v2 string)
INFO  : Semantic Analysis Completed
INFO  : Returning Hive schema: Schema(fieldSchemas:null, properties:null)
INFO  : Completed compiling commandqueryId=(!!{queryId}!!); Time taken: !!ELIDED!! seconds
INFO  : Executing commandqueryId=(!!{queryId}!!): create table smb_join_results_empty_bigtable(k1 int, v1 string, k2 int, v2 string)
INFO  : PREHOOK: query: create table smb_join_results_empty_bigtable(k1 int, v1 string, k2 int, v2 string)
INFO  : PREHOOK: type: CREATETABLE
INFO  : PREHOOK: Output: database:smb_mapjoin_7
INFO  : PREHOOK: Output: smb_mapjoin_7@smb_join_results_empty_bigtable
INFO  : Starting task [Stage-0:DDL] in serial mode
INFO  : POSTHOOK: query: create table smb_join_results_empty_bigtable(k1 int, v1 string, k2 int, v2 string)
INFO  : POSTHOOK: type: CREATETABLE
INFO  : POSTHOOK: Output: database:smb_mapjoin_7
INFO  : POSTHOOK: Output: smb_mapjoin_7@smb_join_results_empty_bigtable
INFO  : Completed executing commandqueryId=(!!{queryId}!!); Time taken: !!ELIDED!! seconds
INFO  : OK
DEBUG : Shutting down query create table smb_join_results_empty_bigtable(k1 int, v1 string, k2 int, v2 string)
No rows affected 
>>>  create table normal_join_results(k1 int, v1 string, k2 int, v2 string);
INFO  : Compiling commandqueryId=(!!{queryId}!!): create table normal_join_results(k1 int, v1 string, k2 int, v2 string)
INFO  : Semantic Analysis Completed
INFO  : Returning Hive schema: Schema(fieldSchemas:null, properties:null)
INFO  : Completed compiling commandqueryId=(!!{queryId}!!); Time taken: !!ELIDED!! seconds
INFO  : Executing commandqueryId=(!!{queryId}!!): create table normal_join_results(k1 int, v1 string, k2 int, v2 string)
INFO  : PREHOOK: query: create table normal_join_results(k1 int, v1 string, k2 int, v2 string)
INFO  : PREHOOK: type: CREATETABLE
INFO  : PREHOOK: Output: database:smb_mapjoin_7
INFO  : PREHOOK: Output: smb_mapjoin_7@normal_join_results
INFO  : Starting task [Stage-0:DDL] in serial mode
INFO  : POSTHOOK: query: create table normal_join_results(k1 int, v1 string, k2 int, v2 string)
INFO  : POSTHOOK: type: CREATETABLE
INFO  : POSTHOOK: Output: database:smb_mapjoin_7
INFO  : POSTHOOK: Output: smb_mapjoin_7@normal_join_results
INFO  : Completed executing commandqueryId=(!!{queryId}!!); Time taken: !!ELIDED!! seconds
INFO  : OK
DEBUG : Shutting down query create table normal_join_results(k1 int, v1 string, k2 int, v2 string)
No rows affected 
>>>  
>>>  load data local inpath '../../data/files/empty1.txt' into table smb_bucket4_1;
INFO  : Compiling commandqueryId=(!!{queryId}!!): load data local inpath '../../data/files/empty1.txt' into table smb_bucket4_1
INFO  : Semantic Analysis Completed
INFO  : Returning Hive schema: Schema(fieldSchemas:null, properties:null)
INFO  : Completed compiling commandqueryId=(!!{queryId}!!); Time taken: !!ELIDED!! seconds
INFO  : Executing commandqueryId=(!!{queryId}!!): load data local inpath '../../data/files/empty1.txt' into table smb_bucket4_1
INFO  : PREHOOK: query: load data local inpath '../../data/files/empty1.txt' into table smb_bucket4_1
INFO  : PREHOOK: type: LOAD
INFO  : PREHOOK: Input: file:/!!ELIDED!!
INFO  : PREHOOK: Output: smb_mapjoin_7@smb_bucket4_1
INFO  : Starting task [Stage-0:MOVE] in serial mode
INFO  : Loading data to table smb_mapjoin_7.smb_bucket4_1 from file:/!!ELIDED!!
INFO  : Starting task [Stage-1:STATS] in serial mode
INFO  : POSTHOOK: query: load data local inpath '../../data/files/empty1.txt' into table smb_bucket4_1
INFO  : POSTHOOK: type: LOAD
INFO  : POSTHOOK: Input: file:/!!ELIDED!!
INFO  : POSTHOOK: Output: smb_mapjoin_7@smb_bucket4_1
INFO  : Completed executing commandqueryId=(!!{queryId}!!); Time taken: !!ELIDED!! seconds
INFO  : OK
DEBUG : Shutting down query load data local inpath '../../data/files/empty1.txt' into table smb_bucket4_1
No rows affected 
>>>  load data local inpath '../../data/files/empty2.txt' into table smb_bucket4_1;
INFO  : Compiling commandqueryId=(!!{queryId}!!): load data local inpath '../../data/files/empty2.txt' into table smb_bucket4_1
INFO  : Semantic Analysis Completed
INFO  : Returning Hive schema: Schema(fieldSchemas:null, properties:null)
INFO  : Completed compiling commandqueryId=(!!{queryId}!!); Time taken: !!ELIDED!! seconds
INFO  : Executing commandqueryId=(!!{queryId}!!): load data local inpath '../../data/files/empty2.txt' into table smb_bucket4_1
INFO  : PREHOOK: query: load data local inpath '../../data/files/empty2.txt' into table smb_bucket4_1
INFO  : PREHOOK: type: LOAD
INFO  : PREHOOK: Input: file:/!!ELIDED!!
INFO  : PREHOOK: Output: smb_mapjoin_7@smb_bucket4_1
INFO  : Starting task [Stage-0:MOVE] in serial mode
INFO  : Loading data to table smb_mapjoin_7.smb_bucket4_1 from file:/!!ELIDED!!
INFO  : Starting task [Stage-1:STATS] in serial mode
INFO  : POSTHOOK: query: load data local inpath '../../data/files/empty2.txt' into table smb_bucket4_1
INFO  : POSTHOOK: type: LOAD
INFO  : POSTHOOK: Input: file:/!!ELIDED!!
INFO  : POSTHOOK: Output: smb_mapjoin_7@smb_bucket4_1
INFO  : Completed executing commandqueryId=(!!{queryId}!!); Time taken: !!ELIDED!! seconds
INFO  : OK
DEBUG : Shutting down query load data local inpath '../../data/files/empty2.txt' into table smb_bucket4_1
No rows affected 
>>>  
>>>  insert overwrite table smb_bucket4_2
select * from default.src;
INFO  : Compiling commandqueryId=(!!{queryId}!!): insert overwrite table smb_bucket4_2
select * from default.src
INFO  : Semantic Analysis Completed
INFO  : Returning Hive schema: Schema(fieldSchemas:[FieldSchema(name:_col0, type:int, comment:null), FieldSchema(name:_col1, type:string, comment:null)], properties:null)
INFO  : Completed compiling commandqueryId=(!!{queryId}!!); Time taken: !!ELIDED!! seconds
INFO  : Executing commandqueryId=(!!{queryId}!!): insert overwrite table smb_bucket4_2
select * from default.src
INFO  : PREHOOK: query: insert overwrite table smb_bucket4_2
select * from default.src
INFO  : PREHOOK: type: QUERY
INFO  : PREHOOK: Input: default@src
INFO  : PREHOOK: Output: smb_mapjoin_7@smb_bucket4_2
WARN  : Hive-on-MR is deprecated in Hive 2 and may not be available in the future versions. Consider using a different execution engine (i.e. spark, tez) or using Hive 1.X releases.
INFO  : Query ID = !!{queryId}!!
INFO  : Total jobs = 1
INFO  : Launching Job 1 out of 1
INFO  : Starting task [Stage-1:MAPRED] in serial mode
INFO  : Number of reduce tasks determined at compile time: 1
INFO  : In order to change the average load for a reducer (in bytes):
INFO  :   set hive.exec.reducers.bytes.per.reducer=<number>
INFO  : In order to limit the maximum number of reducers:
INFO  :   set hive.exec.reducers.max=<number>
INFO  : In order to set a constant number of reducers:
INFO  :   set mapreduce.job.reduces=<number>
DEBUG : Configuring job !!{jobId}}!! with file:/!!ELIDED!! as the submit dir
DEBUG : adding the following namenodes' delegation tokens:[file:///]
DEBUG : Creating splits at file:/!!ELIDED!!
INFO  : number of splits:1
INFO  : Submitting tokens for job: !!{jobId}}!!
INFO  : The url to track the job: http://localhost:8080/
INFO  : Job running in-process (local Hadoop)
INFO  : Ended Job = !!{jobId}!!
INFO  : Starting task [Stage-0:MOVE] in serial mode
INFO  : Loading data to table smb_mapjoin_7.smb_bucket4_2 from file:/!!ELIDED!!
INFO  : Starting task [Stage-2:STATS] in serial mode
INFO  : POSTHOOK: query: insert overwrite table smb_bucket4_2
select * from default.src
INFO  : POSTHOOK: type: QUERY
INFO  : POSTHOOK: Input: default@src
INFO  : POSTHOOK: Output: smb_mapjoin_7@smb_bucket4_2
INFO  : POSTHOOK: Lineage: smb_bucket4_2.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
INFO  : POSTHOOK: Lineage: smb_bucket4_2.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
INFO  : MapReduce Jobs Launched: 
INFO  : Stage-Stage-1:  HDFS Read: 0 HDFS Write: 0 SUCCESS
INFO  : Total MapReduce CPU Time Spent: 0 msec
INFO  : Completed executing commandqueryId=(!!{queryId}!!); Time taken: !!ELIDED!! seconds
INFO  : OK
DEBUG : Shutting down query insert overwrite table smb_bucket4_2
select * from default.src
No rows affected 
>>>  
>>>  set hive.optimize.bucketmapjoin = true;
No rows affected 
>>>  set hive.optimize.bucketmapjoin.sortedmerge = true;
No rows affected 
>>>  set hive.input.format = org.apache.hadoop.hive.ql.io.BucketizedHiveInputFormat;
No rows affected 
>>>  set hive.cbo.enable=false;
No rows affected 
>>>  insert overwrite table smb_join_results_empty_bigtable
select /*+mapjoin(b)*/ * from smb_bucket4_1 a full outer join smb_bucket4_2 b on a.key = b.key;
INFO  : Compiling commandqueryId=(!!{queryId}!!): insert overwrite table smb_join_results_empty_bigtable
select /*+mapjoin(b)*/ * from smb_bucket4_1 a full outer join smb_bucket4_2 b on a.key = b.key
INFO  : Semantic Analysis Completed
INFO  : Returning Hive schema: Schema(fieldSchemas:[FieldSchema(name:a.key, type:int, comment:null), FieldSchema(name:a.value, type:string, comment:null), FieldSchema(name:b.key, type:int, comment:null), FieldSchema(name:b.value, type:string, comment:null)], properties:null)
INFO  : Completed compiling commandqueryId=(!!{queryId}!!); Time taken: !!ELIDED!! seconds
INFO  : Executing commandqueryId=(!!{queryId}!!): insert overwrite table smb_join_results_empty_bigtable
select /*+mapjoin(b)*/ * from smb_bucket4_1 a full outer join smb_bucket4_2 b on a.key = b.key
INFO  : PREHOOK: query: insert overwrite table smb_join_results_empty_bigtable
select /*+mapjoin(b)*/ * from smb_bucket4_1 a full outer join smb_bucket4_2 b on a.key = b.key
INFO  : PREHOOK: type: QUERY
INFO  : PREHOOK: Input: smb_mapjoin_7@smb_bucket4_1
INFO  : PREHOOK: Input: smb_mapjoin_7@smb_bucket4_2
INFO  : PREHOOK: Output: smb_mapjoin_7@smb_join_results_empty_bigtable
WARN  : Hive-on-MR is deprecated in Hive 2 and may not be available in the future versions. Consider using a different execution engine (i.e. spark, tez) or using Hive 1.X releases.
INFO  : Query ID = !!{queryId}!!
INFO  : Total jobs = 3
INFO  : Launching Job 1 out of 3
INFO  : Starting task [Stage-1:MAPRED] in serial mode
INFO  : Number of reduce tasks is set to 0 since there's no reduce operator
DEBUG : Configuring job !!{jobId}}!! with file:/!!ELIDED!! as the submit dir
DEBUG : adding the following namenodes' delegation tokens:[file:///]
DEBUG : Creating splits at file:/!!ELIDED!!
INFO  : number of splits:2
INFO  : Submitting tokens for job: !!{jobId}}!!
INFO  : The url to track the job: http://localhost:8080/
INFO  : Job running in-process (local Hadoop)
INFO  : Ended Job = !!{jobId}!!
INFO  : Starting task [Stage-7:CONDITIONAL] in serial mode
INFO  : Stage-4 is filtered out by condition resolver.
INFO  : Stage-3 is selected by condition resolver.
INFO  : Stage-5 is filtered out by condition resolver.
INFO  : Launching Job 3 out of 3
INFO  : Starting task [Stage-3:MAPRED] in serial mode
INFO  : Number of reduce tasks is set to 0 since there's no reduce operator
DEBUG : Configuring job !!{jobId}}!! with file:/!!ELIDED!! as the submit dir
DEBUG : adding the following namenodes' delegation tokens:[file:///]
DEBUG : Creating splits at file:/!!ELIDED!!
INFO  : number of splits:1
INFO  : Submitting tokens for job: !!{jobId}}!!
INFO  : The url to track the job: http://localhost:8080/
INFO  : Job running in-process (local Hadoop)
INFO  : Ended Job = !!{jobId}!!
INFO  : Starting task [Stage-0:MOVE] in serial mode
INFO  : Loading data to table smb_mapjoin_7.smb_join_results_empty_bigtable from file:/!!ELIDED!!
INFO  : Starting task [Stage-2:STATS] in serial mode
INFO  : POSTHOOK: query: insert overwrite table smb_join_results_empty_bigtable
select /*+mapjoin(b)*/ * from smb_bucket4_1 a full outer join smb_bucket4_2 b on a.key = b.key
INFO  : POSTHOOK: type: QUERY
INFO  : POSTHOOK: Input: smb_mapjoin_7@smb_bucket4_1
INFO  : POSTHOOK: Input: smb_mapjoin_7@smb_bucket4_2
INFO  : POSTHOOK: Output: smb_mapjoin_7@smb_join_results_empty_bigtable
INFO  : POSTHOOK: Lineage: smb_join_results_empty_bigtable.k1 SIMPLE [(smb_bucket4_1)a.FieldSchema(name:key, type:int, comment:null), ]
INFO  : POSTHOOK: Lineage: smb_join_results_empty_bigtable.k2 SIMPLE [(smb_bucket4_2)b.FieldSchema(name:key, type:int, comment:null), ]
INFO  : POSTHOOK: Lineage: smb_join_results_empty_bigtable.v1 SIMPLE [(smb_bucket4_1)a.FieldSchema(name:value, type:string, comment:null), ]
INFO  : POSTHOOK: Lineage: smb_join_results_empty_bigtable.v2 SIMPLE [(smb_bucket4_2)b.FieldSchema(name:value, type:string, comment:null), ]
INFO  : MapReduce Jobs Launched: 
INFO  : Stage-Stage-1:  HDFS Read: 0 HDFS Write: 0 SUCCESS
INFO  : Stage-Stage-3:  HDFS Read: 0 HDFS Write: 0 SUCCESS
INFO  : Total MapReduce CPU Time Spent: 0 msec
INFO  : Completed executing commandqueryId=(!!{queryId}!!); Time taken: !!ELIDED!! seconds
INFO  : OK
DEBUG : Shutting down query insert overwrite table smb_join_results_empty_bigtable
select /*+mapjoin(b)*/ * from smb_bucket4_1 a full outer join smb_bucket4_2 b on a.key = b.key
No rows affected 
>>>  
>>>  insert overwrite table smb_join_results_empty_bigtable
select /*+mapjoin(b)*/ * from smb_bucket4_1 a full outer join smb_bucket4_2 b on a.key = b.key;
INFO  : Compiling commandqueryId=(!!{queryId}!!): insert overwrite table smb_join_results_empty_bigtable
select /*+mapjoin(b)*/ * from smb_bucket4_1 a full outer join smb_bucket4_2 b on a.key = b.key
INFO  : Semantic Analysis Completed
INFO  : Returning Hive schema: Schema(fieldSchemas:[FieldSchema(name:a.key, type:int, comment:null), FieldSchema(name:a.value, type:string, comment:null), FieldSchema(name:b.key, type:int, comment:null), FieldSchema(name:b.value, type:string, comment:null)], properties:null)
INFO  : Completed compiling commandqueryId=(!!{queryId}!!); Time taken: !!ELIDED!! seconds
INFO  : Executing commandqueryId=(!!{queryId}!!): insert overwrite table smb_join_results_empty_bigtable
select /*+mapjoin(b)*/ * from smb_bucket4_1 a full outer join smb_bucket4_2 b on a.key = b.key
INFO  : PREHOOK: query: insert overwrite table smb_join_results_empty_bigtable
select /*+mapjoin(b)*/ * from smb_bucket4_1 a full outer join smb_bucket4_2 b on a.key = b.key
INFO  : PREHOOK: type: QUERY
INFO  : PREHOOK: Input: smb_mapjoin_7@smb_bucket4_1
INFO  : PREHOOK: Input: smb_mapjoin_7@smb_bucket4_2
INFO  : PREHOOK: Output: smb_mapjoin_7@smb_join_results_empty_bigtable
WARN  : Hive-on-MR is deprecated in Hive 2 and may not be available in the future versions. Consider using a different execution engine (i.e. spark, tez) or using Hive 1.X releases.
INFO  : Query ID = !!{queryId}!!
INFO  : Total jobs = 3
INFO  : Launching Job 1 out of 3
INFO  : Starting task [Stage-1:MAPRED] in serial mode
INFO  : Number of reduce tasks is set to 0 since there's no reduce operator
DEBUG : Configuring job !!{jobId}}!! with file:/!!ELIDED!! as the submit dir
DEBUG : adding the following namenodes' delegation tokens:[file:///]
DEBUG : Creating splits at file:/!!ELIDED!!
INFO  : number of splits:2
INFO  : Submitting tokens for job: !!{jobId}}!!
INFO  : The url to track the job: http://localhost:8080/
INFO  : Job running in-process (local Hadoop)
INFO  : Ended Job = !!{jobId}!!
INFO  : Starting task [Stage-7:CONDITIONAL] in serial mode
INFO  : Stage-4 is filtered out by condition resolver.
INFO  : Stage-3 is selected by condition resolver.
INFO  : Stage-5 is filtered out by condition resolver.
INFO  : Launching Job 3 out of 3
INFO  : Starting task [Stage-3:MAPRED] in serial mode
INFO  : Number of reduce tasks is set to 0 since there's no reduce operator
DEBUG : Configuring job !!{jobId}}!! with file:/!!ELIDED!! as the submit dir
DEBUG : adding the following namenodes' delegation tokens:[file:///]
DEBUG : Creating splits at file:/!!ELIDED!!
INFO  : number of splits:1
INFO  : Submitting tokens for job: !!{jobId}}!!
INFO  : The url to track the job: http://localhost:8080/
INFO  : Job running in-process (local Hadoop)
INFO  : Ended Job = !!{jobId}!!
INFO  : Starting task [Stage-0:MOVE] in serial mode
INFO  : Loading data to table smb_mapjoin_7.smb_join_results_empty_bigtable from file:/!!ELIDED!!
INFO  : Starting task [Stage-2:STATS] in serial mode
INFO  : POSTHOOK: query: insert overwrite table smb_join_results_empty_bigtable
select /*+mapjoin(b)*/ * from smb_bucket4_1 a full outer join smb_bucket4_2 b on a.key = b.key
INFO  : POSTHOOK: type: QUERY
INFO  : POSTHOOK: Input: smb_mapjoin_7@smb_bucket4_1
INFO  : POSTHOOK: Input: smb_mapjoin_7@smb_bucket4_2
INFO  : POSTHOOK: Output: smb_mapjoin_7@smb_join_results_empty_bigtable
INFO  : POSTHOOK: Lineage: smb_join_results_empty_bigtable.k1 SIMPLE [(smb_bucket4_1)a.FieldSchema(name:key, type:int, comment:null), ]
INFO  : POSTHOOK: Lineage: smb_join_results_empty_bigtable.k2 SIMPLE [(smb_bucket4_2)b.FieldSchema(name:key, type:int, comment:null), ]
INFO  : POSTHOOK: Lineage: smb_join_results_empty_bigtable.v1 SIMPLE [(smb_bucket4_1)a.FieldSchema(name:value, type:string, comment:null), ]
INFO  : POSTHOOK: Lineage: smb_join_results_empty_bigtable.v2 SIMPLE [(smb_bucket4_2)b.FieldSchema(name:value, type:string, comment:null), ]
INFO  : MapReduce Jobs Launched: 
INFO  : Stage-Stage-1:  HDFS Read: 0 HDFS Write: 0 SUCCESS
INFO  : Stage-Stage-3:  HDFS Read: 0 HDFS Write: 0 SUCCESS
INFO  : Total MapReduce CPU Time Spent: 0 msec
INFO  : Completed executing commandqueryId=(!!{queryId}!!); Time taken: !!ELIDED!! seconds
INFO  : OK
DEBUG : Shutting down query insert overwrite table smb_join_results_empty_bigtable
select /*+mapjoin(b)*/ * from smb_bucket4_1 a full outer join smb_bucket4_2 b on a.key = b.key
No rows affected 
>>>  
>>>  select * from smb_join_results_empty_bigtable order by k1, v1, k2, v2;
INFO  : Compiling commandqueryId=(!!{queryId}!!): select * from smb_join_results_empty_bigtable order by k1, v1, k2, v2
INFO  : Semantic Analysis Completed
INFO  : Returning Hive schema: Schema(fieldSchemas:[FieldSchema(name:smb_join_results_empty_bigtable.k1, type:int, comment:null), FieldSchema(name:smb_join_results_empty_bigtable.v1, type:string, comment:null), FieldSchema(name:smb_join_results_empty_bigtable.k2, type:int, comment:null), FieldSchema(name:smb_join_results_empty_bigtable.v2, type:string, comment:null)], properties:null)
INFO  : Completed compiling commandqueryId=(!!{queryId}!!); Time taken: !!ELIDED!! seconds
INFO  : Executing commandqueryId=(!!{queryId}!!): select * from smb_join_results_empty_bigtable order by k1, v1, k2, v2
INFO  : PREHOOK: query: select * from smb_join_results_empty_bigtable order by k1, v1, k2, v2
INFO  : PREHOOK: type: QUERY
INFO  : PREHOOK: Input: smb_mapjoin_7@smb_join_results_empty_bigtable
INFO  : PREHOOK: Output: file:/!!ELIDED!!
WARN  : Hive-on-MR is deprecated in Hive 2 and may not be available in the future versions. Consider using a different execution engine (i.e. spark, tez) or using Hive 1.X releases.
INFO  : Query ID = !!{queryId}!!
INFO  : Total jobs = 1
INFO  : Launching Job 1 out of 1
INFO  : Starting task [Stage-1:MAPRED] in serial mode
INFO  : Number of reduce tasks determined at compile time: 1
INFO  : In order to change the average load for a reducer (in bytes):
INFO  :   set hive.exec.reducers.bytes.per.reducer=<number>
INFO  : In order to limit the maximum number of reducers:
INFO  :   set hive.exec.reducers.max=<number>
INFO  : In order to set a constant number of reducers:
INFO  :   set mapreduce.job.reduces=<number>
DEBUG : Configuring job !!{jobId}}!! with file:/!!ELIDED!! as the submit dir
DEBUG : adding the following namenodes' delegation tokens:[file:///]
DEBUG : Creating splits at file:/!!ELIDED!!
INFO  : number of splits:1
INFO  : Submitting tokens for job: !!{jobId}}!!
INFO  : The url to track the job: http://localhost:8080/
INFO  : Job running in-process (local Hadoop)
INFO  : Ended Job = !!{jobId}!!
INFO  : POSTHOOK: query: select * from smb_join_results_empty_bigtable order by k1, v1, k2, v2
INFO  : POSTHOOK: type: QUERY
INFO  : POSTHOOK: Input: smb_mapjoin_7@smb_join_results_empty_bigtable
INFO  : POSTHOOK: Output: file:/!!ELIDED!!
INFO  : MapReduce Jobs Launched: 
INFO  : Stage-Stage-1:  HDFS Read: 0 HDFS Write: 0 SUCCESS
INFO  : Total MapReduce CPU Time Spent: 0 msec
INFO  : Completed executing commandqueryId=(!!{queryId}!!); Time taken: !!ELIDED!! seconds
INFO  : OK
DEBUG : Shutting down query select * from smb_join_results_empty_bigtable order by k1, v1, k2, v2
'smb_join_results_empty_bigtable.k1','smb_join_results_empty_bigtable.v1','smb_join_results_empty_bigtable.k2','smb_join_results_empty_bigtable.v2'
'NULL','NULL','0','val_0'
'NULL','NULL','0','val_0'
'NULL','NULL','0','val_0'
'NULL','NULL','2','val_2'
'NULL','NULL','4','val_4'
'NULL','NULL','5','val_5'
'NULL','NULL','5','val_5'
'NULL','NULL','5','val_5'
'NULL','NULL','8','val_8'
'NULL','NULL','9','val_9'
'NULL','NULL','10','val_10'
'NULL','NULL','11','val_11'
'NULL','NULL','12','val_12'
'NULL','NULL','12','val_12'
'NULL','NULL','15','val_15'
'NULL','NULL','15','val_15'
'NULL','NULL','17','val_17'
'NULL','NULL','18','val_18'
'NULL','NULL','18','val_18'
'NULL','NULL','19','val_19'
'NULL','NULL','20','val_20'
'NULL','NULL','24','val_24'
'NULL','NULL','24','val_24'
'NULL','NULL','26','val_26'
'NULL','NULL','26','val_26'
'NULL','NULL','27','val_27'
'NULL','NULL','28','val_28'
'NULL','NULL','30','val_30'
'NULL','NULL','33','val_33'
'NULL','NULL','34','val_34'
'NULL','NULL','35','val_35'
'NULL','NULL','35','val_35'
'NULL','NULL','35','val_35'
'NULL','NULL','37','val_37'
'NULL','NULL','37','val_37'
'NULL','NULL','41','val_41'
'NULL','NULL','42','val_42'
'NULL','NULL','42','val_42'
'NULL','NULL','43','val_43'
'NULL','NULL','44','val_44'
'NULL','NULL','47','val_47'
'NULL','NULL','51','val_51'
'NULL','NULL','51','val_51'
'NULL','NULL','53','val_53'
'NULL','NULL','54','val_54'
'NULL','NULL','57','val_57'
'NULL','NULL','58','val_58'
'NULL','NULL','58','val_58'
'NULL','NULL','64','val_64'
'NULL','NULL','65','val_65'
'NULL','NULL','66','val_66'
'NULL','NULL','67','val_67'
'NULL','NULL','67','val_67'
'NULL','NULL','69','val_69'
'NULL','NULL','70','val_70'
'NULL','NULL','70','val_70'
'NULL','NULL','70','val_70'
'NULL','NULL','72','val_72'
'NULL','NULL','72','val_72'
'NULL','NULL','74','val_74'
'NULL','NULL','76','val_76'
'NULL','NULL','76','val_76'
'NULL','NULL','77','val_77'
'NULL','NULL','78','val_78'
'NULL','NULL','80','val_80'
'NULL','NULL','82','val_82'
'NULL','NULL','83','val_83'
'NULL','NULL','83','val_83'
'NULL','NULL','84','val_84'
'NULL','NULL','84','val_84'
'NULL','NULL','85','val_85'
'NULL','NULL','86','val_86'
'NULL','NULL','87','val_87'
'NULL','NULL','90','val_90'
'NULL','NULL','90','val_90'
'NULL','NULL','90','val_90'
'NULL','NULL','92','val_92'
'NULL','NULL','95','val_95'
'NULL','NULL','95','val_95'
'NULL','NULL','96','val_96'
'NULL','NULL','97','val_97'
'NULL','NULL','97','val_97'
'NULL','NULL','98','val_98'
'NULL','NULL','98','val_98'
'NULL','NULL','100','val_100'
'NULL','NULL','100','val_100'
'NULL','NULL','103','val_103'
'NULL','NULL','103','val_103'
'NULL','NULL','104','val_104'
'NULL','NULL','104','val_104'
'NULL','NULL','105','val_105'
'NULL','NULL','111','val_111'
'NULL','NULL','113','val_113'
'NULL','NULL','113','val_113'
'NULL','NULL','114','val_114'
'NULL','NULL','116','val_116'
'NULL','NULL','118','val_118'
'NULL','NULL','118','val_118'
'NULL','NULL','119','val_119'
'NULL','NULL','119','val_119'
'NULL','NULL','119','val_119'
'NULL','NULL','120','val_120'
'NULL','NULL','120','val_120'
'NULL','NULL','125','val_125'
'NULL','NULL','125','val_125'
'NULL','NULL','126','val_126'
'NULL','NULL','128','val_128'
'NULL','NULL','128','val_128'
'NULL','NULL','128','val_128'
'NULL','NULL','129','val_129'
'NULL','NULL','129','val_129'
'NULL','NULL','131','val_131'
'NULL','NULL','133','val_133'
'NULL','NULL','134','val_134'
'NULL','NULL','134','val_134'
'NULL','NULL','136','val_136'
'NULL','NULL','137','val_137'
'NULL','NULL','137','val_137'
'NULL','NULL','138','val_138'
'NULL','NULL','138','val_138'
'NULL','NULL','138','val_138'
'NULL','NULL','138','val_138'
'NULL','NULL','143','val_143'
'NULL','NULL','145','val_145'
'NULL','NULL','146','val_146'
'NULL','NULL','146','val_146'
'NULL','NULL','149','val_149'
'NULL','NULL','149','val_149'
'NULL','NULL','150','val_150'
'NULL','NULL','152','val_152'
'NULL','NULL','152','val_152'
'NULL','NULL','153','val_153'
'NULL','NULL','155','val_155'
'NULL','NULL','156','val_156'
'NULL','NULL','157','val_157'
'NULL','NULL','158','val_158'
'NULL','NULL','160','val_160'
'NULL','NULL','162','val_162'
'NULL','NULL','163','val_163'
'NULL','NULL','164','val_164'
'NULL','NULL','164','val_164'
'NULL','NULL','165','val_165'
'NULL','NULL','165','val_165'
'NULL','NULL','166','val_166'
'NULL','NULL','167','val_167'
'NULL','NULL','167','val_167'
'NULL','NULL','167','val_167'
'NULL','NULL','168','val_168'
'NULL','NULL','169','val_169'
'NULL','NULL','169','val_169'
'NULL','NULL','169','val_169'
'NULL','NULL','169','val_169'
'NULL','NULL','170','val_170'
'NULL','NULL','172','val_172'
'NULL','NULL','172','val_172'
'NULL','NULL','174','val_174'
'NULL','NULL','174','val_174'
'NULL','NULL','175','val_175'
'NULL','NULL','175','val_175'
'NULL','NULL','176','val_176'
'NULL','NULL','176','val_176'
'NULL','NULL','177','val_177'
'NULL','NULL','178','val_178'
'NULL','NULL','179','val_179'
'NULL','NULL','179','val_179'
'NULL','NULL','180','val_180'
'NULL','NULL','181','val_181'
'NULL','NULL','183','val_183'
'NULL','NULL','186','val_186'
'NULL','NULL','187','val_187'
'NULL','NULL','187','val_187'
'NULL','NULL','187','val_187'
'NULL','NULL','189','val_189'
'NULL','NULL','190','val_190'
'NULL','NULL','191','val_191'
'NULL','NULL','191','val_191'
'NULL','NULL','192','val_192'
'NULL','NULL','193','val_193'
'NULL','NULL','193','val_193'
'NULL','NULL','193','val_193'
'NULL','NULL','194','val_194'
'NULL','NULL','195','val_195'
'NULL','NULL','195','val_195'
'NULL','NULL','196','val_196'
'NULL','NULL','197','val_197'
'NULL','NULL','197','val_197'
'NULL','NULL','199','val_199'
'NULL','NULL','199','val_199'
'NULL','NULL','199','val_199'
'NULL','NULL','200','val_200'
'NULL','NULL','200','val_200'
'NULL','NULL','201','val_201'
'NULL','NULL','202','val_202'
'NULL','NULL','203','val_203'
'NULL','NULL','203','val_203'
'NULL','NULL','205','val_205'
'NULL','NULL','205','val_205'
'NULL','NULL','207','val_207'
'NULL','NULL','207','val_207'
'NULL','NULL','208','val_208'
'NULL','NULL','208','val_208'
'NULL','NULL','208','val_208'
'NULL','NULL','209','val_209'
'NULL','NULL','209','val_209'
'NULL','NULL','213','val_213'
'NULL','NULL','213','val_213'
'NULL','NULL','214','val_214'
'NULL','NULL','216','val_216'
'NULL','NULL','216','val_216'
'NULL','NULL','217','val_217'
'NULL','NULL','217','val_217'
'NULL','NULL','218','val_218'
'NULL','NULL','219','val_219'
'NULL','NULL','219','val_219'
'NULL','NULL','221','val_221'
'NULL','NULL','221','val_221'
'NULL','NULL','222','val_222'
'NULL','NULL','223','val_223'
'NULL','NULL','223','val_223'
'NULL','NULL','224','val_224'
'NULL','NULL','224','val_224'
'NULL','NULL','226','val_226'
'NULL','NULL','228','val_228'
'NULL','NULL','229','val_229'
'NULL','NULL','229','val_229'
'NULL','NULL','230','val_230'
'NULL','NULL','230','val_230'
'NULL','NULL','230','val_230'
'NULL','NULL','230','val_230'
'NULL','NULL','230','val_230'
'NULL','NULL','233','val_233'
'NULL','NULL','233','val_233'
'NULL','NULL','235','val_235'
'NULL','NULL','237','val_237'
'NULL','NULL','237','val_237'
'NULL','NULL','238','val_238'
'NULL','NULL','238','val_238'
'NULL','NULL','239','val_239'
'NULL','NULL','239','val_239'
'NULL','NULL','241','val_241'
'NULL','NULL','242','val_242'
'NULL','NULL','242','val_242'
'NULL','NULL','244','val_244'
'NULL','NULL','247','val_247'
'NULL','NULL','248','val_248'
'NULL','NULL','249','val_249'
'NULL','NULL','252','val_252'
'NULL','NULL','255','val_255'
'NULL','NULL','255','val_255'
'NULL','NULL','256','val_256'
'NULL','NULL','256','val_256'
'NULL','NULL','257','val_257'
'NULL','NULL','258','val_258'
'NULL','NULL','260','val_260'
'NULL','NULL','262','val_262'
'NULL','NULL','263','val_263'
'NULL','NULL','265','val_265'
'NULL','NULL','265','val_265'
'NULL','NULL','266','val_266'
'NULL','NULL','272','val_272'
'NULL','NULL','272','val_272'
'NULL','NULL','273','val_273'
'NULL','NULL','273','val_273'
'NULL','NULL','273','val_273'
'NULL','NULL','274','val_274'
'NULL','NULL','275','val_275'
'NULL','NULL','277','val_277'
'NULL','NULL','277','val_277'
'NULL','NULL','277','val_277'
'NULL','NULL','277','val_277'
'NULL','NULL','278','val_278'
'NULL','NULL','278','val_278'
'NULL','NULL','280','val_280'
'NULL','NULL','280','val_280'
'NULL','NULL','281','val_281'
'NULL','NULL','281','val_281'
'NULL','NULL','282','val_282'
'NULL','NULL','282','val_282'
'NULL','NULL','283','val_283'
'NULL','NULL','284','val_284'
'NULL','NULL','285','val_285'
'NULL','NULL','286','val_286'
'NULL','NULL','287','val_287'
'NULL','NULL','288','val_288'
'NULL','NULL','288','val_288'
'NULL','NULL','289','val_289'
'NULL','NULL','291','val_291'
'NULL','NULL','292','val_292'
'NULL','NULL','296','val_296'
'NULL','NULL','298','val_298'
'NULL','NULL','298','val_298'
'NULL','NULL','298','val_298'
'NULL','NULL','302','val_302'
'NULL','NULL','305','val_305'
'NULL','NULL','306','val_306'
'NULL','NULL','307','val_307'
'NULL','NULL','307','val_307'
'NULL','NULL','308','val_308'
'NULL','NULL','309','val_309'
'NULL','NULL','309','val_309'
'NULL','NULL','310','val_310'
'NULL','NULL','311','val_311'
'NULL','NULL','311','val_311'
'NULL','NULL','311','val_311'
'NULL','NULL','315','val_315'
'NULL','NULL','316','val_316'
'NULL','NULL','316','val_316'
'NULL','NULL','316','val_316'
'NULL','NULL','317','val_317'
'NULL','NULL','317','val_317'
'NULL','NULL','318','val_318'
'NULL','NULL','318','val_318'
'NULL','NULL','318','val_318'
'NULL','NULL','321','val_321'
'NULL','NULL','321','val_321'
'NULL','NULL','322','val_322'
'NULL','NULL','322','val_322'
'NULL','NULL','323','val_323'
'NULL','NULL','325','val_325'
'NULL','NULL','325','val_325'
'NULL','NULL','327','val_327'
'NULL','NULL','327','val_327'
'NULL','NULL','327','val_327'
'NULL','NULL','331','val_331'
'NULL','NULL','331','val_331'
'NULL','NULL','332','val_332'
'NULL','NULL','333','val_333'
'NULL','NULL','333','val_333'
'NULL','NULL','335','val_335'
'NULL','NULL','336','val_336'
'NULL','NULL','338','val_338'
'NULL','NULL','339','val_339'
'NULL','NULL','341','val_341'
'NULL','NULL','342','val_342'
'NULL','NULL','342','val_342'
'NULL','NULL','344','val_344'
'NULL','NULL','344','val_344'
'NULL','NULL','345','val_345'
'NULL','NULL','348','val_348'
'NULL','NULL','348','val_348'
'NULL','NULL','348','val_348'
'NULL','NULL','348','val_348'
'NULL','NULL','348','val_348'
'NULL','NULL','351','val_351'
'NULL','NULL','353','val_353'
'NULL','NULL','353','val_353'
'NULL','NULL','356','val_356'
'NULL','NULL','360','val_360'
'NULL','NULL','362','val_362'
'NULL','NULL','364','val_364'
'NULL','NULL','365','val_365'
'NULL','NULL','366','val_366'
'NULL','NULL','367','val_367'
'NULL','NULL','367','val_367'
'NULL','NULL','368','val_368'
'NULL','NULL','369','val_369'
'NULL','NULL','369','val_369'
'NULL','NULL','369','val_369'
'NULL','NULL','373','val_373'
'NULL','NULL','374','val_374'
'NULL','NULL','375','val_375'
'NULL','NULL','377','val_377'
'NULL','NULL','378','val_378'
'NULL','NULL','379','val_379'
'NULL','NULL','382','val_382'
'NULL','NULL','382','val_382'
'NULL','NULL','384','val_384'
'NULL','NULL','384','val_384'
'NULL','NULL','384','val_384'
'NULL','NULL','386','val_386'
'NULL','NULL','389','val_389'
'NULL','NULL','392','val_392'
'NULL','NULL','393','val_393'
'NULL','NULL','394','val_394'
'NULL','NULL','395','val_395'
'NULL','NULL','395','val_395'
'NULL','NULL','396','val_396'
'NULL','NULL','396','val_396'
'NULL','NULL','396','val_396'
'NULL','NULL','397','val_397'
'NULL','NULL','397','val_397'
'NULL','NULL','399','val_399'
'NULL','NULL','399','val_399'
'NULL','NULL','400','val_400'
'NULL','NULL','401','val_401'
'NULL','NULL','401','val_401'
'NULL','NULL','401','val_401'
'NULL','NULL','401','val_401'
'NULL','NULL','401','val_401'
'NULL','NULL','402','val_402'
'NULL','NULL','403','val_403'
'NULL','NULL','403','val_403'
'NULL','NULL','403','val_403'
'NULL','NULL','404','val_404'
'NULL','NULL','404','val_404'
'NULL','NULL','406','val_406'
'NULL','NULL','406','val_406'
'NULL','NULL','406','val_406'
'NULL','NULL','406','val_406'
'NULL','NULL','407','val_407'
'NULL','NULL','409','val_409'
'NULL','NULL','409','val_409'
'NULL','NULL','409','val_409'
'NULL','NULL','411','val_411'
'NULL','NULL','413','val_413'
'NULL','NULL','413','val_413'
'NULL','NULL','414','val_414'
'NULL','NULL','414','val_414'
'NULL','NULL','417','val_417'
'NULL','NULL','417','val_417'
'NULL','NULL','417','val_417'
'NULL','NULL','418','val_418'
'NULL','NULL','419','val_419'
'NULL','NULL','421','val_421'
'NULL','NULL','424','val_424'
'NULL','NULL','424','val_424'
'NULL','NULL','427','val_427'
'NULL','NULL','429','val_429'
'NULL','NULL','429','val_429'
'NULL','NULL','430','val_430'
'NULL','NULL','430','val_430'
'NULL','NULL','430','val_430'
'NULL','NULL','431','val_431'
'NULL','NULL','431','val_431'
'NULL','NULL','431','val_431'
'NULL','NULL','432','val_432'
'NULL','NULL','435','val_435'
'NULL','NULL','436','val_436'
'NULL','NULL','437','val_437'
'NULL','NULL','438','val_438'
'NULL','NULL','438','val_438'
'NULL','NULL','438','val_438'
'NULL','NULL','439','val_439'
'NULL','NULL','439','val_439'
'NULL','NULL','443','val_443'
'NULL','NULL','444','val_444'
'NULL','NULL','446','val_446'
'NULL','NULL','448','val_448'
'NULL','NULL','449','val_449'
'NULL','NULL','452','val_452'
'NULL','NULL','453','val_453'
'NULL','NULL','454','val_454'
'NULL','NULL','454','val_454'
'NULL','NULL','454','val_454'
'NULL','NULL','455','val_455'
'NULL','NULL','457','val_457'
'NULL','NULL','458','val_458'
'NULL','NULL','458','val_458'
'NULL','NULL','459','val_459'
'NULL','NULL','459','val_459'
'NULL','NULL','460','val_460'
'NULL','NULL','462','val_462'
'NULL','NULL','462','val_462'
'NULL','NULL','463','val_463'
'NULL','NULL','463','val_463'
'NULL','NULL','466','val_466'
'NULL','NULL','466','val_466'
'NULL','NULL','466','val_466'
'NULL','NULL','467','val_467'
'NULL','NULL','468','val_468'
'NULL','NULL','468','val_468'
'NULL','NULL','468','val_468'
'NULL','NULL','468','val_468'
'NULL','NULL','469','val_469'
'NULL','NULL','469','val_469'
'NULL','NULL','469','val_469'
'NULL','NULL','469','val_469'
'NULL','NULL','469','val_469'
'NULL','NULL','470','val_470'
'NULL','NULL','472','val_472'
'NULL','NULL','475','val_475'
'NULL','NULL','477','val_477'
'NULL','NULL','478','val_478'
'NULL','NULL','478','val_478'
'NULL','NULL','479','val_479'
'NULL','NULL','480','val_480'
'NULL','NULL','480','val_480'
'NULL','NULL','480','val_480'
'NULL','NULL','481','val_481'
'NULL','NULL','482','val_482'
'NULL','NULL','483','val_483'
'NULL','NULL','484','val_484'
'NULL','NULL','485','val_485'
'NULL','NULL','487','val_487'
'NULL','NULL','489','val_489'
'NULL','NULL','489','val_489'
'NULL','NULL','489','val_489'
'NULL','NULL','489','val_489'
'NULL','NULL','490','val_490'
'NULL','NULL','491','val_491'
'NULL','NULL','492','val_492'
'NULL','NULL','492','val_492'
'NULL','NULL','493','val_493'
'NULL','NULL','494','val_494'
'NULL','NULL','495','val_495'
'NULL','NULL','496','val_496'
'NULL','NULL','497','val_497'
'NULL','NULL','498','val_498'
'NULL','NULL','498','val_498'
'NULL','NULL','498','val_498'
500 rows selected 
>>>  
>>>  explain
insert overwrite table smb_join_results
select /*+mapjoin(a)*/ * from smb_bucket4_1 a full outer join smb_bucket4_2 b on a.key = b.key;
INFO  : Compiling commandqueryId=(!!{queryId}!!): explain
insert overwrite table smb_join_results
select /*+mapjoin(a)*/ * from smb_bucket4_1 a full outer join smb_bucket4_2 b on a.key = b.key
INFO  : Semantic Analysis Completed
INFO  : Returning Hive schema: Schema(fieldSchemas:[FieldSchema(name:Explain, type:string, comment:null)], properties:null)
INFO  : Completed compiling commandqueryId=(!!{queryId}!!); Time taken: !!ELIDED!! seconds
INFO  : Executing commandqueryId=(!!{queryId}!!): explain
insert overwrite table smb_join_results
select /*+mapjoin(a)*/ * from smb_bucket4_1 a full outer join smb_bucket4_2 b on a.key = b.key
INFO  : PREHOOK: query: explain
insert overwrite table smb_join_results
select /*+mapjoin(a)*/ * from smb_bucket4_1 a full outer join smb_bucket4_2 b on a.key = b.key
INFO  : PREHOOK: type: QUERY
INFO  : Starting task [Stage-9:EXPLAIN] in serial mode
INFO  : POSTHOOK: query: explain
insert overwrite table smb_join_results
select /*+mapjoin(a)*/ * from smb_bucket4_1 a full outer join smb_bucket4_2 b on a.key = b.key
INFO  : POSTHOOK: type: QUERY
INFO  : Completed executing commandqueryId=(!!{queryId}!!); Time taken: !!ELIDED!! seconds
INFO  : OK
DEBUG : Shutting down query explain
insert overwrite table smb_join_results
select /*+mapjoin(a)*/ * from smb_bucket4_1 a full outer join smb_bucket4_2 b on a.key = b.key
'Explain'
'STAGE DEPENDENCIES:'
'  Stage-1 is a root stage'
'  Stage-8 depends on stages: Stage-1 , consists of Stage-5, Stage-4, Stage-6'
'  Stage-5'
'  Stage-0 depends on stages: Stage-5, Stage-4, Stage-7'
'  Stage-3 depends on stages: Stage-0'
'  Stage-4'
'  Stage-6'
'  Stage-7 depends on stages: Stage-6'
''
'STAGE PLANS:'
'  Stage: Stage-1'
'    Map Reduce'
'      Map Operator Tree:'
'          TableScan'
'            alias: b'
'            Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE'
'            Sorted Merge Bucket Map Join Operator'
'              condition map:'
'                   Outer Join 0 to 1'
'              keys:'
'                0 key (type: int)'
'                1 key (type: int)'
'              outputColumnNames: _col0, _col1, _col5, _col6'
'              Select Operator'
'                expressions: _col0 (type: int), _col1 (type: string), _col5 (type: int), _col6 (type: string)'
'                outputColumnNames: _col0, _col1, _col2, _col3'
'                File Output Operator'
'                  compressed: false'
'                  table:'
'                      input format: org.apache.hadoop.mapred.TextInputFormat'
'                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
'                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
'                      name: smb_mapjoin_7.smb_join_results'
''
'  Stage: Stage-8'
'    Conditional Operator'
''
'  Stage: Stage-5'
'    Move Operator'
'      files:'
'          hdfs directory: true'
'          destination: file:/!!ELIDED!!
''
'  Stage: Stage-0'
'    Move Operator'
'      tables:'
'          replace: true'
'          table:'
'              input format: org.apache.hadoop.mapred.TextInputFormat'
'              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
'              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
'              name: smb_mapjoin_7.smb_join_results'
''
'  Stage: Stage-3'
'    Stats-Aggr Operator'
''
'  Stage: Stage-4'
'    Map Reduce'
'      Map Operator Tree:'
'          TableScan'
'            File Output Operator'
'              compressed: false'
'              table:'
'                  input format: org.apache.hadoop.mapred.TextInputFormat'
'                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
'                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
'                  name: smb_mapjoin_7.smb_join_results'
''
'  Stage: Stage-6'
'    Map Reduce'
'      Map Operator Tree:'
'          TableScan'
'            File Output Operator'
'              compressed: false'
'              table:'
'                  input format: org.apache.hadoop.mapred.TextInputFormat'
'                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
'                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
'                  name: smb_mapjoin_7.smb_join_results'
''
'  Stage: Stage-7'
'    Move Operator'
'      files:'
'          hdfs directory: true'
'          destination: file:/!!ELIDED!!
''
87 rows selected 
>>>  
>>>  insert overwrite table smb_join_results
select /*+mapjoin(a)*/ * from smb_bucket4_1 a full outer join smb_bucket4_2 b on a.key = b.key;
INFO  : Compiling commandqueryId=(!!{queryId}!!): insert overwrite table smb_join_results
select /*+mapjoin(a)*/ * from smb_bucket4_1 a full outer join smb_bucket4_2 b on a.key = b.key
INFO  : Semantic Analysis Completed
INFO  : Returning Hive schema: Schema(fieldSchemas:[FieldSchema(name:a.key, type:int, comment:null), FieldSchema(name:a.value, type:string, comment:null), FieldSchema(name:b.key, type:int, comment:null), FieldSchema(name:b.value, type:string, comment:null)], properties:null)
INFO  : Completed compiling commandqueryId=(!!{queryId}!!); Time taken: !!ELIDED!! seconds
INFO  : Executing commandqueryId=(!!{queryId}!!): insert overwrite table smb_join_results
select /*+mapjoin(a)*/ * from smb_bucket4_1 a full outer join smb_bucket4_2 b on a.key = b.key
INFO  : PREHOOK: query: insert overwrite table smb_join_results
select /*+mapjoin(a)*/ * from smb_bucket4_1 a full outer join smb_bucket4_2 b on a.key = b.key
INFO  : PREHOOK: type: QUERY
INFO  : PREHOOK: Input: smb_mapjoin_7@smb_bucket4_1
INFO  : PREHOOK: Input: smb_mapjoin_7@smb_bucket4_2
INFO  : PREHOOK: Output: smb_mapjoin_7@smb_join_results
WARN  : Hive-on-MR is deprecated in Hive 2 and may not be available in the future versions. Consider using a different execution engine (i.e. spark, tez) or using Hive 1.X releases.
INFO  : Query ID = !!{queryId}!!
INFO  : Total jobs = 3
INFO  : Launching Job 1 out of 3
INFO  : Starting task [Stage-1:MAPRED] in serial mode
INFO  : Number of reduce tasks is set to 0 since there's no reduce operator
DEBUG : Configuring job !!{jobId}}!! with file:/!!ELIDED!! as the submit dir
DEBUG : adding the following namenodes' delegation tokens:[file:///]
DEBUG : Creating splits at file:/!!ELIDED!!
INFO  : number of splits:2
INFO  : Submitting tokens for job: !!{jobId}}!!
INFO  : The url to track the job: http://localhost:8080/
INFO  : Job running in-process (local Hadoop)
INFO  : Ended Job = !!{jobId}!!
INFO  : Starting task [Stage-8:CONDITIONAL] in serial mode
INFO  : Stage-5 is filtered out by condition resolver.
INFO  : Stage-4 is selected by condition resolver.
INFO  : Stage-6 is filtered out by condition resolver.
INFO  : Launching Job 3 out of 3
INFO  : Starting task [Stage-4:MAPRED] in serial mode
INFO  : Number of reduce tasks is set to 0 since there's no reduce operator
DEBUG : Configuring job !!{jobId}}!! with file:/!!ELIDED!! as the submit dir
DEBUG : adding the following namenodes' delegation tokens:[file:///]
DEBUG : Creating splits at file:/!!ELIDED!!
INFO  : number of splits:1
INFO  : Submitting tokens for job: !!{jobId}}!!
INFO  : The url to track the job: http://localhost:8080/
INFO  : Job running in-process (local Hadoop)
INFO  : Ended Job = !!{jobId}!!
INFO  : Starting task [Stage-0:MOVE] in serial mode
INFO  : Loading data to table smb_mapjoin_7.smb_join_results from file:/!!ELIDED!!
INFO  : Starting task [Stage-3:STATS] in serial mode
INFO  : POSTHOOK: query: insert overwrite table smb_join_results
select /*+mapjoin(a)*/ * from smb_bucket4_1 a full outer join smb_bucket4_2 b on a.key = b.key
INFO  : POSTHOOK: type: QUERY
INFO  : POSTHOOK: Input: smb_mapjoin_7@smb_bucket4_1
INFO  : POSTHOOK: Input: smb_mapjoin_7@smb_bucket4_2
INFO  : POSTHOOK: Output: smb_mapjoin_7@smb_join_results
INFO  : POSTHOOK: Lineage: smb_join_results.k1 SIMPLE [(smb_bucket4_1)a.FieldSchema(name:key, type:int, comment:null), ]
INFO  : POSTHOOK: Lineage: smb_join_results.k2 SIMPLE [(smb_bucket4_2)b.FieldSchema(name:key, type:int, comment:null), ]
INFO  : POSTHOOK: Lineage: smb_join_results.v1 SIMPLE [(smb_bucket4_1)a.FieldSchema(name:value, type:string, comment:null), ]
INFO  : POSTHOOK: Lineage: smb_join_results.v2 SIMPLE [(smb_bucket4_2)b.FieldSchema(name:value, type:string, comment:null), ]
INFO  : MapReduce Jobs Launched: 
INFO  : Stage-Stage-1:  HDFS Read: 0 HDFS Write: 0 SUCCESS
INFO  : Stage-Stage-4:  HDFS Read: 0 HDFS Write: 0 SUCCESS
INFO  : Total MapReduce CPU Time Spent: 0 msec
INFO  : Completed executing commandqueryId=(!!{queryId}!!); Time taken: !!ELIDED!! seconds
INFO  : OK
DEBUG : Shutting down query insert overwrite table smb_join_results
select /*+mapjoin(a)*/ * from smb_bucket4_1 a full outer join smb_bucket4_2 b on a.key = b.key
No rows affected 
>>>  
>>>  select * from smb_join_results order by k1, v1, k2, v2;
INFO  : Compiling commandqueryId=(!!{queryId}!!): select * from smb_join_results order by k1, v1, k2, v2
INFO  : Semantic Analysis Completed
INFO  : Returning Hive schema: Schema(fieldSchemas:[FieldSchema(name:smb_join_results.k1, type:int, comment:null), FieldSchema(name:smb_join_results.v1, type:string, comment:null), FieldSchema(name:smb_join_results.k2, type:int, comment:null), FieldSchema(name:smb_join_results.v2, type:string, comment:null)], properties:null)
INFO  : Completed compiling commandqueryId=(!!{queryId}!!); Time taken: !!ELIDED!! seconds
INFO  : Executing commandqueryId=(!!{queryId}!!): select * from smb_join_results order by k1, v1, k2, v2
INFO  : PREHOOK: query: select * from smb_join_results order by k1, v1, k2, v2
INFO  : PREHOOK: type: QUERY
INFO  : PREHOOK: Input: smb_mapjoin_7@smb_join_results
INFO  : PREHOOK: Output: file:/!!ELIDED!!
WARN  : Hive-on-MR is deprecated in Hive 2 and may not be available in the future versions. Consider using a different execution engine (i.e. spark, tez) or using Hive 1.X releases.
INFO  : Query ID = !!{queryId}!!
INFO  : Total jobs = 1
INFO  : Launching Job 1 out of 1
INFO  : Starting task [Stage-1:MAPRED] in serial mode
INFO  : Number of reduce tasks determined at compile time: 1
INFO  : In order to change the average load for a reducer (in bytes):
INFO  :   set hive.exec.reducers.bytes.per.reducer=<number>
INFO  : In order to limit the maximum number of reducers:
INFO  :   set hive.exec.reducers.max=<number>
INFO  : In order to set a constant number of reducers:
INFO  :   set mapreduce.job.reduces=<number>
DEBUG : Configuring job !!{jobId}}!! with file:/!!ELIDED!! as the submit dir
DEBUG : adding the following namenodes' delegation tokens:[file:///]
DEBUG : Creating splits at file:/!!ELIDED!!
INFO  : number of splits:1
INFO  : Submitting tokens for job: !!{jobId}}!!
INFO  : The url to track the job: http://localhost:8080/
INFO  : Job running in-process (local Hadoop)
INFO  : Ended Job = !!{jobId}!!
INFO  : POSTHOOK: query: select * from smb_join_results order by k1, v1, k2, v2
INFO  : POSTHOOK: type: QUERY
INFO  : POSTHOOK: Input: smb_mapjoin_7@smb_join_results
INFO  : POSTHOOK: Output: file:/!!ELIDED!!
INFO  : MapReduce Jobs Launched: 
INFO  : Stage-Stage-1:  HDFS Read: 0 HDFS Write: 0 SUCCESS
INFO  : Total MapReduce CPU Time Spent: 0 msec
INFO  : Completed executing commandqueryId=(!!{queryId}!!); Time taken: !!ELIDED!! seconds
INFO  : OK
DEBUG : Shutting down query select * from smb_join_results order by k1, v1, k2, v2
'smb_join_results.k1','smb_join_results.v1','smb_join_results.k2','smb_join_results.v2'
'NULL','NULL','0','val_0'
'NULL','NULL','0','val_0'
'NULL','NULL','0','val_0'
'NULL','NULL','2','val_2'
'NULL','NULL','4','val_4'
'NULL','NULL','5','val_5'
'NULL','NULL','5','val_5'
'NULL','NULL','5','val_5'
'NULL','NULL','8','val_8'
'NULL','NULL','9','val_9'
'NULL','NULL','10','val_10'
'NULL','NULL','11','val_11'
'NULL','NULL','12','val_12'
'NULL','NULL','12','val_12'
'NULL','NULL','15','val_15'
'NULL','NULL','15','val_15'
'NULL','NULL','17','val_17'
'NULL','NULL','18','val_18'
'NULL','NULL','18','val_18'
'NULL','NULL','19','val_19'
'NULL','NULL','20','val_20'
'NULL','NULL','24','val_24'
'NULL','NULL','24','val_24'
'NULL','NULL','26','val_26'
'NULL','NULL','26','val_26'
'NULL','NULL','27','val_27'
'NULL','NULL','28','val_28'
'NULL','NULL','30','val_30'
'NULL','NULL','33','val_33'
'NULL','NULL','34','val_34'
'NULL','NULL','35','val_35'
'NULL','NULL','35','val_35'
'NULL','NULL','35','val_35'
'NULL','NULL','37','val_37'
'NULL','NULL','37','val_37'
'NULL','NULL','41','val_41'
'NULL','NULL','42','val_42'
'NULL','NULL','42','val_42'
'NULL','NULL','43','val_43'
'NULL','NULL','44','val_44'
'NULL','NULL','47','val_47'
'NULL','NULL','51','val_51'
'NULL','NULL','51','val_51'
'NULL','NULL','53','val_53'
'NULL','NULL','54','val_54'
'NULL','NULL','57','val_57'
'NULL','NULL','58','val_58'
'NULL','NULL','58','val_58'
'NULL','NULL','64','val_64'
'NULL','NULL','65','val_65'
'NULL','NULL','66','val_66'
'NULL','NULL','67','val_67'
'NULL','NULL','67','val_67'
'NULL','NULL','69','val_69'
'NULL','NULL','70','val_70'
'NULL','NULL','70','val_70'
'NULL','NULL','70','val_70'
'NULL','NULL','72','val_72'
'NULL','NULL','72','val_72'
'NULL','NULL','74','val_74'
'NULL','NULL','76','val_76'
'NULL','NULL','76','val_76'
'NULL','NULL','77','val_77'
'NULL','NULL','78','val_78'
'NULL','NULL','80','val_80'
'NULL','NULL','82','val_82'
'NULL','NULL','83','val_83'
'NULL','NULL','83','val_83'
'NULL','NULL','84','val_84'
'NULL','NULL','84','val_84'
'NULL','NULL','85','val_85'
'NULL','NULL','86','val_86'
'NULL','NULL','87','val_87'
'NULL','NULL','90','val_90'
'NULL','NULL','90','val_90'
'NULL','NULL','90','val_90'
'NULL','NULL','92','val_92'
'NULL','NULL','95','val_95'
'NULL','NULL','95','val_95'
'NULL','NULL','96','val_96'
'NULL','NULL','97','val_97'
'NULL','NULL','97','val_97'
'NULL','NULL','98','val_98'
'NULL','NULL','98','val_98'
'NULL','NULL','100','val_100'
'NULL','NULL','100','val_100'
'NULL','NULL','103','val_103'
'NULL','NULL','103','val_103'
'NULL','NULL','104','val_104'
'NULL','NULL','104','val_104'
'NULL','NULL','105','val_105'
'NULL','NULL','111','val_111'
'NULL','NULL','113','val_113'
'NULL','NULL','113','val_113'
'NULL','NULL','114','val_114'
'NULL','NULL','116','val_116'
'NULL','NULL','118','val_118'
'NULL','NULL','118','val_118'
'NULL','NULL','119','val_119'
'NULL','NULL','119','val_119'
'NULL','NULL','119','val_119'
'NULL','NULL','120','val_120'
'NULL','NULL','120','val_120'
'NULL','NULL','125','val_125'
'NULL','NULL','125','val_125'
'NULL','NULL','126','val_126'
'NULL','NULL','128','val_128'
'NULL','NULL','128','val_128'
'NULL','NULL','128','val_128'
'NULL','NULL','129','val_129'
'NULL','NULL','129','val_129'
'NULL','NULL','131','val_131'
'NULL','NULL','133','val_133'
'NULL','NULL','134','val_134'
'NULL','NULL','134','val_134'
'NULL','NULL','136','val_136'
'NULL','NULL','137','val_137'
'NULL','NULL','137','val_137'
'NULL','NULL','138','val_138'
'NULL','NULL','138','val_138'
'NULL','NULL','138','val_138'
'NULL','NULL','138','val_138'
'NULL','NULL','143','val_143'
'NULL','NULL','145','val_145'
'NULL','NULL','146','val_146'
'NULL','NULL','146','val_146'
'NULL','NULL','149','val_149'
'NULL','NULL','149','val_149'
'NULL','NULL','150','val_150'
'NULL','NULL','152','val_152'
'NULL','NULL','152','val_152'
'NULL','NULL','153','val_153'
'NULL','NULL','155','val_155'
'NULL','NULL','156','val_156'
'NULL','NULL','157','val_157'
'NULL','NULL','158','val_158'
'NULL','NULL','160','val_160'
'NULL','NULL','162','val_162'
'NULL','NULL','163','val_163'
'NULL','NULL','164','val_164'
'NULL','NULL','164','val_164'
'NULL','NULL','165','val_165'
'NULL','NULL','165','val_165'
'NULL','NULL','166','val_166'
'NULL','NULL','167','val_167'
'NULL','NULL','167','val_167'
'NULL','NULL','167','val_167'
'NULL','NULL','168','val_168'
'NULL','NULL','169','val_169'
'NULL','NULL','169','val_169'
'NULL','NULL','169','val_169'
'NULL','NULL','169','val_169'
'NULL','NULL','170','val_170'
'NULL','NULL','172','val_172'
'NULL','NULL','172','val_172'
'NULL','NULL','174','val_174'
'NULL','NULL','174','val_174'
'NULL','NULL','175','val_175'
'NULL','NULL','175','val_175'
'NULL','NULL','176','val_176'
'NULL','NULL','176','val_176'
'NULL','NULL','177','val_177'
'NULL','NULL','178','val_178'
'NULL','NULL','179','val_179'
'NULL','NULL','179','val_179'
'NULL','NULL','180','val_180'
'NULL','NULL','181','val_181'
'NULL','NULL','183','val_183'
'NULL','NULL','186','val_186'
'NULL','NULL','187','val_187'
'NULL','NULL','187','val_187'
'NULL','NULL','187','val_187'
'NULL','NULL','189','val_189'
'NULL','NULL','190','val_190'
'NULL','NULL','191','val_191'
'NULL','NULL','191','val_191'
'NULL','NULL','192','val_192'
'NULL','NULL','193','val_193'
'NULL','NULL','193','val_193'
'NULL','NULL','193','val_193'
'NULL','NULL','194','val_194'
'NULL','NULL','195','val_195'
'NULL','NULL','195','val_195'
'NULL','NULL','196','val_196'
'NULL','NULL','197','val_197'
'NULL','NULL','197','val_197'
'NULL','NULL','199','val_199'
'NULL','NULL','199','val_199'
'NULL','NULL','199','val_199'
'NULL','NULL','200','val_200'
'NULL','NULL','200','val_200'
'NULL','NULL','201','val_201'
'NULL','NULL','202','val_202'
'NULL','NULL','203','val_203'
'NULL','NULL','203','val_203'
'NULL','NULL','205','val_205'
'NULL','NULL','205','val_205'
'NULL','NULL','207','val_207'
'NULL','NULL','207','val_207'
'NULL','NULL','208','val_208'
'NULL','NULL','208','val_208'
'NULL','NULL','208','val_208'
'NULL','NULL','209','val_209'
'NULL','NULL','209','val_209'
'NULL','NULL','213','val_213'
'NULL','NULL','213','val_213'
'NULL','NULL','214','val_214'
'NULL','NULL','216','val_216'
'NULL','NULL','216','val_216'
'NULL','NULL','217','val_217'
'NULL','NULL','217','val_217'
'NULL','NULL','218','val_218'
'NULL','NULL','219','val_219'
'NULL','NULL','219','val_219'
'NULL','NULL','221','val_221'
'NULL','NULL','221','val_221'
'NULL','NULL','222','val_222'
'NULL','NULL','223','val_223'
'NULL','NULL','223','val_223'
'NULL','NULL','224','val_224'
'NULL','NULL','224','val_224'
'NULL','NULL','226','val_226'
'NULL','NULL','228','val_228'
'NULL','NULL','229','val_229'
'NULL','NULL','229','val_229'
'NULL','NULL','230','val_230'
'NULL','NULL','230','val_230'
'NULL','NULL','230','val_230'
'NULL','NULL','230','val_230'
'NULL','NULL','230','val_230'
'NULL','NULL','233','val_233'
'NULL','NULL','233','val_233'
'NULL','NULL','235','val_235'
'NULL','NULL','237','val_237'
'NULL','NULL','237','val_237'
'NULL','NULL','238','val_238'
'NULL','NULL','238','val_238'
'NULL','NULL','239','val_239'
'NULL','NULL','239','val_239'
'NULL','NULL','241','val_241'
'NULL','NULL','242','val_242'
'NULL','NULL','242','val_242'
'NULL','NULL','244','val_244'
'NULL','NULL','247','val_247'
'NULL','NULL','248','val_248'
'NULL','NULL','249','val_249'
'NULL','NULL','252','val_252'
'NULL','NULL','255','val_255'
'NULL','NULL','255','val_255'
'NULL','NULL','256','val_256'
'NULL','NULL','256','val_256'
'NULL','NULL','257','val_257'
'NULL','NULL','258','val_258'
'NULL','NULL','260','val_260'
'NULL','NULL','262','val_262'
'NULL','NULL','263','val_263'
'NULL','NULL','265','val_265'
'NULL','NULL','265','val_265'
'NULL','NULL','266','val_266'
'NULL','NULL','272','val_272'
'NULL','NULL','272','val_272'
'NULL','NULL','273','val_273'
'NULL','NULL','273','val_273'
'NULL','NULL','273','val_273'
'NULL','NULL','274','val_274'
'NULL','NULL','275','val_275'
'NULL','NULL','277','val_277'
'NULL','NULL','277','val_277'
'NULL','NULL','277','val_277'
'NULL','NULL','277','val_277'
'NULL','NULL','278','val_278'
'NULL','NULL','278','val_278'
'NULL','NULL','280','val_280'
'NULL','NULL','280','val_280'
'NULL','NULL','281','val_281'
'NULL','NULL','281','val_281'
'NULL','NULL','282','val_282'
'NULL','NULL','282','val_282'
'NULL','NULL','283','val_283'
'NULL','NULL','284','val_284'
'NULL','NULL','285','val_285'
'NULL','NULL','286','val_286'
'NULL','NULL','287','val_287'
'NULL','NULL','288','val_288'
'NULL','NULL','288','val_288'
'NULL','NULL','289','val_289'
'NULL','NULL','291','val_291'
'NULL','NULL','292','val_292'
'NULL','NULL','296','val_296'
'NULL','NULL','298','val_298'
'NULL','NULL','298','val_298'
'NULL','NULL','298','val_298'
'NULL','NULL','302','val_302'
'NULL','NULL','305','val_305'
'NULL','NULL','306','val_306'
'NULL','NULL','307','val_307'
'NULL','NULL','307','val_307'
'NULL','NULL','308','val_308'
'NULL','NULL','309','val_309'
'NULL','NULL','309','val_309'
'NULL','NULL','310','val_310'
'NULL','NULL','311','val_311'
'NULL','NULL','311','val_311'
'NULL','NULL','311','val_311'
'NULL','NULL','315','val_315'
'NULL','NULL','316','val_316'
'NULL','NULL','316','val_316'
'NULL','NULL','316','val_316'
'NULL','NULL','317','val_317'
'NULL','NULL','317','val_317'
'NULL','NULL','318','val_318'
'NULL','NULL','318','val_318'
'NULL','NULL','318','val_318'
'NULL','NULL','321','val_321'
'NULL','NULL','321','val_321'
'NULL','NULL','322','val_322'
'NULL','NULL','322','val_322'
'NULL','NULL','323','val_323'
'NULL','NULL','325','val_325'
'NULL','NULL','325','val_325'
'NULL','NULL','327','val_327'
'NULL','NULL','327','val_327'
'NULL','NULL','327','val_327'
'NULL','NULL','331','val_331'
'NULL','NULL','331','val_331'
'NULL','NULL','332','val_332'
'NULL','NULL','333','val_333'
'NULL','NULL','333','val_333'
'NULL','NULL','335','val_335'
'NULL','NULL','336','val_336'
'NULL','NULL','338','val_338'
'NULL','NULL','339','val_339'
'NULL','NULL','341','val_341'
'NULL','NULL','342','val_342'
'NULL','NULL','342','val_342'
'NULL','NULL','344','val_344'
'NULL','NULL','344','val_344'
'NULL','NULL','345','val_345'
'NULL','NULL','348','val_348'
'NULL','NULL','348','val_348'
'NULL','NULL','348','val_348'
'NULL','NULL','348','val_348'
'NULL','NULL','348','val_348'
'NULL','NULL','351','val_351'
'NULL','NULL','353','val_353'
'NULL','NULL','353','val_353'
'NULL','NULL','356','val_356'
'NULL','NULL','360','val_360'
'NULL','NULL','362','val_362'
'NULL','NULL','364','val_364'
'NULL','NULL','365','val_365'
'NULL','NULL','366','val_366'
'NULL','NULL','367','val_367'
'NULL','NULL','367','val_367'
'NULL','NULL','368','val_368'
'NULL','NULL','369','val_369'
'NULL','NULL','369','val_369'
'NULL','NULL','369','val_369'
'NULL','NULL','373','val_373'
'NULL','NULL','374','val_374'
'NULL','NULL','375','val_375'
'NULL','NULL','377','val_377'
'NULL','NULL','378','val_378'
'NULL','NULL','379','val_379'
'NULL','NULL','382','val_382'
'NULL','NULL','382','val_382'
'NULL','NULL','384','val_384'
'NULL','NULL','384','val_384'
'NULL','NULL','384','val_384'
'NULL','NULL','386','val_386'
'NULL','NULL','389','val_389'
'NULL','NULL','392','val_392'
'NULL','NULL','393','val_393'
'NULL','NULL','394','val_394'
'NULL','NULL','395','val_395'
'NULL','NULL','395','val_395'
'NULL','NULL','396','val_396'
'NULL','NULL','396','val_396'
'NULL','NULL','396','val_396'
'NULL','NULL','397','val_397'
'NULL','NULL','397','val_397'
'NULL','NULL','399','val_399'
'NULL','NULL','399','val_399'
'NULL','NULL','400','val_400'
'NULL','NULL','401','val_401'
'NULL','NULL','401','val_401'
'NULL','NULL','401','val_401'
'NULL','NULL','401','val_401'
'NULL','NULL','401','val_401'
'NULL','NULL','402','val_402'
'NULL','NULL','403','val_403'
'NULL','NULL','403','val_403'
'NULL','NULL','403','val_403'
'NULL','NULL','404','val_404'
'NULL','NULL','404','val_404'
'NULL','NULL','406','val_406'
'NULL','NULL','406','val_406'
'NULL','NULL','406','val_406'
'NULL','NULL','406','val_406'
'NULL','NULL','407','val_407'
'NULL','NULL','409','val_409'
'NULL','NULL','409','val_409'
'NULL','NULL','409','val_409'
'NULL','NULL','411','val_411'
'NULL','NULL','413','val_413'
'NULL','NULL','413','val_413'
'NULL','NULL','414','val_414'
'NULL','NULL','414','val_414'
'NULL','NULL','417','val_417'
'NULL','NULL','417','val_417'
'NULL','NULL','417','val_417'
'NULL','NULL','418','val_418'
'NULL','NULL','419','val_419'
'NULL','NULL','421','val_421'
'NULL','NULL','424','val_424'
'NULL','NULL','424','val_424'
'NULL','NULL','427','val_427'
'NULL','NULL','429','val_429'
'NULL','NULL','429','val_429'
'NULL','NULL','430','val_430'
'NULL','NULL','430','val_430'
'NULL','NULL','430','val_430'
'NULL','NULL','431','val_431'
'NULL','NULL','431','val_431'
'NULL','NULL','431','val_431'
'NULL','NULL','432','val_432'
'NULL','NULL','435','val_435'
'NULL','NULL','436','val_436'
'NULL','NULL','437','val_437'
'NULL','NULL','438','val_438'
'NULL','NULL','438','val_438'
'NULL','NULL','438','val_438'
'NULL','NULL','439','val_439'
'NULL','NULL','439','val_439'
'NULL','NULL','443','val_443'
'NULL','NULL','444','val_444'
'NULL','NULL','446','val_446'
'NULL','NULL','448','val_448'
'NULL','NULL','449','val_449'
'NULL','NULL','452','val_452'
'NULL','NULL','453','val_453'
'NULL','NULL','454','val_454'
'NULL','NULL','454','val_454'
'NULL','NULL','454','val_454'
'NULL','NULL','455','val_455'
'NULL','NULL','457','val_457'
'NULL','NULL','458','val_458'
'NULL','NULL','458','val_458'
'NULL','NULL','459','val_459'
'NULL','NULL','459','val_459'
'NULL','NULL','460','val_460'
'NULL','NULL','462','val_462'
'NULL','NULL','462','val_462'
'NULL','NULL','463','val_463'
'NULL','NULL','463','val_463'
'NULL','NULL','466','val_466'
'NULL','NULL','466','val_466'
'NULL','NULL','466','val_466'
'NULL','NULL','467','val_467'
'NULL','NULL','468','val_468'
'NULL','NULL','468','val_468'
'NULL','NULL','468','val_468'
'NULL','NULL','468','val_468'
'NULL','NULL','469','val_469'
'NULL','NULL','469','val_469'
'NULL','NULL','469','val_469'
'NULL','NULL','469','val_469'
'NULL','NULL','469','val_469'
'NULL','NULL','470','val_470'
'NULL','NULL','472','val_472'
'NULL','NULL','475','val_475'
'NULL','NULL','477','val_477'
'NULL','NULL','478','val_478'
'NULL','NULL','478','val_478'
'NULL','NULL','479','val_479'
'NULL','NULL','480','val_480'
'NULL','NULL','480','val_480'
'NULL','NULL','480','val_480'
'NULL','NULL','481','val_481'
'NULL','NULL','482','val_482'
'NULL','NULL','483','val_483'
'NULL','NULL','484','val_484'
'NULL','NULL','485','val_485'
'NULL','NULL','487','val_487'
'NULL','NULL','489','val_489'
'NULL','NULL','489','val_489'
'NULL','NULL','489','val_489'
'NULL','NULL','489','val_489'
'NULL','NULL','490','val_490'
'NULL','NULL','491','val_491'
'NULL','NULL','492','val_492'
'NULL','NULL','492','val_492'
'NULL','NULL','493','val_493'
'NULL','NULL','494','val_494'
'NULL','NULL','495','val_495'
'NULL','NULL','496','val_496'
'NULL','NULL','497','val_497'
'NULL','NULL','498','val_498'
'NULL','NULL','498','val_498'
'NULL','NULL','498','val_498'
500 rows selected 
>>>  
>>>  insert overwrite table normal_join_results select * from smb_bucket4_1 a full outer join smb_bucket4_2 b on a.key = b.key;
INFO  : Compiling commandqueryId=(!!{queryId}!!): insert overwrite table normal_join_results select * from smb_bucket4_1 a full outer join smb_bucket4_2 b on a.key = b.key
INFO  : Semantic Analysis Completed
INFO  : Returning Hive schema: Schema(fieldSchemas:[FieldSchema(name:a.key, type:int, comment:null), FieldSchema(name:a.value, type:string, comment:null), FieldSchema(name:b.key, type:int, comment:null), FieldSchema(name:b.value, type:string, comment:null)], properties:null)
INFO  : Completed compiling commandqueryId=(!!{queryId}!!); Time taken: !!ELIDED!! seconds
INFO  : Executing commandqueryId=(!!{queryId}!!): insert overwrite table normal_join_results select * from smb_bucket4_1 a full outer join smb_bucket4_2 b on a.key = b.key
INFO  : PREHOOK: query: insert overwrite table normal_join_results select * from smb_bucket4_1 a full outer join smb_bucket4_2 b on a.key = b.key
INFO  : PREHOOK: type: QUERY
INFO  : PREHOOK: Input: smb_mapjoin_7@smb_bucket4_1
INFO  : PREHOOK: Input: smb_mapjoin_7@smb_bucket4_2
INFO  : PREHOOK: Output: smb_mapjoin_7@normal_join_results
WARN  : Hive-on-MR is deprecated in Hive 2 and may not be available in the future versions. Consider using a different execution engine (i.e. spark, tez) or using Hive 1.X releases.
INFO  : Query ID = !!{queryId}!!
INFO  : Total jobs = 1
INFO  : Launching Job 1 out of 1
INFO  : Starting task [Stage-1:MAPRED] in serial mode
INFO  : Number of reduce tasks not specified. Estimated from input data size: 1
INFO  : In order to change the average load for a reducer (in bytes):
INFO  :   set hive.exec.reducers.bytes.per.reducer=<number>
INFO  : In order to limit the maximum number of reducers:
INFO  :   set hive.exec.reducers.max=<number>
INFO  : In order to set a constant number of reducers:
INFO  :   set mapreduce.job.reduces=<number>
DEBUG : Configuring job !!{jobId}}!! with file:/!!ELIDED!! as the submit dir
DEBUG : adding the following namenodes' delegation tokens:[file:///]
DEBUG : Creating splits at file:/!!ELIDED!!
INFO  : number of splits:4
INFO  : Submitting tokens for job: !!{jobId}}!!
INFO  : The url to track the job: http://localhost:8080/
INFO  : Job running in-process (local Hadoop)
INFO  : Ended Job = !!{jobId}!!
INFO  : Starting task [Stage-0:MOVE] in serial mode
INFO  : Loading data to table smb_mapjoin_7.normal_join_results from file:/!!ELIDED!!
INFO  : Starting task [Stage-2:STATS] in serial mode
INFO  : POSTHOOK: query: insert overwrite table normal_join_results select * from smb_bucket4_1 a full outer join smb_bucket4_2 b on a.key = b.key
INFO  : POSTHOOK: type: QUERY
INFO  : POSTHOOK: Input: smb_mapjoin_7@smb_bucket4_1
INFO  : POSTHOOK: Input: smb_mapjoin_7@smb_bucket4_2
INFO  : POSTHOOK: Output: smb_mapjoin_7@normal_join_results
INFO  : POSTHOOK: Lineage: normal_join_results.k1 SIMPLE [(smb_bucket4_1)a.FieldSchema(name:key, type:int, comment:null), ]
INFO  : POSTHOOK: Lineage: normal_join_results.k2 SIMPLE [(smb_bucket4_2)b.FieldSchema(name:key, type:int, comment:null), ]
INFO  : POSTHOOK: Lineage: normal_join_results.v1 SIMPLE [(smb_bucket4_1)a.FieldSchema(name:value, type:string, comment:null), ]
INFO  : POSTHOOK: Lineage: normal_join_results.v2 SIMPLE [(smb_bucket4_2)b.FieldSchema(name:value, type:string, comment:null), ]
INFO  : MapReduce Jobs Launched: 
INFO  : Stage-Stage-1:  HDFS Read: 0 HDFS Write: 0 SUCCESS
INFO  : Total MapReduce CPU Time Spent: 0 msec
INFO  : Completed executing commandqueryId=(!!{queryId}!!); Time taken: !!ELIDED!! seconds
INFO  : OK
DEBUG : Shutting down query insert overwrite table normal_join_results select * from smb_bucket4_1 a full outer join smb_bucket4_2 b on a.key = b.key
No rows affected 
>>>  
>>>  select sum(hash(k1)) as k1, sum(hash(k2)) as k2, sum(hash(v1)) as v1, sum(hash(v2)) as v2 from normal_join_results;
INFO  : Compiling commandqueryId=(!!{queryId}!!): select sum(hash(k1)) as k1, sum(hash(k2)) as k2, sum(hash(v1)) as v1, sum(hash(v2)) as v2 from normal_join_results
INFO  : Semantic Analysis Completed
INFO  : Returning Hive schema: Schema(fieldSchemas:[FieldSchema(name:k1, type:bigint, comment:null), FieldSchema(name:k2, type:bigint, comment:null), FieldSchema(name:v1, type:bigint, comment:null), FieldSchema(name:v2, type:bigint, comment:null)], properties:null)
INFO  : Completed compiling commandqueryId=(!!{queryId}!!); Time taken: !!ELIDED!! seconds
INFO  : Executing commandqueryId=(!!{queryId}!!): select sum(hash(k1)) as k1, sum(hash(k2)) as k2, sum(hash(v1)) as v1, sum(hash(v2)) as v2 from normal_join_results
INFO  : PREHOOK: query: select sum(hash(k1)) as k1, sum(hash(k2)) as k2, sum(hash(v1)) as v1, sum(hash(v2)) as v2 from normal_join_results
INFO  : PREHOOK: type: QUERY
INFO  : PREHOOK: Input: smb_mapjoin_7@normal_join_results
INFO  : PREHOOK: Output: file:/!!ELIDED!!
WARN  : Hive-on-MR is deprecated in Hive 2 and may not be available in the future versions. Consider using a different execution engine (i.e. spark, tez) or using Hive 1.X releases.
INFO  : Query ID = !!{queryId}!!
INFO  : Total jobs = 1
INFO  : Launching Job 1 out of 1
INFO  : Starting task [Stage-1:MAPRED] in serial mode
INFO  : Number of reduce tasks determined at compile time: 1
INFO  : In order to change the average load for a reducer (in bytes):
INFO  :   set hive.exec.reducers.bytes.per.reducer=<number>
INFO  : In order to limit the maximum number of reducers:
INFO  :   set hive.exec.reducers.max=<number>
INFO  : In order to set a constant number of reducers:
INFO  :   set mapreduce.job.reduces=<number>
DEBUG : Configuring job !!{jobId}}!! with file:/!!ELIDED!! as the submit dir
DEBUG : adding the following namenodes' delegation tokens:[file:///]
DEBUG : Creating splits at file:/!!ELIDED!!
INFO  : number of splits:1
INFO  : Submitting tokens for job: !!{jobId}}!!
INFO  : The url to track the job: http://localhost:8080/
INFO  : Job running in-process (local Hadoop)
INFO  : Ended Job = !!{jobId}!!
INFO  : POSTHOOK: query: select sum(hash(k1)) as k1, sum(hash(k2)) as k2, sum(hash(v1)) as v1, sum(hash(v2)) as v2 from normal_join_results
INFO  : POSTHOOK: type: QUERY
INFO  : POSTHOOK: Input: smb_mapjoin_7@normal_join_results
INFO  : POSTHOOK: Output: file:/!!ELIDED!!
INFO  : MapReduce Jobs Launched: 
INFO  : Stage-Stage-1:  HDFS Read: 0 HDFS Write: 0 SUCCESS
INFO  : Total MapReduce CPU Time Spent: 0 msec
INFO  : Completed executing commandqueryId=(!!{queryId}!!); Time taken: !!ELIDED!! seconds
INFO  : OK
DEBUG : Shutting down query select sum(hash(k1)) as k1, sum(hash(k2)) as k2, sum(hash(v1)) as v1, sum(hash(v2)) as v2 from normal_join_results
'k1','k2','v1','v2'
'0','130091','0','36210398070'
1 row selected 
>>>  select sum(hash(k1)) as k1, sum(hash(k2)) as k2, sum(hash(v1)) as v1, sum(hash(v2)) as v2 from smb_join_results;
INFO  : Compiling commandqueryId=(!!{queryId}!!): select sum(hash(k1)) as k1, sum(hash(k2)) as k2, sum(hash(v1)) as v1, sum(hash(v2)) as v2 from smb_join_results
INFO  : Semantic Analysis Completed
INFO  : Returning Hive schema: Schema(fieldSchemas:[FieldSchema(name:k1, type:bigint, comment:null), FieldSchema(name:k2, type:bigint, comment:null), FieldSchema(name:v1, type:bigint, comment:null), FieldSchema(name:v2, type:bigint, comment:null)], properties:null)
INFO  : Completed compiling commandqueryId=(!!{queryId}!!); Time taken: !!ELIDED!! seconds
INFO  : Executing commandqueryId=(!!{queryId}!!): select sum(hash(k1)) as k1, sum(hash(k2)) as k2, sum(hash(v1)) as v1, sum(hash(v2)) as v2 from smb_join_results
INFO  : PREHOOK: query: select sum(hash(k1)) as k1, sum(hash(k2)) as k2, sum(hash(v1)) as v1, sum(hash(v2)) as v2 from smb_join_results
INFO  : PREHOOK: type: QUERY
INFO  : PREHOOK: Input: smb_mapjoin_7@smb_join_results
INFO  : PREHOOK: Output: file:/!!ELIDED!!
WARN  : Hive-on-MR is deprecated in Hive 2 and may not be available in the future versions. Consider using a different execution engine (i.e. spark, tez) or using Hive 1.X releases.
INFO  : Query ID = !!{queryId}!!
INFO  : Total jobs = 1
INFO  : Launching Job 1 out of 1
INFO  : Starting task [Stage-1:MAPRED] in serial mode
INFO  : Number of reduce tasks determined at compile time: 1
INFO  : In order to change the average load for a reducer (in bytes):
INFO  :   set hive.exec.reducers.bytes.per.reducer=<number>
INFO  : In order to limit the maximum number of reducers:
INFO  :   set hive.exec.reducers.max=<number>
INFO  : In order to set a constant number of reducers:
INFO  :   set mapreduce.job.reduces=<number>
DEBUG : Configuring job !!{jobId}}!! with file:/!!ELIDED!! as the submit dir
DEBUG : adding the following namenodes' delegation tokens:[file:///]
DEBUG : Creating splits at file:/!!ELIDED!!
INFO  : number of splits:1
INFO  : Submitting tokens for job: !!{jobId}}!!
INFO  : The url to track the job: http://localhost:8080/
INFO  : Job running in-process (local Hadoop)
INFO  : Ended Job = !!{jobId}!!
INFO  : POSTHOOK: query: select sum(hash(k1)) as k1, sum(hash(k2)) as k2, sum(hash(v1)) as v1, sum(hash(v2)) as v2 from smb_join_results
INFO  : POSTHOOK: type: QUERY
INFO  : POSTHOOK: Input: smb_mapjoin_7@smb_join_results
INFO  : POSTHOOK: Output: file:/!!ELIDED!!
INFO  : MapReduce Jobs Launched: 
INFO  : Stage-Stage-1:  HDFS Read: 0 HDFS Write: 0 SUCCESS
INFO  : Total MapReduce CPU Time Spent: 0 msec
INFO  : Completed executing commandqueryId=(!!{queryId}!!); Time taken: !!ELIDED!! seconds
INFO  : OK
DEBUG : Shutting down query select sum(hash(k1)) as k1, sum(hash(k2)) as k2, sum(hash(v1)) as v1, sum(hash(v2)) as v2 from smb_join_results
'k1','k2','v1','v2'
'0','130091','0','36210398070'
1 row selected 
>>>  select sum(hash(k1)) as k1, sum(hash(k2)) as k2, sum(hash(v1)) as v1, sum(hash(v2)) as v2 from smb_join_results_empty_bigtable;
INFO  : Compiling commandqueryId=(!!{queryId}!!): select sum(hash(k1)) as k1, sum(hash(k2)) as k2, sum(hash(v1)) as v1, sum(hash(v2)) as v2 from smb_join_results_empty_bigtable
INFO  : Semantic Analysis Completed
INFO  : Returning Hive schema: Schema(fieldSchemas:[FieldSchema(name:k1, type:bigint, comment:null), FieldSchema(name:k2, type:bigint, comment:null), FieldSchema(name:v1, type:bigint, comment:null), FieldSchema(name:v2, type:bigint, comment:null)], properties:null)
INFO  : Completed compiling commandqueryId=(!!{queryId}!!); Time taken: !!ELIDED!! seconds
INFO  : Executing commandqueryId=(!!{queryId}!!): select sum(hash(k1)) as k1, sum(hash(k2)) as k2, sum(hash(v1)) as v1, sum(hash(v2)) as v2 from smb_join_results_empty_bigtable
INFO  : PREHOOK: query: select sum(hash(k1)) as k1, sum(hash(k2)) as k2, sum(hash(v1)) as v1, sum(hash(v2)) as v2 from smb_join_results_empty_bigtable
INFO  : PREHOOK: type: QUERY
INFO  : PREHOOK: Input: smb_mapjoin_7@smb_join_results_empty_bigtable
INFO  : PREHOOK: Output: file:/!!ELIDED!!
WARN  : Hive-on-MR is deprecated in Hive 2 and may not be available in the future versions. Consider using a different execution engine (i.e. spark, tez) or using Hive 1.X releases.
INFO  : Query ID = !!{queryId}!!
INFO  : Total jobs = 1
INFO  : Launching Job 1 out of 1
INFO  : Starting task [Stage-1:MAPRED] in serial mode
INFO  : Number of reduce tasks determined at compile time: 1
INFO  : In order to change the average load for a reducer (in bytes):
INFO  :   set hive.exec.reducers.bytes.per.reducer=<number>
INFO  : In order to limit the maximum number of reducers:
INFO  :   set hive.exec.reducers.max=<number>
INFO  : In order to set a constant number of reducers:
INFO  :   set mapreduce.job.reduces=<number>
DEBUG : Configuring job !!{jobId}}!! with file:/!!ELIDED!! as the submit dir
DEBUG : adding the following namenodes' delegation tokens:[file:///]
DEBUG : Creating splits at file:/!!ELIDED!!
INFO  : number of splits:1
INFO  : Submitting tokens for job: !!{jobId}}!!
INFO  : The url to track the job: http://localhost:8080/
INFO  : Job running in-process (local Hadoop)
INFO  : Ended Job = !!{jobId}!!
INFO  : POSTHOOK: query: select sum(hash(k1)) as k1, sum(hash(k2)) as k2, sum(hash(v1)) as v1, sum(hash(v2)) as v2 from smb_join_results_empty_bigtable
INFO  : POSTHOOK: type: QUERY
INFO  : POSTHOOK: Input: smb_mapjoin_7@smb_join_results_empty_bigtable
INFO  : POSTHOOK: Output: file:/!!ELIDED!!
INFO  : MapReduce Jobs Launched: 
INFO  : Stage-Stage-1:  HDFS Read: 0 HDFS Write: 0 SUCCESS
INFO  : Total MapReduce CPU Time Spent: 0 msec
INFO  : Completed executing commandqueryId=(!!{queryId}!!); Time taken: !!ELIDED!! seconds
INFO  : OK
DEBUG : Shutting down query select sum(hash(k1)) as k1, sum(hash(k2)) as k2, sum(hash(v1)) as v1, sum(hash(v2)) as v2 from smb_join_results_empty_bigtable
'k1','k2','v1','v2'
'0','130091','0','36210398070'
1 row selected 
>>>  
>>>  
>>>  
>>>  
>>>  
>>>  
>>>  !record
